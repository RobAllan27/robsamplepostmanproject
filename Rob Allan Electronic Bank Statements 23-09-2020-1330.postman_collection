{
	"info": {
		"_postman_id": "5b41b8f4-c19b-461a-bf3c-852f2d211d0c",
		"name": "Rob Allan Electronic Bank Statements TFA 23-09-2020-1330",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Notifications APIs (to Relie)",
			"item": [
				{
					"name": "RI_IntegrationClient_ClientCreds for Mock Valid Creds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "425dee0a-21fe-416a-8ad4-1eecb460913a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RI_AuthMockIDToken\", jsonData.access_token);\r",
									"\r",
									"pm.test(\"Get Sys APEX Authentication Token - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Sys APEX Authentication Token - Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Sys APEX Authentication Token - includes a 3600 expires token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Sys APEX Authentication Token - includes a token_type equal to Bearer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.eql('Bearer');\r",
									"});\r",
									"\r",
									"pm.test(\"Get Sys APEX Authentication Token - is at least 100 characters\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token.length).to.be.above(100);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Sys APEX Authentication Token - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Sys APEX Authentication Token - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=UTF-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Sys APEX Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{RI_IC_Mock_ClientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{RI_IC_Mock_ClientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "https://{{RI_Host}}/connect/token",
							"protocol": "https",
							"host": [
								"{{RI_Host}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "RI_IntegrationClient_ClientCredentials_QA_TFAL",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{RI_IC_ClientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{RI_IC_ClientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "https://{{RI_Host}}/connect/token",
									"protocol": "https",
									"host": [
										"{{RI_Host}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 00:35:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkQwMUYyNzU3QkU3MDI2QkRBNjM1MkQ5QTBBNDUwNDU4RDMyNjAyN0IiLCJ0eXAiOiJKV1QiLCJ4NXQiOiIwQjhuVjc1d0pyMm1OUzJhQ2tVRVdOTW1BbnMifQ.eyJuYmYiOjE1OTU4OTY1MDUsImV4cCI6MTU5NTkwMDEwNSwiaXNzIjoiaHR0cHM6Ly9pZC5yZWxpZWNoZWNrLmNvbS5hdSIsImF1ZCI6WyJodHRwczovL2lkLnJlbGllY2hlY2suY29tLmF1L3Jlc291cmNlcyIsInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdLCJjbGllbnRfaWQiOiJyYV9pbnRfcWFfdGZhbCIsInNjb3BlIjpbInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdfQ.dcFJP26noZa3BPafA17hK9O0_19ksKmw_lLxZa2kPoHvti4rltRKaDp7XnQvl4nhG3ulMd5a3yemaXxxq6RS5i5pOx6vc5_oJR8mukTox-5HCe1X8icRqMH6Jp8mToZpMkquQ2uxq9h5MV9w7gqZsEGJoQ3uW002GS94a7W9n7xzk88ZZLog2uuLfNRe31NoNjPnEr-4bx1URmPJvW7KlItbO3AdHiRiAlkKpX7ElOcGWlzebFrijMG3-X-5pGvTn3Scye1xZ0UKmmRdXFNfMxOnK-PmPPBdJfnvwrqJayZ2F5JmbhF-U7Qodu3QTYiLa4bsVT8EZVI-AfCWTKXqFABU7JMp6bMsLaQerBcDVxFEtDw9IFwYKr50ELJDNjR7_Cj4f_4clBYrsHpElVBsgSAvXkjhamED8e_N3HazhciIhLdPJvX7UNkrVLim0rN0OP3ZCUvIAi4QAQ8asTI5_gFJkBcyS1QVyw2pL-nkx5PrEmzoHglvgJ988yxMpLm4pvKVGgU9OY5uIzWvqjl0Sxnp8oP12R3sqF1jehsciMws-c-K4F9Pcme57iL2UoGZoLV61BAr9uS2ZZCX7E3-egYkzIsmVmVYczOGY9opzfT5oJniWntHA5iOiF-V7LtFrYtBNZQ3FW6jshtFTEm4UOGSTlSihOA6rBZZRBQLJV4\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\"\n}"
						}
					]
				},
				{
					"name": "Get application Status History",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}/status/history",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{RA_ApplicationId}}",
								"status",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Applicant Status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicant/{{RA_ApplicantId1}}/status/history",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicant",
								"{{RA_ApplicantId1}}",
								"status",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the status of an application",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}/status?applicantrollups=true",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{RA_ApplicationId}}",
								"status"
							],
							"query": [
								{
									"key": "applicantrollups",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the status of an application Copy",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/26d70532-e23f-4a3b-bb43-4a3c0a339bbf/status?applicantrollups=true",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"26d70532-e23f-4a3b-bb43-4a3c0a339bbf",
								"status"
							],
							"query": [
								{
									"key": "applicantrollups",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Set the Status of an Application",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"statusCode\": \"ASS_CREATED\"\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/{{RA_AssessmentId}}/status",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"{{RA_AssessmentId}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set the Status of an Assessment Copy",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"statusCode\": \"ASS_COMPLETED\"\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/status",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send a Web Hook Notification of Status Change BOOMIDEV1",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthMockIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ebsNotification\": {\r\n        \"headers\": {\r\n            \"correlationId\": \"\",\r\n            \"clientId\": \"\",\r\n            \"serviceChannel\": \"2020-07-15T02:35:00.000Z\",\r\n            \"timeStamp\": \"\"\r\n        },\r\n        \"requestPayload\": {\r\n            \"shortCode\": \"ASS_CREATED\",\r\n            \"type\": \"assessment\",\r\n            \"datestamp\": \"2020-07-15T02:35:00.000Z\",\r\n            \"statusContextData\": {\r\n                \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\r\n                \"applicationId\": \"c303509c-8f43-4f72-910d-d3fab6583898\",\r\n                \"assessmentId\": \"cb9fab0b-4ed8-4953-9a8a-56d6648fa55d\",\r\n                \"additionalInfo\":\"\"\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/wh/sen/{{RA_WebhookICShortCode}}/{{RA_WebhookNotifyType}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"wh",
								"sen",
								"{{RA_WebhookICShortCode}}",
								"{{RA_WebhookNotifyType}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send a Web Hook Notification of Status Change BOOMISIT",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthMockIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"assessmentId\": \"cb9fab0b-4ed8-4953-9a8a-56d6648fa55d\",\r\n        \"statusCode\": \"ASS_SUBMITTED\",\r\n        \"prevStatusCode\": \"ASS_CREATED\",\r\n        \"dateStamp\": \"2020-08-24T03:28:23.741Z\",\r\n        \"ctx\": {\r\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\r\n            \"applicationId\": \"c303509c-8f43-4f72-910d-d3fab6583898\",\r\n            \"assessmentId\": \"cb9fab0b-4ed8-4953-9a8a-56d6648fa55d\",\r\n            \"applicantId\": null,\r\n            \"triggeredByRelieUserId\": null,\r\n            \"currentApplicationStatus\": null\r\n        }\r\n    }",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/wh/sen/{{RA_WebhookICShortCodeforBoomiDEV}}/{{RA_WebhookNotifyType}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"wh",
								"sen",
								"{{RA_WebhookICShortCodeforBoomiDEV}}",
								"{{RA_WebhookNotifyType}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "This will hold the notifications APIs",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dell Boomi Stub Notification",
			"item": [
				{
					"name": "Notification being sent to Dell Boomi Dev Environment Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33f4e36c-5100-48f0-80d0-0afed5044dad",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Call Dell Boomi Notification Stub - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Call Dell Boomi Notification Stub - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Call Dell Boomi Notification Stub - acknowledegementStatus is Success\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.acknowledegementStatus).to.eql(\"Success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Call Dell Boomi Notification Stub - errorDetails are empty\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorDetails.errorCode.length).to.eql(0);\r",
									"    pm.expect(jsonData.errorDetails.errorDescription.length).to.eql(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Call Dell Boomi Notification Stub - requestPayload has right header values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorDetails.additionalInfo.requestPayload.ebsNotification.requestPayload.shortCode).to.eql(\"ASS_CREATED\");\r",
									"    pm.expect(jsonData.errorDetails.additionalInfo.requestPayload.ebsNotification.requestPayload.type).to.eql(\"assessment\");\r",
									"});\r",
									"\r",
									"pm.test(\"Call Dell Boomi Notification Stub - statusContextData are GUID values\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.errorDetails.additionalInfo.ebsNotification.requestPayload.statusContextData.domainId)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.errorDetails.additionalInfo.ebsNotification.requestPayload.statusContextData.applicationId)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.errorDetails.additionalInfo.ebsNotification.requestPayload.statusContextData.assessmentId)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Call Dell Boomi Notification Stub  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9514bce9-a06b-49c7-b754-2b7c649c1d24",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "b81d2779-9010-4902-89f0-732e6e510e6a",
									"type": "string"
								},
								{
									"key": "username",
									"value": "relie@toyotafinance-2B02DW",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "a7862782-e69d-456c-8650-703ec23276ce"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ebsNotification\": {\n        \"headers\": {\n            \"correlationId\": \"\",\n            \"clientId\": \"\",\n            \"serviceChannel\": \"2020-07-15T02:35:00.000Z\",\n            \"timeStamp\": \"\"\n        },\n        \"requestPayload\": {\n            \"shortCode\": \"ASS_CREATED\",\n            \"type\": \"assessment\",\n            \"datestamp\": \"2020-07-15T02:35:00.000Z\",\n            \"statusContextData\": {\n                \"domainId\": \"pp2fe48fb4-9c98-434d-974f-e870473f7011\",\n                \"applicationId\": \"pp2fe48fb4-9c98-434d-974f-e870473f7012\",\n                \"assessmentId\": \"pp2fe48fb4-9c98-434d-974f-e870473f7013\",\n                \"additionalInfo\":\"\"\n            }\n        }\n    }\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://api-sit.tfal.com.au/ws/rest/customer/ebs/notifications/inbound",
							"protocol": "https",
							"host": [
								"api-sit",
								"tfal",
								"com",
								"au"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"notifications",
								"inbound"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dell Boomi Interfaces (towards Relie) ",
			"item": [
				{
					"name": "API Login Valid Creds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ac37b8e-580d-4838-bb22-f0cd0c15341d",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RI_AuthIDToken\", jsonData.access_token);\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - includes a 3600 expires token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - includes a token_type equal to Bearer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.eql('Bearer');\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - is at least 100 characters\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token.length).to.be.above(100);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=UTF-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{RI_IC_ClientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{RI_IC_ClientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "https://{{RI_Host}}/connect/token",
							"protocol": "https",
							"host": [
								"{{RI_Host}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "RI_IntegrationClient_ClientCredentials_QA_TFAL",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{RI_IC_ClientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{RI_IC_ClientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "https://{{RI_Host}}/connect/token",
									"protocol": "https",
									"host": [
										"{{RI_Host}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 00:35:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkQwMUYyNzU3QkU3MDI2QkRBNjM1MkQ5QTBBNDUwNDU4RDMyNjAyN0IiLCJ0eXAiOiJKV1QiLCJ4NXQiOiIwQjhuVjc1d0pyMm1OUzJhQ2tVRVdOTW1BbnMifQ.eyJuYmYiOjE1OTU4OTY1MDUsImV4cCI6MTU5NTkwMDEwNSwiaXNzIjoiaHR0cHM6Ly9pZC5yZWxpZWNoZWNrLmNvbS5hdSIsImF1ZCI6WyJodHRwczovL2lkLnJlbGllY2hlY2suY29tLmF1L3Jlc291cmNlcyIsInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdLCJjbGllbnRfaWQiOiJyYV9pbnRfcWFfdGZhbCIsInNjb3BlIjpbInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdfQ.dcFJP26noZa3BPafA17hK9O0_19ksKmw_lLxZa2kPoHvti4rltRKaDp7XnQvl4nhG3ulMd5a3yemaXxxq6RS5i5pOx6vc5_oJR8mukTox-5HCe1X8icRqMH6Jp8mToZpMkquQ2uxq9h5MV9w7gqZsEGJoQ3uW002GS94a7W9n7xzk88ZZLog2uuLfNRe31NoNjPnEr-4bx1URmPJvW7KlItbO3AdHiRiAlkKpX7ElOcGWlzebFrijMG3-X-5pGvTn3Scye1xZ0UKmmRdXFNfMxOnK-PmPPBdJfnvwrqJayZ2F5JmbhF-U7Qodu3QTYiLa4bsVT8EZVI-AfCWTKXqFABU7JMp6bMsLaQerBcDVxFEtDw9IFwYKr50ELJDNjR7_Cj4f_4clBYrsHpElVBsgSAvXkjhamED8e_N3HazhciIhLdPJvX7UNkrVLim0rN0OP3ZCUvIAi4QAQ8asTI5_gFJkBcyS1QVyw2pL-nkx5PrEmzoHglvgJ988yxMpLm4pvKVGgU9OY5uIzWvqjl0Sxnp8oP12R3sqF1jehsciMws-c-K4F9Pcme57iL2UoGZoLV61BAr9uS2ZZCX7E3-egYkzIsmVmVYczOGY9opzfT5oJniWntHA5iOiF-V7LtFrYtBNZQ3FW6jshtFTEm4UOGSTlSihOA6rBZZRBQLJV4\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\"\n}"
						}
					]
				},
				{
					"name": "Create New Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f67a3040-0875-4eae-8913-b03547d2f1f1",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Create New Application via DB - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Acknowledgement contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.acknowledegementStatus).to.eql(\"Success\");\r",
									"    pm.expect(jsonData.correlationId).to.eql(\"Success\");\r",
									"    pm.expect(jsonData.message).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f9459236-2921-4b43-bccb-1dc0f0c887f4",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{DB_SITAuth}}"
							},
							{
								"key": "x-api-key",
								"value": "{{DB_XAPI_Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"createApplication\": {\n    \"headers\": {\n      \"timeStamp\": \"20200911T041819.897 GMT\",\n      \"clientId\": \"Pega\",\n      \"serviceChannel\": \"Quantum\",\n      \"correlationId\": \"abcdeRALLAN3331--{{sequenceIdentifier}}\"\n    },\n    \"requestPayload\": {\n      \"title\": \"{{titleValue}}\",\n      \"domainId\": \"{{RA_DomainId}}\",\n      \"description\": \"{{descriptionValue}}\",\n      \"customReference\": [\n       \"QUANTUM-7ab1d8221db4\",\n        \"QUANTUM-7ab1d8221db4abc\",\n         \"QUANTUM-7ab1d8221db4def\",\n         \"{{externalReference1Value}}\",\n        \"{{externalReference2Value}}\"\n        ],\n      \"attributes\": [\n        {\n          \"value\": {\n            \"Brand\": \"LEXUS\",\n            \"applicationType\": \"Sole\",\n            \"loanRepaymentAmount\": 741,\n            \"bmEmailAddress\": \"mail@mail.com\",\n            \"bmContact\": \"\",\n            \"bmName\": \"PAU_BM1\"\n          },\n          \"name\": \"tfalParticulars\"\n        },\n        {\n          \"value\": {\n            \"foodGroceries\": 451,\n            \"lifestyleRecreationAlcoholSport\": 50,\n            \"insuranceMotorVehicle\": 50,\n            \"personalHealthcareAndPetcare\": 30,\n            \"vehicles\": 221,\n            \"clothingFootwearAdult\": 82,\n            \"communicationConnectivity\": 39\n          },\n          \"name\": \"tfalDynamicThresholds\"\n        },\n        {\n          \"value\": {\n            \"foodGroceries\": 500,\n            \"lifestyleRecreationAlcoholSport\": 130,\n            \"personalHealthcareAndPetcare\": 40,\n            \"transport\": 20,\n            \"homewaresApplicancesFurnishing\": 30,\n            \"clothingFootwearAdult\": 100\n          },\n          \"name\": \"tfalDynamicBenchmarks\"\n        }\n      ]\n    }\n  }\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{DB_SITHost}}/ws/rest/customer/ebs/application/create",
							"protocol": "https",
							"host": [
								"{{DB_SITHost}}"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"application",
								"create"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Create New Application with more attributes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d551ed36-3e9f-40bb-b7f2-5deec7055178",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Create New Application via DB - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Acknowledgement contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.acknowledegementStatus).to.eql(\"Success\");\r",
									"    pm.expect(jsonData.correlationId).to.eql(\"Success\");\r",
									"    pm.expect(jsonData.message).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "89b34d95-a077-4a24-934a-116fc2d06d47",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{DB_SITAuth}}"
							},
							{
								"key": "x-api-key",
								"value": "{{DB_XAPI_Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"createApplication\": {\n    \"headers\": {\n      \"timeStamp\": \"20200911T041819.897 GMT\",\n      \"clientId\": \"Pega\",\n      \"serviceChannel\": \"Quantum\",\n      \"correlationId\": \"abcdeRALLAN3331--{{sequenceIdentifier}}\"\n    },\n    \"requestPayload\": {\n      \"title\": \"{{titleValue}}\",\n      \"domainId\": \"{{RA_DomainId}}\",\n      \"description\": \"{{descriptionValue}}\",\n      \"customReference\": [\n       \"QUANTUM-7ab1d8221db4\",\n        \"QUANTUM-7ab1d8221db4abc\",\n         \"QUANTUM-7ab1d8221db4def\",\n         \"{{externalReference1Value}}\",\n        \"{{externalReference2Value}}\"\n        ],\n        \"applicationId\": \"c6d0d667-c4be-403a-b5b3-24757e17cdc5\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"SoleNonApplicantSpouse\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":1,\n        \"homeUtilitiesWhiteGoodsRepairs\":2,\n         \"publicSchoolingHigherEducation\":3,\n         \"personalHealthcareAndPetcare\":4,\n         \"clothingFootwearDependents\":5,\n         \"childcare\":6,\n         \"communicationConnectivity\":7,\n         \"insuranceHouseContents\":8,\n         \"homewaresApplicancesFurnishing\":9,\n         \"clothingFootwearAdult\":10,\n         \"lifestyleRecreationAlcoholSport\":11,\n         \"subscriptionMembershipExpertFees\":12,\n         \"vehicles\":13,\n         \"transport\":14,\n         \"insuranceMotorVehicle\":15,\n         \"insuranceHealthPersonalOther\":16,\n         \"childSpousalMaintenance\":17,\n         \"privateSchoolingTuition\":18,\n         \"gamblingTobacco\":19,\n         \"primaryHomeLandTaxBodyCorp\":20,\n         \"investmentSecondPropertyExpenses\":21\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":101,\n        \"homeUtilitiesWhiteGoodsRepairs\":102,\n         \"publicSchoolingHigherEducation\":103,\n         \"personalHealthcareAndPetcare\":104,\n         \"clothingFootwearDependents\":105,\n         \"childcare\":106,\n         \"communicationConnectivity\":107,\n         \"insuranceHouseContents\":108,\n         \"homewaresApplicancesFurnishing\":109,\n         \"clothingFootwearAdult\":110,\n         \"lifestyleRecreationAlcoholSport\":111,\n         \"subscriptionMembershipExpertFees\":112,\n         \"vehicles\":113,\n         \"transport\":114,\n         \"insuranceMotorVehicle\":115,\n         \"insuranceHealthPersonalOther\":116,\n         \"childSpousalMaintenance\":117,\n         \"privateSchoolingTuition\":118,\n         \"gamblingTobacco\":119,\n         \"primaryHomeLandTaxBodyCorp\":120,\n         \"investmentSecondPropertyExpenses\":121\n      }\n    }\n  ]\n\n\n\n    }\n  }\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{DB_SITHost}}/ws/rest/customer/ebs/application/create",
							"protocol": "https",
							"host": [
								"{{DB_SITHost}}"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"application",
								"create"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Application Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13743ea4-5efa-46d5-8737-e8a22e2a3379",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
									"\r",
									"pm.test(\"Get Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - domain ids are equal\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - No applicants at this stage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants.length).to.eql(0);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Application - Contents are Correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"newlyCreatedApplicationId\");\r",
									"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
									"    var expectedDomainId = postman.getEnvironmentVariable(\"RA_DomainId\");\r",
									"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
									"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_CREATED\");\r",
									"    pm.expect(jsonData.title).to.eql(expectedTitleValue);\r",
									"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.domain.id).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
									"    pm.expect(jsonData.applicants.length).to.eql(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
									"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
									"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"/**\r",
									" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
									" *\r",
									" * @param {array} firstArray\r",
									" * @param {array} secondArray\r",
									" *\r",
									" * @returns {boolean}\r",
									" */\r",
									"function arraysSameElements(firstArray, secondArray) {\r",
									"  if (firstArray.length !== secondArray.length) {\r",
									"    return false;\r",
									"  }\r",
									"  return secondArray.every(function (value) {\r",
									"    return (firstArray.indexOf(value) >= 0);\r",
									"  });\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "393137aa-541a-466b-b5ad-46ea0dfcc306",
								"exec": [
									"/*postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");\r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{newlyCreatedApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{newlyCreatedApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88f34f8b-6cfe-4529-977e-164b61346d76",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Create New Application via DB - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Acknowledgement contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.acknowledegementStatus).to.eql(\"Success\");\r",
									"    pm.expect(jsonData.correlationId).to.eql(\"Success\");\r",
									"    pm.expect(jsonData.message).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "447654c8-eed8-4cb5-85bd-96ca98ce8337",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{DB_SITAuth}}"
							},
							{
								"key": "x-api-key",
								"value": "{{DB_XAPI_Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"createApplication\": {\n    \"headers\": {\n      \"timeStamp\": \"20200911T041819.897 GMT\",\n      \"clientId\": \"Pega\",\n      \"serviceChannel\": \"Quantum\",\n      \"correlationId\": \"abcdeRALLAN3347--{{sequenceIdentifier}}\"\n    },\n    \"requestPayload\": {\n      \"title\": \"{{titleValue}}\",\n      \"domainId\": \"{{RA_DomainId}}\",\n      \"description\": \"{{descriptionValue}}\",\n      \"customReference\": [\n       \"UANTUM-7ab1d8221db4\",\n        \"QUANTUM-7ab1d8221db4abc\",\n         \"QUANTUM-7ab1d8221db4def\",\n         \"{{externalReference1Value}}\",\n        \"{{externalReference2Value}}\"\n        ],\n        \"applicationId\":\"{{newlyCreatedApplicationId}}\",\n      \"attributes\": [\n        {\n          \"value\": {\n            \"Brand\": \"LEXUS\",\n            \"applicationType\": \"Sole\",\n            \"loanRepaymentAmount\": 741,\n            \"bmEmailAddress\": \"mail@mail.com\",\n            \"bmContact\": \"\",\n            \"bmName\": \"PAU_BM1\"\n          },\n          \"name\": \"tfalParticulars\"\n        },\n        {\n          \"value\": {\n            \"foodGroceries\": 451,\n            \"lifestyleRecreationAlcoholSport\": 50,\n            \"insuranceMotorVehicle\": 50,\n            \"personalHealthcareAndPetcare\": 30,\n            \"vehicles\": 221,\n            \"clothingFootwearAdult\": 82,\n            \"communicationConnectivity\": 39\n          },\n          \"name\": \"tfalDynamicThresholds\"\n        },\n        {\n          \"value\": {\n            \"foodGroceries\": 500,\n            \"lifestyleRecreationAlcoholSport\": 130,\n            \"personalHealthcareAndPetcare\": 40,\n            \"transport\": 20,\n            \"homewaresApplicancesFurnishing\": 30,\n            \"clothingFootwearAdult\": 100\n          },\n          \"name\": \"tfalDynamicBenchmarks\"\n        }\n      ]\n    }\n  }\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{DB_SITHost}}/ws/rest/customer/ebs/application/update",
							"protocol": "https",
							"host": [
								"{{DB_SITHost}}"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"application",
								"update"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Application Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da93f829-c7a5-4519-bcb3-161aaf81e1fb",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
									"\r",
									"pm.test(\"Get Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - domain ids are equal\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - No applicants at this stage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants.length).to.eql(0);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Application - Contents are Correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"newlyCreatedApplicationId\");\r",
									"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
									"    var expectedDomainId = postman.getEnvironmentVariable(\"RA_DomainId\");\r",
									"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
									"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_CREATED\");\r",
									"    pm.expect(jsonData.title).to.eql(expectedTitleValue);\r",
									"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.domain.id).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
									"    pm.expect(jsonData.applicants.length).to.eql(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
									"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
									"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"/**\r",
									" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
									" *\r",
									" * @param {array} firstArray\r",
									" * @param {array} secondArray\r",
									" *\r",
									" * @returns {boolean}\r",
									" */\r",
									"function arraysSameElements(firstArray, secondArray) {\r",
									"  if (firstArray.length !== secondArray.length) {\r",
									"    return false;\r",
									"  }\r",
									"  return secondArray.every(function (value) {\r",
									"    return (firstArray.indexOf(value) >= 0);\r",
									"  });\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b7ab0c59-3fd8-4f4e-b400-68e79c79d78d",
								"exec": [
									"/*postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");\r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{newlyCreatedApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{newlyCreatedApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Create Applicant - Alphie Alphabet - Create and Link new Relie User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9bdf690f-61a3-4695-b469-87b3906526b7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Create New Application via DB - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Acknowledgement contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.acknowledegementStatus).to.eql(\"Success\");\r",
									"    pm.expect(jsonData.correlationId).to.eql(\"abcdeRALLAN3332--\"+postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									"    pm.expect(jsonData.message).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "adadf430-e443-436a-bc5d-a9b10f991667",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforAlphie = \"alphie.alphabet.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{DB_SITAuth}}"
							},
							{
								"key": "x-api-key",
								"value": "{{DB_XAPI_Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addApplicant\": {\n    \"headers\": {\n      \"timeStamp\": \"20200911T041819.897 GMT\",\n      \"clientId\": \"Pega\",\n      \"serviceChannel\": \"Quantum\",\n      \"correlationId\": \"abcdeRALLAN3332--{{sequenceIdentifier}}\"\n    },\n    \"requestPayload\": {\n  \"alias\": \"Alphie Alphabet\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Smith (nee Qiao)\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{newlyCreatedApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n    }\n  }\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{DB_SITHost}}/ws/rest/customer/ebs/applicant/add",
							"protocol": "https",
							"host": [
								"{{DB_SITHost}}"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"applicant",
								"add"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Application Details After 1 person added",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6ec8f4a8-87bf-45c9-8699-04298c78560b",
								"exec": [
									"/*postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");\r",
									"*/\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "23ba75ac-1a95-4b8b-bf26-42cd5cdedb28",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.applicants[0].id);\r",
									"\r",
									"pm.test(\"Get Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - 1 applicants at this stage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants.length).to.eql(1);\r",
									"    pm.expect(isGuid(jsonData.applicants[0].id)).to.eql(true);\r",
									"    pm.expect(jsonData.applicants[0].alias).to.eql(\"Alphie Alphabet\");\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Application - Contents are Correct\", function () {\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"newlyCreatedApplicationId\");\r",
									"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
									"    var expectedDomainId = postman.getEnvironmentVariable(\"RA_DomainId\");\r",
									"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
									"    console.log(\"Hi there\")\r",
									"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_CREATED\");\r",
									"    pm.expect(jsonData.title).to.eql(expectedTitleValue);\r",
									"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.domain.id).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{newlyCreatedApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{newlyCreatedApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Create Applicant - Bertie Bassett - Create and Link new Relie User Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d583e9f1-f3e9-4317-a202-aab497d7c944",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforBertie = \"bertie.bassett.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforBertie\",emailAddressforBertie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforBertie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "68887e01-e09d-4afb-bd01-1c2e774583e5",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Create New Application via DB - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Acknowledgement contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.acknowledegementStatus).to.eql(\"Success\");\r",
									"    pm.expect(jsonData.correlationId).to.eql(\"abcdeRALLAN3332--\"+postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									"    pm.expect(jsonData.message).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{DB_SITAuth}}"
							},
							{
								"key": "x-api-key",
								"value": "{{DB_XAPI_Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addApplicant\": {\n    \"headers\": {\n      \"timeStamp\": \"20200911T041819.897 GMT\",\n      \"clientId\": \"Pega\",\n      \"serviceChannel\": \"Quantum\",\n      \"correlationId\": \"abcdeRALLAN3333--{{sequenceIdentifier}}\"\n    },\n    \"requestPayload\": {\n \"alias\": \"Bertie Bassett\",\n  \"applicationId\": \"{{newlyCreatedApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforBertie}}\",\n      \"firstName\": \"Bertie\",\n      \"lastName\": \"Bassett\",\n      \"birthDate\": \"1981-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"some place\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"BertieBunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"BertieWeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ] \n    }\n  }\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{DB_SITHost}}/ws/rest/customer/ebs/applicant/add",
							"protocol": "https",
							"host": [
								"{{DB_SITHost}}"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"applicant",
								"add"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Application Details After after 2 people added",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "acade2b1-7853-40ab-8567-8ee653165d89",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicantId2\", jsonData.applicants[1].id);\r",
									"\r",
									"pm.test(\"Get Application after 2 invites - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application after 2 invites - verify length of applicants\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Contents are Correct\", function () {\r",
									"    pm.expect(jsonData.applicants.length).to.eql(1);\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"newlyCreatedApplicationId\");\r",
									"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
									"    var expectedDomainId = postman.getEnvironmentVariable(\"RA_DomainId\");\r",
									"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
									"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_CREATED\");\r",
									"    pm.expect(jsonData.title).to.eql(expectedTitleValue);\r",
									"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.domain.id).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application after 2 invites - verify 1st applicant at this stage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.applicants[0].id)).to.eql(true);\r",
									"    pm.expect(jsonData.applicants[0].alias).to.eql(\"Alphie Alphabet\");\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application after 2 invites - verify 2nd applicant at this stage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.applicants[1].id)).to.eql(true);\r",
									"    pm.expect(jsonData.applicants[1].alias).to.eql(\"Bertie Bassett\");\r",
									"    var expectedEmailAddressforBertie = postman.getEnvironmentVariable(\"emailAddressforBertie\");\r",
									"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressforBertie);\r",
									"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
									"    pm.expect(jsonData.applicants[1].relieUsers[0].lastName).to.eql(\"Bassett\");\r",
									"})\r",
									"\r",
									"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
									"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
									"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"/**\r",
									" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
									" *\r",
									" * @param {array} firstArray\r",
									" * @param {array} secondArray\r",
									" *\r",
									" * @returns {boolean}\r",
									" */\r",
									"function arraysSameElements(firstArray, secondArray) {\r",
									"  if (firstArray.length !== secondArray.length) {\r",
									"    return false;\r",
									"  }\r",
									"  return secondArray.every(function (value) {\r",
									"    return (firstArray.indexOf(value) >= 0);\r",
									"  });\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d08b38c7-960c-488c-ab4d-4e64a1a05fc7",
								"exec": [
									"/*postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");\r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{newlyCreatedApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{newlyCreatedApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Invite Applicant 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1fde80f8-cea0-4ea1-99e6-a953516554a4",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforBertie = \"bertie.bassett.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforBertie\",emailAddressforBertie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforBertie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1d2a7695-f3da-4a83-879b-65e14b48b4b4",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Create New Application via DB - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Acknowledgement contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.acknowledegementStatus).to.eql(\"Success\");\r",
									"    pm.expect(jsonData.correlationId).to.eql(\"abcdeRALLAN3335--\"+postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									"    pm.expect(jsonData.message).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{DB_SITAuth}}"
							},
							{
								"key": "x-api-key",
								"value": "{{DB_XAPI_Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sendApplicantInvite\": {\n    \"headers\": {\n      \"timeStamp\": \"20200917T035321.897 GMT\",\n      \"clientId\": \"Pega\",\n      \"serviceChannel\": \"Quantum\",\n      \"correlationId\": \"abcdeRALLAN3335--{{sequenceIdentifier}}\"\n    },\n    \"requestPayload\": {\n      \"applicantId\": \"{{RA_ApplicantId1}}\"\n    }\n  }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{DB_SITHost}}/ws/rest/customer/ebs/applicant/invite",
							"protocol": "https",
							"host": [
								"{{DB_SITHost}}"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"applicant",
								"invite"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Invite Applicant 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "419bbec8-96aa-41a0-8571-cebc047bc3bd",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforBertie = \"bertie.bassett.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforBertie\",emailAddressforBertie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforBertie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f384c67b-d992-43f9-86bb-04c149eb44d3",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Create New Application via DB - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Acknowledgement contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.acknowledegementStatus).to.eql(\"Success\");\r",
									"    pm.expect(jsonData.correlationId).to.eql(\"abcdeRALLAN3335--\"+postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									"    pm.expect(jsonData.message).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{DB_SITAuth}}"
							},
							{
								"key": "x-api-key",
								"value": "{{DB_XAPI_Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sendApplicantInvite\": {\n    \"headers\": {\n      \"timeStamp\": \"20200917T035321.897 GMT\",\n      \"clientId\": \"Pega\",\n      \"serviceChannel\": \"Quantum\",\n      \"correlationId\": \"abcdeRALLAN3335--{{sequenceIdentifier}}\"\n    },\n    \"requestPayload\": {\n      \"applicantId\": \"{{RA_ApplicantId2}}\"\n    }\n  }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{DB_SITHost}}/ws/rest/customer/ebs/applicant/invite",
							"protocol": "https",
							"host": [
								"{{DB_SITHost}}"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"applicant",
								"invite"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Application Details After after 2 people Invited",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1edd815-210e-4f60-8e7a-0fb6cfee1b83",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicantId2\", jsonData.applicants[1].id);\r",
									"\r",
									"pm.test(\"Get Application after 2 invites - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application after 2 invites - verify length of applicants\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application after 2 invites - verify 1st applicant at this stage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.applicants[0].id)).to.eql(true);\r",
									"    pm.expect(jsonData.applicants[0].alias).to.eql(\"Alphie Alphabet\");\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application after 2 invites - verify 2nd applicant at this stage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.applicants[1].id)).to.eql(true);\r",
									"    pm.expect(jsonData.applicants[1].alias).to.eql(\"Bertie Bassett\");\r",
									"    var expectedEmailAddressforBertie = postman.getEnvironmentVariable(\"emailAddressforBertie\");\r",
									"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressforBertie);\r",
									"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
									"    pm.expect(jsonData.applicants[1].relieUsers[0].lastName).to.eql(\"Bassett\");\r",
									"})\r",
									"\r",
									"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Contents are Correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"newlyCreatedApplicationId\");\r",
									"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
									"    var expectedDomainId = postman.getEnvironmentVariable(\"RA_DomainId\");\r",
									"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
									"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
									"    pm.expect(jsonData.title).to.eql(expectedTitleValue);\r",
									"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.domain.id).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
									"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
									"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"/**\r",
									" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
									" *\r",
									" * @param {array} firstArray\r",
									" * @param {array} secondArray\r",
									" *\r",
									" * @returns {boolean}\r",
									" */\r",
									"function arraysSameElements(firstArray, secondArray) {\r",
									"  if (firstArray.length !== secondArray.length) {\r",
									"    return false;\r",
									"  }\r",
									"  return secondArray.every(function (value) {\r",
									"    return (firstArray.indexOf(value) >= 0);\r",
									"  });\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0a853ce6-e538-4685-a321-299c3c25a4b5",
								"exec": [
									"/*postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");\r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{newlyCreatedApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{newlyCreatedApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get the status of an application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2cfe34e-49f5-4bb4-8feb-88a435d84a83",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Get Application Status after 2 invites - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Application Status after 2 invites - applicant 1 data Contents are Correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicant1Value = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
									"    var expectedRAApplicant2Value = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
									"    pm.expect(jsonData.applicantStatuses[0].applicantId).to.be.oneOf([expectedRAApplicant1Value,expectedRAApplicant2Value]);\r",
									"    pm.expect(jsonData.applicantStatuses[0].statusCode).to.eql(\"APL_PENDING\");\r",
									"    pm.expect(jsonData.applicantStatuses[0].invStatusRollup).to.eql(\"PENDING\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status after 2 invites - applicant 2 data Contents are Correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicant1Value = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
									"    var expectedRAApplicant2Value = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
									"    pm.expect(jsonData.applicantStatuses[1].applicantId).to.be.oneOf([expectedRAApplicant1Value,expectedRAApplicant2Value]);\r",
									"    pm.expect(jsonData.applicantStatuses[1].statusCode).to.eql(\"APL_PENDING\");\r",
									"    pm.expect(jsonData.applicantStatuses[1].invStatusRollup).to.eql(\"PENDING\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status after 2 invites - Expect only 2 applicants and right application id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"newlyCreatedApplicationId\");\r",
									"    pm.expect(jsonData.applicantStatuses.length).to.eql(2);\r",
									"    pm.expect(jsonData.applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status after 2 invites- Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status after 2 invites- Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Application Status after 2 invites - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status after 2 invites - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"/**\r",
									" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
									" *\r",
									" * @param {array} firstArray\r",
									" * @param {array} secondArray\r",
									" *\r",
									" * @returns {boolean}\r",
									" */\r",
									"function arraysSameElements(firstArray, secondArray) {\r",
									"  if (firstArray.length !== secondArray.length) {\r",
									"    return false;\r",
									"  }\r",
									"  return secondArray.every(function (value) {\r",
									"    return (firstArray.indexOf(value) >= 0);\r",
									"  });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{newlyCreatedApplicationId}}/status?applicantrollups=true",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{newlyCreatedApplicationId}}",
								"status"
							],
							"query": [
								{
									"key": "applicantrollups",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Applicant 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "57e2164b-2106-4a5c-9121-30aa5c1946a0",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforBertie = \"bertie.bassett.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforBertie\",emailAddressforBertie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforBertie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1ef8cd96-d538-42ba-a46d-6b220fd3af70",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Create New Application via DB - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Acknowledgement contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.acknowledegementStatus).to.eql(\"Success\");\r",
									"    pm.expect(jsonData.correlationId).to.eql(\"abcdeRALLAN3335--\"+postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									"    pm.expect(jsonData.message).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{DB_SITAuth}}"
							},
							{
								"key": "x-api-key",
								"value": "{{DB_XAPI_Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"deleteApplicant\": {\n\t\t\"headers\": {\n\t\t\t\"correlationId\": \"abcdeRALLAN3336--{{sequenceIdentifier}}\",\n\t\t\t\"clientId\": \"Pega\",\n\t\t\t\"serviceChannel\": \"Quantum\",\n\t\t\t\"timeStamp\": \"20200917T035321.897 GMT\"\n\t\t},\n\t\t\"requestPayload\": {\n\t\t\t\"applicantId\": \"{{RA_ApplicantId1}}\"\n\t\t}\n\t}\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{DB_SITHost}}/ws/rest/customer/ebs/applicant/delete",
							"protocol": "https",
							"host": [
								"{{DB_SITHost}}"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"applicant",
								"delete"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get application Status History after 1 delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd8d1e6f-25f7-43b9-9ff7-eedbdea7c94a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"var positioninApplicantArrayofApplicant1 = 0;\r",
									"var positioninApplicantArrayofApplicant2 = 0;\r",
									"\r",
									"var i =0;\r",
									"\r",
									"var numberOfApplicants  = jsonData.applicants.length\r",
									"\r",
									"var expectedRAApplicant1Value = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
									"var expectedRAApplicant2Value = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
									"\r",
									"for (i = 0; i < numberOfApplicants;i++){\r",
									"    if (jsonData.applicants[i].applicantId == expectedRAApplicant1Value){\r",
									"        positioninApplicantArrayofApplicant1 = i;\r",
									"        continue;\r",
									"    }\r",
									"    if (jsonData.applicants[i].applicantId == expectedRAApplicant2Value){\r",
									"        positioninApplicantArrayofApplicant2 = i;\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"Get Application Status History after 2 invites 1 deletion - 1st applicant is APL_REMOVED\", function () {\r",
									"    var sizeofHistoryStatesFound = jsonData.applicants[positioninApplicantArrayofApplicant1].history.length;\r",
									"    pm.expect(jsonData.applicants[positioninApplicantArrayofApplicant1].history[sizeofHistoryStatesFound-1].prevStatusCode).to.eql(\"APL_PENDING\");\r",
									"    pm.expect(jsonData.applicants[positioninApplicantArrayofApplicant1].history[sizeofHistoryStatesFound-1].statusCode).to.eql(\"APL_REMOVED\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status History after 2 invites 1 deletion - 2nd applicant is APL_PENDING\", function () {\r",
									"    var sizeofHistoryStatesFound = jsonData.applicants[positioninApplicantArrayofApplicant2].history.length;\r",
									"    pm.expect(jsonData.applicants[positioninApplicantArrayofApplicant2].history[sizeofHistoryStatesFound-1].prevStatusCode).to.eql(\"APL_CONS_PENDING\");\r",
									"    pm.expect(jsonData.applicants[positioninApplicantArrayofApplicant2].history[sizeofHistoryStatesFound-1].statusCode).to.eql(\"APL_PENDING\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status History after 2 invites 1 deletion - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status History after 2 invites 1 deletion - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status History after 2 invites 1 deletion - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status History after 2 invites 1 deletion - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"/**\r",
									" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
									" *\r",
									" * @param {array} firstArray\r",
									" * @param {array} secondArray\r",
									" *\r",
									" * @returns {boolean}\r",
									" */\r",
									"function arraysSameElements(firstArray, secondArray) {\r",
									"  if (firstArray.length !== secondArray.length) {\r",
									"    return false;\r",
									"  }\r",
									"  return secondArray.every(function (value) {\r",
									"    return (firstArray.indexOf(value) >= 0);\r",
									"  });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{newlyCreatedApplicationId}}/status/history",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{newlyCreatedApplicationId}}",
								"status",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Applicant 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dcb819c7-dc46-4cf4-a1cd-9b0086fe78dc",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforBertie = \"bertie.bassett.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforBertie\",emailAddressforBertie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforBertie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "67e2249a-9ec6-48a3-a83f-11150ee4a3c3",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Create New Application via DB - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application via DB - Acknowledgement contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.acknowledegementStatus).to.eql(\"Success\");\r",
									"    pm.expect(jsonData.correlationId).to.eql(\"abcdeRALLAN3336--\"+postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									"    pm.expect(jsonData.message).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{DB_SITAuth}}"
							},
							{
								"key": "x-api-key",
								"value": "{{DB_XAPI_Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"deleteApplicant\": {\n\t\t\"headers\": {\n\t\t\t\"correlationId\": \"abcdeRALLAN3336--{{sequenceIdentifier}}\",\n\t\t\t\"clientId\": \"Pega\",\n\t\t\t\"serviceChannel\": \"Quantum\",\n\t\t\t\"timeStamp\": \"20200917T035321.897 GMT\"\n\t\t},\n\t\t\"requestPayload\": {\n\t\t\t\"applicantId\": \"{{RA_ApplicantId2}}\"\n\t\t}\n\t}\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{DB_SITHost}}/ws/rest/customer/ebs/applicant/delete",
							"protocol": "https",
							"host": [
								"{{DB_SITHost}}"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"applicant",
								"delete"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get application Status History after 2 delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "675fc379-00a7-4bd4-83e0-b3006ba59569",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"var positioninApplicantArrayofApplicant1 = 0;\r",
									"var positioninApplicantArrayofApplicant2 = 0;\r",
									"\r",
									"var i =0;\r",
									"\r",
									"var numberOfApplicants  = jsonData.applicants.length\r",
									"\r",
									"var expectedRAApplicant1Value = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
									"var expectedRAApplicant2Value = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
									"\r",
									"for (i = 0; i < numberOfApplicants;i++){\r",
									"    if (jsonData.applicants[i].applicantId == expectedRAApplicant1Value){\r",
									"        positioninApplicantArrayofApplicant1 = i;\r",
									"        continue;\r",
									"    }\r",
									"    if (jsonData.applicants[i].applicantId == expectedRAApplicant2Value){\r",
									"        positioninApplicantArrayofApplicant2 = i;\r",
									"    }\r",
									"}\r",
									"\r",
									"console.log(positioninApplicantArrayofApplicant1);\r",
									"console.log(positioninApplicantArrayofApplicant2);\r",
									"console.log();\r",
									"console.log();\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Get Application Status History after 2 invites 2 deletions - 1st applicant is APL_REMOVED\", function () {\r",
									"    var sizeofHistoryStatesFound = jsonData.applicants[positioninApplicantArrayofApplicant1].history.length;\r",
									"    pm.expect(jsonData.applicants[positioninApplicantArrayofApplicant1].history[sizeofHistoryStatesFound-1].prevStatusCode).to.eql(\"APL_PENDING\");\r",
									"    pm.expect(jsonData.applicants[positioninApplicantArrayofApplicant1].history[sizeofHistoryStatesFound-1].statusCode).to.eql(\"APL_REMOVED\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status History after 2 invites 2 deletions - 2nd applicant is APL_REMOVED\", function () {\r",
									"    var sizeofHistoryStatesFound = jsonData.applicants[positioninApplicantArrayofApplicant2].history.length;\r",
									"    pm.expect(jsonData.applicants[positioninApplicantArrayofApplicant2].history[sizeofHistoryStatesFound-1].prevStatusCode).to.eql(\"APL_PENDING\");\r",
									"    pm.expect(jsonData.applicants[positioninApplicantArrayofApplicant2].history[sizeofHistoryStatesFound-1].statusCode).to.eql(\"APL_REMOVED\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status History after 2 invites 2 deletions - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status History after 2 invites 2 deletions - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status History after 2 invites 2 deletions - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application Status History after 2 invites 2 deletions - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"/**\r",
									" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
									" *\r",
									" * @param {array} firstArray\r",
									" * @param {array} secondArray\r",
									" *\r",
									" * @returns {boolean}\r",
									" */\r",
									"function arraysSameElements(firstArray, secondArray) {\r",
									"  if (firstArray.length !== secondArray.length) {\r",
									"    return false;\r",
									"  }\r",
									"  return secondArray.every(function (value) {\r",
									"    return (firstArray.indexOf(value) >= 0);\r",
									"  });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{newlyCreatedApplicationId}}/status/history",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{newlyCreatedApplicationId}}",
								"status",
								"history"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Utility Methods",
			"item": [
				{
					"name": "Get Application Details Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45025265-bd32-4e7b-b906-99b0104f50af",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
									"\r",
									"pm.test(\"Get Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - domain ids are equal\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - No applicants at this stage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants.length).to.eql(0);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Application - id is the same as the RA_ApplicationId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
									"    var expectedDomainId = postman.getEnvironmentVariable(\"RA_DomainId\");\r",
									"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
									"\r",
									"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_CREATED\");\r",
									"    pm.expect(jsonData.title).to.eql(expectedTitleValue);\r",
									"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.domain.id).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
									"    pm.expect(jsonData.applicants.length).to.eql(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1e060348-1b9b-493b-9bf5-e1edc91577eb",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/c9443981-05d2-4524-92ba-b22ec9d8b9dc",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"c9443981-05d2-4524-92ba-b22ec9d8b9dc"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Report Excel - not yet ready Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5fc86fa5-2a89-419d-84fd-633f2296545c",
								"exec": [
									"pm.test(\"Get Assessment Report Excel - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - email recipients is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforAlphie);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - response is successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - inner id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"excelExamplePayload\": {\r\n    \"reportType\": \"excel\",\r\n    \"reportRenderOpts\": {\r\n      \"collapsibleGroups\": false,\r\n      \"sheetTransactions\": false,\r\n      \"showConnectionSummary\": false,\r\n      \"transactionOrderingDir\": \"desc\",\r\n      \"transactionOrderingKey\": \"date\"\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/53a01f9c-23dc-42b7-a705-f33ce42a9024/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"53a01f9c-23dc-42b7-a705-f33ce42a9024",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Report PDF  - not yet ready Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94fb64ed-0a92-4d1e-83fe-76efef62d7e5",
								"exec": [
									"pm.test(\"Get Assessment Report PDF - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - email recipients is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforAlphie);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - response is successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF- inner id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"pdfSummaryExamplePayload\": {\r\n    \"reportType\": \"pdfsum\",\r\n    \"reportRenderOpts\": {\r\n      \"graphics\": \"standard\",\r\n      \"hideApplicants\": false,\r\n      \"hideAssessmentNotes\": false,\r\n      \"hideTransactionRowCategory\": false,\r\n      \"hideTransactionRowClassifications\": false,\r\n      \"hideTransactionRowEditMarks\": false,\r\n      \"includeCategoryExpensesBreakdownSignatureArea\": true,\r\n      \"includeInsightNoteSignatureArea\": true,\r\n      \"includeTransactionNoteSignatureArea\": true,\r\n      \"pageColorScheme\": \"default\",\r\n      \"showApplicantAddress\": false,\r\n      \"showApplicantEmailAddress\": true,\r\n      \"showAuthorEmailAddress\": false,\r\n      \"showConnectionSummary\": true,\r\n      \"showSummaryReportFinancial\": true,\r\n      \"showSummaryReportFinancialPercentage\": false,\r\n      \"showSummaryReportFinancialSubcategories\": false,\r\n      \"showSummaryReportInsights\": true,\r\n      \"showSummaryReportOverridesHistory\": false,\r\n      \"showSummaryReportTransactionNotes\": true,\r\n      \"transactionGroupingDisplay\": \"category\",\r\n      \"transactionOrderingDir\": \"desc\",\r\n      \"transactionOrderingKey\": \"date\",\r\n      \"transactionRowSpacing\": \"normal\",\r\n      \"useApplicantAliasName\": false\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/53a01f9c-23dc-42b7-a705-f33ce42a9024/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"53a01f9c-23dc-42b7-a705-f33ce42a9024",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Report PDF TXN  - not yet ready Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cecd175a-6ee1-4141-ba7b-9036df4b0ce6",
								"exec": [
									"pm.test(\"Get Assessment Report PDF TXN - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - email recipients is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforAlphie);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN - response is successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN - inner id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"pdfTransactionReportPayload\": {\r\n    \"reportType\": \"pdftxn\",\r\n    \"reportRenderOpts\": {\r\n      \"graphics\": \"standard\",\r\n      \"hideApplicants\": false,\r\n      \"hideAssessmentNotes\": false,\r\n      \"hideTransactionRowCategory\": false,\r\n      \"hideTransactionRowClassifications\": false,\r\n      \"hideTransactionRowEditMarks\": false,\r\n      \"pageColorScheme\": \"default\",\r\n      \"showApplicantAddress\": false,\r\n      \"showApplicantEmailAddress\": true,\r\n      \"showAuthorEmailAddress\": false,\r\n      \"showConnectionSummary\": true,\r\n      \"transactionGroupingDisplay\": \"category\",\r\n      \"transactionOrderingDir\": \"desc\",\r\n      \"transactionOrderingKey\": \"date\",\r\n      \"transactionRowSpacing\": \"normal\",\r\n      \"useApplicantAliasName\": false\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/53a01f9c-23dc-42b7-a705-f33ce42a9024/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"53a01f9c-23dc-42b7-a705-f33ce42a9024",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Feed Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6e62438-7810-41af-b9f4-5fc77e5a46e4",
								"exec": [
									"pm.test(\"Get Assessment Feed - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Feed - basic contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var applicationId = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    pm.expect(jsonData.assessment.statusCode).to.eql(\"ASS_PENDING\");\r",
									"    pm.expect(jsonData.assessment.applicationId).to.eql(applicationId);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"pm.environment.get(\"variable_key\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/1ad32c17-5f43-40ec-88f3-3b45891a50e6/feed",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"1ad32c17-5f43-40ec-88f3-3b45891a50e6",
								"feed"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Applicant - Alphie Alphabet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fb6bdc2f-d4f2-4cfc-92b4-9d7eee6025e4",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"emailSequenceIdentifier\");\r",
									"var emailAddressforAlphie = \"alphie.alphabet.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ad0eacd0-ef51-4b60-bb8c-3da7c2d5319d",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicantId);\r",
									"\r",
									"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
									"});\r",
									"\r",
									"/*\r",
									"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
									"});\r",
									"*/\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId1}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1246"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:22:18 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXlg4Gj8SwMFR7g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Applicant - Alphie Alphabet Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "130d83bc-d960-40cf-a0b4-fe317afeb96c",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"emailSequenceIdentifier\");\r",
									"var emailAddressforAlphie = \"alphie.alphabet.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8847f26c-c41f-472f-aaaa-f70e48a545b8",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicantId);\r",
									"\r",
									"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
									"});\r",
									"\r",
									"/*\r",
									"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
									"});\r",
									"*/\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/411799c6-d0ec-454b-bafc-24cfc6da62e3",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"411799c6-d0ec-454b-bafc-24cfc6da62e3"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1246"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:22:18 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXlg4Gj8SwMFR7g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Send Applicant Invite - Bertie Bassett Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e62a211f-bce2-4ae9-8677-fba582018172",
								"exec": [
									"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - email recipients is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforBertie = postman.getEnvironmentVariable(\"emailAddressforBertie\");\r",
									"    console.log(\"addressfor bertie +++ \" + expectedEmailAddressforBertie);\r",
									"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforBertie);\r",
									"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
									"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
									"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/57e99fde-5ddd-447b-9192-d3874b960841/invite",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"57e99fde-5ddd-447b-9192-d3874b960841",
								"invite"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Applicant - Bertie Bassett",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "43329479-ffef-4d19-ae50-6b43ba72b3bb",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"emailSequenceIdentifier\");\r",
									"var emailAddressforBertie = \"bertie.bassett.33\" + currentID + \"@mailinator.com\";\r",
									"pm.environment.set(\"emailAddressforBertie\",emailAddressforBertie);\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforBertie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "249caee2-006d-4d93-94a3-a25ca9695216",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicantId2\", jsonData.id);\r",
									"\r",
									"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"/*\r",
									"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Bertie\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Bassett\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
									"});\r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alias\": \"Bertie Bassett\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforBertie}}\",\n      \"firstName\": \"Bertie\",\n      \"lastName\": \"Bassett\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId2}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1246"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:22:18 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXlg4Gj8SwMFR7g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Download Report from CMS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://relie-cms-qa.s3.ap-southeast-2.amazonaws.com/downloads/reports/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/fca31cce-6b4c-4de6-ba71-94ced30e0863/Ronald-Rios-ExcelTrans-202009111925.xlsx?AWSAccessKeyId=ASIAWXMYEXLFF6UT324I&Expires=1599818149&Signature=St4fnD0YQyMH6%2F26%2BiV4y7sKZic%3D&response-content-disposition=attachment%3B%20filename%3D%22Ronald-Rios-ExcelTrans-202009111925.xlsx%22&x-amz-security-token=IQoJb3JpZ2luX2VjEGoaDmFwLXNvdXRoZWFzdC0yIkcwRQIgaRSBdZQVvybHT3W99CvMeylv5I5PYdkZ32%2BzhB8kZ7ECIQCuPNZ11CofRcxp7HW7EVUasj%2FKXKGbUuFhxsROd7bXeyrhAQhzEAIaDDQ2MjU2NDkzMjI5OCIMub2eqexdcap8JvZIKr4BHqzs7izdQViJmFzSErY%2FNzGkykv1%2FsxtUYIzCeCx0q%2Bn3g5xSYw9UAMbHtIU97IIKe6eTHlB73gcnRaIvuqaXIIqZiIoVe%2Fy%2Fs5SY7P10kOfLd2CtZ4xBAACIa8xlUCHwPCoxyV3mJp6JPzKaGBD44HBber0H0QFtuMLjStfff3OhBz20KRTPuvqyIlVJ6Nm%2FjHgrzaO%2F3Ym4%2B4jFRx4TAjFCI0IasfsvZz%2FNHjScQYQg9LrmbkKXUfP1CJKxDCwhO36BTrgAWUOG08NP%2BYqxxinkvXtW6G%2F9waMpZaMovOum5gzH9e88GORCErbLvGQT9z3N3cVh7YVdS4H%2FO4BYVWlw5QjuDUaiY9ZdrKCttbGAeW1YPTaltXoDiMFGg51RcOs5hHqArpSZd4i1HqZPLU5pDLacXDu9fbtcnfmgORPOr%2FcxVLrTojlnxovGxRe4Rzq6R1OJH75h5toEexS5gzriYS%2FqTjrTnZnhZF52pxu3LPr5DlaUIycVtTxLREmyqgV6FX9XRnUD88EKy4%2FNXN8Lp8Hnp49wbToAWeIQnGmQxpGWsSA",
							"protocol": "https",
							"host": [
								"relie-cms-qa",
								"s3",
								"ap-southeast-2",
								"amazonaws",
								"com"
							],
							"path": [
								"downloads",
								"reports",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"fca31cce-6b4c-4de6-ba71-94ced30e0863",
								"Ronald-Rios-ExcelTrans-202009111925.xlsx"
							],
							"query": [
								{
									"key": "AWSAccessKeyId",
									"value": "ASIAWXMYEXLFF6UT324I"
								},
								{
									"key": "Expires",
									"value": "1599818149"
								},
								{
									"key": "Signature",
									"value": "St4fnD0YQyMH6%2F26%2BiV4y7sKZic%3D"
								},
								{
									"key": "response-content-disposition",
									"value": "attachment%3B%20filename%3D%22Ronald-Rios-ExcelTrans-202009111925.xlsx%22"
								},
								{
									"key": "x-amz-security-token",
									"value": "IQoJb3JpZ2luX2VjEGoaDmFwLXNvdXRoZWFzdC0yIkcwRQIgaRSBdZQVvybHT3W99CvMeylv5I5PYdkZ32%2BzhB8kZ7ECIQCuPNZ11CofRcxp7HW7EVUasj%2FKXKGbUuFhxsROd7bXeyrhAQhzEAIaDDQ2MjU2NDkzMjI5OCIMub2eqexdcap8JvZIKr4BHqzs7izdQViJmFzSErY%2FNzGkykv1%2FsxtUYIzCeCx0q%2Bn3g5xSYw9UAMbHtIU97IIKe6eTHlB73gcnRaIvuqaXIIqZiIoVe%2Fy%2Fs5SY7P10kOfLd2CtZ4xBAACIa8xlUCHwPCoxyV3mJp6JPzKaGBD44HBber0H0QFtuMLjStfff3OhBz20KRTPuvqyIlVJ6Nm%2FjHgrzaO%2F3Ym4%2B4jFRx4TAjFCI0IasfsvZz%2FNHjScQYQg9LrmbkKXUfP1CJKxDCwhO36BTrgAWUOG08NP%2BYqxxinkvXtW6G%2F9waMpZaMovOum5gzH9e88GORCErbLvGQT9z3N3cVh7YVdS4H%2FO4BYVWlw5QjuDUaiY9ZdrKCttbGAeW1YPTaltXoDiMFGg51RcOs5hHqArpSZd4i1HqZPLU5pDLacXDu9fbtcnfmgORPOr%2FcxVLrTojlnxovGxRe4Rzq6R1OJH75h5toEexS5gzriYS%2FqTjrTnZnhZF52pxu3LPr5DlaUIycVtTxLREmyqgV6FX9XRnUD88EKy4%2FNXN8Lp8Hnp49wbToAWeIQnGmQxpGWsSA"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Assessment Feed Copy with Components",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e5d4d28-7c65-4b25-854c-76907fbf1be0",
								"exec": [
									"pm.test(\"Get Assessment Feed - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/f349d7cf-2bb5-40bf-a209-1529e298978c/feed?includeComponents=assessment,application,notes,applicants,categorySummaries,applicationStatus,applicationStatusHistory,snapshot,snapshotNotes,snapshotInsights,snapshotFlags,verifiedIncome,verifiedLiabilities,insightSummaries,flags,incomeDetails,monthlyBreakdowns,bankAccounts",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"f349d7cf-2bb5-40bf-a209-1529e298978c",
								"feed"
							],
							"query": [
								{
									"key": "includeComponents",
									"value": "assessment,application,notes,applicants,categorySummaries,applicationStatus,applicationStatusHistory,snapshot,snapshotNotes,snapshotInsights,snapshotFlags,verifiedIncome,verifiedLiabilities,insightSummaries,flags,incomeDetails,monthlyBreakdowns,bankAccounts"
								}
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Feed Copy with Attributes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e469dfb-a53e-406f-ba0f-de4594b0c9cd",
								"exec": [
									"pm.test(\"Get Assessment Feed - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/2e92cfa0-1dd9-4f6e-943c-32566b207fc5/feed?includeAttributes=tfalEmployerHint",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"2e92cfa0-1dd9-4f6e-943c-32566b207fc5",
								"feed"
							],
							"query": [
								{
									"key": "includeAttributes",
									"value": "tfalEmployerHint"
								}
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "API Login Valid Creds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1aa05b2b-33bb-442a-a4a3-1f3d955835d7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RI_AuthIDToken\", jsonData.access_token);\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - includes a 3600 expires token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - includes a token_type equal to Bearer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.eql('Bearer');\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - is at least 100 characters\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token.length).to.be.above(100);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=UTF-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{RI_IC_ClientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{RI_IC_ClientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "https://{{RI_Host}}/connect/token",
							"protocol": "https",
							"host": [
								"{{RI_Host}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "RI_IntegrationClient_ClientCredentials_QA_TFAL",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{RI_IC_ClientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{RI_IC_ClientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "https://{{RI_Host}}/connect/token",
									"protocol": "https",
									"host": [
										"{{RI_Host}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 00:35:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkQwMUYyNzU3QkU3MDI2QkRBNjM1MkQ5QTBBNDUwNDU4RDMyNjAyN0IiLCJ0eXAiOiJKV1QiLCJ4NXQiOiIwQjhuVjc1d0pyMm1OUzJhQ2tVRVdOTW1BbnMifQ.eyJuYmYiOjE1OTU4OTY1MDUsImV4cCI6MTU5NTkwMDEwNSwiaXNzIjoiaHR0cHM6Ly9pZC5yZWxpZWNoZWNrLmNvbS5hdSIsImF1ZCI6WyJodHRwczovL2lkLnJlbGllY2hlY2suY29tLmF1L3Jlc291cmNlcyIsInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdLCJjbGllbnRfaWQiOiJyYV9pbnRfcWFfdGZhbCIsInNjb3BlIjpbInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdfQ.dcFJP26noZa3BPafA17hK9O0_19ksKmw_lLxZa2kPoHvti4rltRKaDp7XnQvl4nhG3ulMd5a3yemaXxxq6RS5i5pOx6vc5_oJR8mukTox-5HCe1X8icRqMH6Jp8mToZpMkquQ2uxq9h5MV9w7gqZsEGJoQ3uW002GS94a7W9n7xzk88ZZLog2uuLfNRe31NoNjPnEr-4bx1URmPJvW7KlItbO3AdHiRiAlkKpX7ElOcGWlzebFrijMG3-X-5pGvTn3Scye1xZ0UKmmRdXFNfMxOnK-PmPPBdJfnvwrqJayZ2F5JmbhF-U7Qodu3QTYiLa4bsVT8EZVI-AfCWTKXqFABU7JMp6bMsLaQerBcDVxFEtDw9IFwYKr50ELJDNjR7_Cj4f_4clBYrsHpElVBsgSAvXkjhamED8e_N3HazhciIhLdPJvX7UNkrVLim0rN0OP3ZCUvIAi4QAQ8asTI5_gFJkBcyS1QVyw2pL-nkx5PrEmzoHglvgJ988yxMpLm4pvKVGgU9OY5uIzWvqjl0Sxnp8oP12R3sqF1jehsciMws-c-K4F9Pcme57iL2UoGZoLV61BAr9uS2ZZCX7E3-egYkzIsmVmVYczOGY9opzfT5oJniWntHA5iOiF-V7LtFrYtBNZQ3FW6jshtFTEm4UOGSTlSihOA6rBZZRBQLJV4\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Notifications API to Dell Boomi",
			"item": [
				{
					"name": "Sample Dell Boomi Incoming Notification APIs -  ASS change PENDING",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e798e61-ba73-4e41-90e0-bb13ad7d8fd1",
								"exec": [
									"pm.test(\"Post Notification to Dell Boomi Ass Change PENDING - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change PENDING - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change PENDING - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change PENDING - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change PENDING - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"host": true
						}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "b81d2779-9010-4902-89f0-732e6e510e6a",
									"type": "string"
								},
								{
									"key": "username",
									"value": "relie@toyotafinance-2B02DW",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "a7862782-e69d-456c-8650-703ec23276ce",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "api-sit.tfal.com.au",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"notifType\":\"ASS_STATUS_CHANGE\",\r\n    \"dataChecksum\":\"sha384-ORZw6idKnbb7rNMdep1nXBlFQnLFdPqqmGIKYZRiS3wC+pcU6/yM5sUHuSGiifHC\",\r\n    \"data\":{\r\n        \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n        \"statusCode\":\"ASS_PENDNG\",\r\n        \"prevStatusCode\":\"ASS_CREATED\",\r\n        \"dateStamp\":\"2020-08-24T03:28:23.740Z\",\r\n            \"ctx\":{\r\n            \"domainId\":\"{{RA_DomainId}}\",\r\n            \"applicationId\":\"{{RA_ApplicationId}}\",\r\n            \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n            \"applicantId\":null,\r\n            \"triggeredByRelieUserId\":null,\r\n            \"currentApplicationStatus\":null\r\n    }\r\n}\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://api-sit.tfal.com.au/ws/rest/customer/ebs/notifications/inbound",
							"protocol": "https",
							"host": [
								"api-sit",
								"tfal",
								"com",
								"au"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"notifications",
								"inbound"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sample Dell Boomi Incoming Notification APIs -  ASS change READY",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b947425d-e004-4adc-9fa1-fe4bebaeb095",
								"exec": [
									"pm.test(\"Post Notification to Dell Boomi Ass Change READY - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change READY - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change READY - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change READY - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change READY - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"host": true
						}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "b81d2779-9010-4902-89f0-732e6e510e6a",
									"type": "string"
								},
								{
									"key": "username",
									"value": "relie@toyotafinance-2B02DW",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "a7862782-e69d-456c-8650-703ec23276ce",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "api-sit.tfal.com.au",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"notifType\":\"ASS_STATUS_CHANGE\",\r\n    \"dataChecksum\":\"sha384-ORZw6idKnbb7rNMdep1nXBlFQnLFdPqqmGIKYZRiS3wC+pcU6/yM5sUHuSGiifHC\",\r\n    \"data\":{\r\n        \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n        \"statusCode\":\"ASS_READY\",\r\n        \"prevStatusCode\":\"ASS_PENDING\",\r\n        \"dateStamp\":\"2020-08-24T03:28:23.740Z\",\r\n            \"ctx\":{\r\n            \"domainId\":\"{{RA_DomainId}}\",\r\n            \"applicationId\":\"{{RA_ApplicationId}}\",\r\n            \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n            \"applicantId\":null,\r\n            \"triggeredByRelieUserId\":null,\r\n            \"currentApplicationStatus\":null\r\n    }\r\n}\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://api-sit.tfal.com.au/ws/rest/customer/ebs/notifications/inbound",
							"protocol": "https",
							"host": [
								"api-sit",
								"tfal",
								"com",
								"au"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"notifications",
								"inbound"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sample Dell Boomi Incoming Notification APIs -  ASS change SUBMITTED",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "223f72de-32ec-46de-9a18-9dcb206e6c68",
								"exec": [
									"pm.test(\"Post Notification to Dell Boomi Ass Change SUBMITTED - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change SUBMITTED - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change SUBMITTED - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change SUBMITTED - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change SUBMITTED - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"host": true
						}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "b81d2779-9010-4902-89f0-732e6e510e6a",
									"type": "string"
								},
								{
									"key": "username",
									"value": "relie@toyotafinance-2B02DW",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "a7862782-e69d-456c-8650-703ec23276ce",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "api-sit.tfal.com.au",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"notifType\":\"ASS_STATUS_CHANGE\",\r\n    \"dataChecksum\":\"sha384-ORZw6idKnbb7rNMdep1nXBlFQnLFdPqqmGIKYZRiS3wC+pcU6/yM5sUHuSGiifHC\",\r\n    \"data\":{\r\n        \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n        \"statusCode\":\"ASS_SUBMITTED\",\r\n        \"prevStatusCode\":\"ASS_PENDING\",\r\n        \"dateStamp\":\"2020-08-24T03:28:23.740Z\",\r\n            \"ctx\":{\r\n            \"domainId\":\"{{RA_DomainId}}\",\r\n            \"applicationId\":\"{{RA_ApplicationId}}\",\r\n            \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n            \"applicantId\":null,\r\n            \"triggeredByRelieUserId\":null,\r\n            \"currentApplicationStatus\":null\r\n    }\r\n}\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://api-sit.tfal.com.au/ws/rest/customer/ebs/notifications/inbound",
							"protocol": "https",
							"host": [
								"api-sit",
								"tfal",
								"com",
								"au"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"notifications",
								"inbound"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sample Dell Boomi Incoming Notification APIs -  ASS change RETURNED",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0571d9bd-4aeb-4619-b6b4-100d85563428",
								"exec": [
									"pm.test(\"Post Notification to Dell Boomi Ass Change PENDING - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change PENDING - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change PENDING - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change PENDING - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Change PENDING - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"host": true
						}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "b81d2779-9010-4902-89f0-732e6e510e6a",
									"type": "string"
								},
								{
									"key": "username",
									"value": "relie@toyotafinance-2B02DW",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "a7862782-e69d-456c-8650-703ec23276ce",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "api-sit.tfal.com.au",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"notifType\":\"ASS_STATUS_CHANGE\",\r\n    \"dataChecksum\":\"sha384-ORZw6idKnbb7rNMdep1nXBlFQnLFdPqqmGIKYZRiS3wC+pcU6/yM5sUHuSGiifHC\",\r\n    \"data\":{\r\n        \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n        \"statusCode\":\"ASS_RETURNED\",\r\n        \"prevStatusCode\":\"ASS_SUBMITTED\",\r\n        \"dateStamp\":\"2020-08-24T03:28:23.740Z\",\r\n            \"ctx\":{\r\n            \"domainId\":\"{{RA_DomainId}}\",\r\n            \"applicationId\":\"{{RA_ApplicationId}}\",\r\n            \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n            \"applicantId\":null,\r\n            \"triggeredByRelieUserId\":null,\r\n            \"currentApplicationStatus\":null\r\n    }\r\n}\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://api-sit.tfal.com.au/ws/rest/customer/ebs/notifications/inbound",
							"protocol": "https",
							"host": [
								"api-sit",
								"tfal",
								"com",
								"au"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"notifications",
								"inbound"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sample Dell Boomi Incoming Notification APIs -  ASS Amend",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97394b43-86f2-4b0a-a9c2-d0f146387655",
								"exec": [
									"pm.test(\"Post Notification to Dell Boomi Ass Amend - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Amend - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Amend  - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Amend  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Ass Amend - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"host": true
						}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "b81d2779-9010-4902-89f0-732e6e510e6a",
									"type": "string"
								},
								{
									"key": "username",
									"value": "relie@toyotafinance-2B02DW",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"type": "text",
								"value": "a7862782-e69d-456c-8650-703ec23276ce"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Host",
								"type": "text",
								"value": "api-sit.tfal.com.au"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"notifType\":\"ASS_AMENDED\",\r\n    \"dataChecksum\":\"sha384-duKmoLXUNPZeB6tVpo3ByPk96HHgiLNA2a8wJbqmTkcWwvH8nxpSiF29yP3vewNs\",\r\n    \"data\":{\r\n        \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n        \"amendedById\":\"b2d039f3-c313-4345-8747-b5412c375f89\",\r\n        \"amendedByEmail\":\"someone@nowhere.com.au\",\r\n            \"amendedByDomainRoles\":[\r\n            \"Admin\",\r\n            \"Assessor\"\r\n        ],\r\n        \"assessmentEditingSessionId\":\"3611f332-9dff-4f3d-bccd-e5b3db0013dc\",\r\n        \"amendments\":{\r\n            \"changesCount_Note\":0,\r\n            \"changesCount_Necs\":3,\r\n            \"changesCount_Recat\":0,\r\n            \"changesCount_Freq\":2,\r\n            \"changesCount_Hint\":0,\r\n            \"changesCount_NA\":0,\r\n            \"changesCount_Alloc\":0,\r\n            \"changesCount_Markup\":0\r\n            },\r\n        \"ctx\":{\r\n            \"domainId\":\"{{RA_DomainId}}\",\r\n            \"applicationId\":\"{{RA_ApplicationId}}\",\r\n            \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n            \"applicantId\":null,\r\n            \"triggeredByRelieUserId\":null,\r\n            \"currentApplicationStatus\":null\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://api-sit.tfal.com.au/ws/rest/customer/ebs/notifications/inbound",
							"protocol": "https",
							"host": [
								"api-sit",
								"tfal",
								"com",
								"au"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"notifications",
								"inbound"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sample Dell Boomi Incoming Notification APIs -  Applicant Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ba0f304-8224-4b15-bc1c-c99be78ed586",
								"exec": [
									"pm.test(\"Post Notification to Dell Boomi APL Deleted - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi APL Deleted - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi APL Deleted - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi APL Deleted - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi APL Deleted - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"host": true
						}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "b81d2779-9010-4902-89f0-732e6e510e6a",
									"type": "string"
								},
								{
									"key": "username",
									"value": "relie@toyotafinance-2B02DW",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"type": "text",
								"value": "a7862782-e69d-456c-8650-703ec23276ce"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Host",
								"type": "text",
								"value": "api-sit.tfal.com.au"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"notifType\":\"APL_STATUS_CHANGE\",\r\n    \"dataChecksum\":\"sha384-ORZw6idKnbb7rNMdep1nXBlFQnLFdPqqmGIKYZRiS3wC+pcU6/yM5sUHuSGiifHC\",\r\n    \"data\":{\r\n        \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n        \"statusCode\":\"APL_REMOVED\",\r\n        \"prevStatusCode\":\"APL_PENDING\",\r\n        \"dateStamp\":\"2020-08-24T03:28:23.740Z\",\r\n            \"ctx\":{\r\n            \"domainId\":\"{{RA_DomainId}}\",\r\n            \"applicationId\":\"{{RA_ApplicationId}}\",\r\n            \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n            \"applicantId\":\"{{RA_ApplicantId1}}\",\r\n            \"triggeredByRelieUserId\":null,\r\n            \"currentApplicationStatus\":null\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://api-sit.tfal.com.au/ws/rest/customer/ebs/notifications/inbound",
							"protocol": "https",
							"host": [
								"api-sit",
								"tfal",
								"com",
								"au"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"notifications",
								"inbound"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sample Dell Boomi Incoming Notification APIs -  Report Completed Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b67877f6-9b38-40c9-9aae-0a7045000537",
								"exec": [
									"pm.test(\"Post Notification to Dell Boomi Report Completed - Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Report Completed - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Report Completed - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Report Completed - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Post Notification to Dell Boomi Report Completed - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"host": true
						}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "b81d2779-9010-4902-89f0-732e6e510e6a",
									"type": "string"
								},
								{
									"key": "username",
									"value": "relie@toyotafinance-2B02DW",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"type": "text",
								"value": "a7862782-e69d-456c-8650-703ec23276ce"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Host",
								"type": "text",
								"value": "api-sit.tfal.com.au"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"notifType\":\"RPT_COMPLETED\",\r\n    \"dataChecksum\":\"sha384-ORZw6idKnbb7rNMdep1nXBlFQnLFdPqqmGIKYZRiS3wC+pcU6/yM5sUHuSGiifHC\",\r\n    \"data\":{\r\n        \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n        \"reportName\":\"AssessmentSummary\",\r\n        \"reportKey\":\"ass-summary-88a365da-2085-4aac-94d2-427d84b7ac2c-202008240328\",\r\n        \"customerRef\":\"MycustomerReference123\",\r\n        \"reportLocation\":\"<SignedS3LocationExpiringLink - e.g. s3>\",\r\n        \"dateStamp\":\"2020-08-24T03:28:23.740Z\",\r\n        \"ctx\":{\r\n            \"domainId\":\"{{RA_DomainId}}\",\r\n            \"applicationId\":\"{{RA_ApplicationId}}\",\r\n            \"assessmentId\":\"{{RA_AssessmentId}}\",\r\n            \"applicantId\":null,\r\n            \"triggeredByRelieUserId\":null,\r\n            \"currentApplicationStatus\":null\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://api-sit.tfal.com.au/ws/rest/customer/ebs/notifications/inbound",
							"protocol": "https",
							"host": [
								"api-sit",
								"tfal",
								"com",
								"au"
							],
							"path": [
								"ws",
								"rest",
								"customer",
								"ebs",
								"notifications",
								"inbound"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get Assessment Feed Filter Legacy Cases",
			"item": [
				{
					"name": "Get Assessment Feed with Arguments Copy 2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/feed?includeComponents=application&excludeComponents=liabilities",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"feed"
							],
							"query": [
								{
									"key": "includeComponents",
									"value": "application"
								},
								{
									"key": "excludeComponents",
									"value": "liabilities"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Assessment Feed with Arguments Copy",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/feed?includeComponents=assessment,application,notes,applicationAttributes,applicantAttributes,snapshot,snapshotNotes,snapshotInsights,snapshotFlags,incomeLiabilities,insightSummaries,flags,incomeDetails,monthlyBreakdowns,bankAccounts",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"feed"
							],
							"query": [
								{
									"key": "includeComponents",
									"value": "assessment,application,notes,applicationAttributes,applicantAttributes,snapshot,snapshotNotes,snapshotInsights,snapshotFlags,incomeLiabilities,insightSummaries,flags,incomeDetails,monthlyBreakdowns,bankAccounts"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Assessment Feed with Arguments Copy 5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/{{RA_AssessmentId}}/feed?excludeComponents=snapshotFlags",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"{{RA_AssessmentId}}",
								"feed"
							],
							"query": [
								{
									"key": "excludeComponents",
									"value": "snapshotFlags"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Assessment Feed with Arguments Copy 4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/{{RA_AssessmentId}}/feed?includeComponents=assessment,application,notes,applicationAttributes,applicantAttributes,snapshot,snapshotNotes,snapshotInsights,snapshotFlags,incomeLiabilities,insightSummaries,flags,incomeDetails,monthlyBreakdowns,bankAccounts",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"{{RA_AssessmentId}}",
								"feed"
							],
							"query": [
								{
									"key": "includeComponents",
									"value": "assessment,application,notes,applicationAttributes,applicantAttributes,snapshot,snapshotNotes,snapshotInsights,snapshotFlags,incomeLiabilities,insightSummaries,flags,incomeDetails,monthlyBreakdowns,bankAccounts"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Assessment Feed with Arguments Copy 3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/feed",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"feed"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Test Link to Existng User Function",
			"item": [
				{
					"name": "API Login Valid Creds Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33bc0411-b3c3-43c6-bdd3-0660f0571d2b",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RI_AuthIDToken\", jsonData.access_token);\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - includes a 3600 expires token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - includes a token_type equal to Bearer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.eql('Bearer');\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - is at least 100 characters\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token.length).to.be.above(100);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=UTF-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{RI_IC_ClientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{RI_IC_ClientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "https://{{RI_Host}}/connect/token",
							"protocol": "https",
							"host": [
								"{{RI_Host}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "RI_IntegrationClient_ClientCredentials_QA_TFAL",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{RI_IC_ClientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{RI_IC_ClientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "https://{{RI_Host}}/connect/token",
									"protocol": "https",
									"host": [
										"{{RI_Host}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 00:35:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkQwMUYyNzU3QkU3MDI2QkRBNjM1MkQ5QTBBNDUwNDU4RDMyNjAyN0IiLCJ0eXAiOiJKV1QiLCJ4NXQiOiIwQjhuVjc1d0pyMm1OUzJhQ2tVRVdOTW1BbnMifQ.eyJuYmYiOjE1OTU4OTY1MDUsImV4cCI6MTU5NTkwMDEwNSwiaXNzIjoiaHR0cHM6Ly9pZC5yZWxpZWNoZWNrLmNvbS5hdSIsImF1ZCI6WyJodHRwczovL2lkLnJlbGllY2hlY2suY29tLmF1L3Jlc291cmNlcyIsInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdLCJjbGllbnRfaWQiOiJyYV9pbnRfcWFfdGZhbCIsInNjb3BlIjpbInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdfQ.dcFJP26noZa3BPafA17hK9O0_19ksKmw_lLxZa2kPoHvti4rltRKaDp7XnQvl4nhG3ulMd5a3yemaXxxq6RS5i5pOx6vc5_oJR8mukTox-5HCe1X8icRqMH6Jp8mToZpMkquQ2uxq9h5MV9w7gqZsEGJoQ3uW002GS94a7W9n7xzk88ZZLog2uuLfNRe31NoNjPnEr-4bx1URmPJvW7KlItbO3AdHiRiAlkKpX7ElOcGWlzebFrijMG3-X-5pGvTn3Scye1xZ0UKmmRdXFNfMxOnK-PmPPBdJfnvwrqJayZ2F5JmbhF-U7Qodu3QTYiLa4bsVT8EZVI-AfCWTKXqFABU7JMp6bMsLaQerBcDVxFEtDw9IFwYKr50ELJDNjR7_Cj4f_4clBYrsHpElVBsgSAvXkjhamED8e_N3HazhciIhLdPJvX7UNkrVLim0rN0OP3ZCUvIAi4QAQ8asTI5_gFJkBcyS1QVyw2pL-nkx5PrEmzoHglvgJ988yxMpLm4pvKVGgU9OY5uIzWvqjl0Sxnp8oP12R3sqF1jehsciMws-c-K4F9Pcme57iL2UoGZoLV61BAr9uS2ZZCX7E3-egYkzIsmVmVYczOGY9opzfT5oJniWntHA5iOiF-V7LtFrYtBNZQ3FW6jshtFTEm4UOGSTlSihOA6rBZZRBQLJV4\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\"\n}"
						}
					]
				},
				{
					"name": "Create New Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c54f37e9-e9a9-45ad-bfd0-d7b1215267bd",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicationId\", jsonData.data.applicationId);\r",
									"postman.setEnvironmentVariable(\"RA_AssessmentId\",jsonData.data.assessmentId);\r",
									"\r",
									"pm.test(\"Create New Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - inner application assessment ids are UUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.data.assessmentId)).to.eql(true);\r",
									"});\r",
									"\r",
									"//assuming we have passed in all the various different values.\r",
									"pm.test(\"Create New Application - for applicationAttributeIds length is 4\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
									"    pm.expect(sizeOfArrayOfApplicationAttributeIDs).to.eql(4);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - for applicationAttributeIds are all UUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
									"    var i =0;\r",
									"    for(i = 0;i < sizeOfArrayOfApplicationAttributeIDs;i++){\r",
									"        pm.expect(isGuid(jsonData.data.applicationAttributeIds[i])).to.eql(true);\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - id and applicationId are equal\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.data.applicationId);\r",
									"});\r",
									"\r",
									"\r",
									"let moment = require ('moment');\r",
									"\r",
									"/*\r",
									"pm.test(\"Create New Application - data application dates are all valid dates\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(moment(jsonData.data.application.dateRangeStart, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.dateRangeEnd, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - inner application assessment dates are all valid dates\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(moment(jsonData.data.application.assessments[0].startDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.assessments[0].endDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.assessments[0].createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.assessments[0].updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    \r",
									"    var date1 = new Date\r",
									"\r",
									"    let yesterday = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toISOString;\r",
									"    console.log(yesterday);\r",
									"    let yesterday1 = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toDateString;\r",
									"    console.log(yesterday1);\r",
									"    //console.log(\"Here is the date\" + getDate());\r",
									"});\r",
									"\r",
									"*/\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"Date.prototype.isValid = function () {               \r",
									"            // If the date object is invalid it \r",
									"            // will return 'NaN' on getTime()  \r",
									"            // and NaN is never equal to itself. \r",
									"            return this.getTime() === this.getTime(); \r",
									"};\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1e4bc47c-4a12-4d83-9240-db33cef86489",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{titleValue}}\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}}\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4\",\n    \"QUANTUM-7ab1d8221db4abc\",\n    \"QUANTUM-7ab1d8221db4def\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}\",\n  \"externalReference2\": \"{{externalReference2Value}}\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"SoleNonApplicantSpouse\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":1,\n        \"homeUtilitiesWhiteGoodsRepairs\":2,\n         \"publicSchoolingHigherEducation\":3,\n         \"personalHealthcareAndPetcare\":4,\n         \"clothingFootwearDependents\":5,\n         \"childcare\":6,\n         \"communicationConnectivity\":7,\n         \"insuranceHouseContents\":8,\n         \"homewaresApplicancesFurnishing\":9,\n         \"clothingFootwearAdult\":10,\n         \"lifestyleRecreationAlcoholSport\":11,\n         \"subscriptionMembershipExpertFees\":12,\n         \"vehicles\":13,\n         \"transport\":14,\n         \"insuranceMotorVehicle\":15,\n         \"insuranceHealthPersonalOther\":16,\n         \"childSpousalMaintenance\":17,\n         \"privateSchoolingTuition\":18,\n         \"gamblingTobacco\":19,\n         \"primaryHomeLandTaxBodyCorp\":20,\n         \"investmentSecondPropertyExpenses\":21\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":101,\n        \"homeUtilitiesWhiteGoodsRepairs\":102,\n         \"publicSchoolingHigherEducation\":103,\n         \"personalHealthcareAndPetcare\":104,\n         \"clothingFootwearDependents\":105,\n         \"childcare\":106,\n         \"communicationConnectivity\":107,\n         \"insuranceHouseContents\":108,\n         \"homewaresApplicancesFurnishing\":109,\n         \"clothingFootwearAdult\":110,\n         \"lifestyleRecreationAlcoholSport\":111,\n         \"subscriptionMembershipExpertFees\":112,\n         \"vehicles\":113,\n         \"transport\":114,\n         \"insuranceMotorVehicle\":115,\n         \"insuranceHealthPersonalOther\":116,\n         \"childSpousalMaintenance\":117,\n         \"privateSchoolingTuition\":118,\n         \"gamblingTobacco\":119,\n         \"primaryHomeLandTaxBodyCorp\":120,\n         \"investmentSecondPropertyExpenses\":121\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Create Applicant - Alphie Alphabet - Create and Link new Relie User Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8516ac02-9a53-4544-be50-cd2757586821",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforAlphie = \"alphie.alphabet.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "87cbd99c-db4d-4543-b65d-1a5d786619bc",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicantId);\r",
									"\r",
									"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
									"    var numberofRelieUserIds = relieUserIdsArray.length\r",
									"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
									"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
									"});\r",
									"\r",
									"/*\r",
									"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
									"});\r",
									"*/\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Smith (nee Qiao)\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1246"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:22:18 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXlg4Gj8SwMFR7g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Create Applicant - Alphie Alphabet - Same email address fails without linkto existing Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b8444d8f-9ae1-46dc-8164-cc7b02b52106",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforAlphie = \"alphie.alphabet.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8ba51987-dee0-45ba-a9ea-1427842db637",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"//postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicant.id);\r",
									"\r",
									"pm.test(\"Create Duplicate New Applicant - Status code is 400\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Create Duplicate New Applicant - Status code name has string set to Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create Duplicate New Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"To Create Duplicate New Applicant - error details provided\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorMessage).to.eql(\"The provided email address was invalid (duplicate)\");\r",
									"    pm.expect(jsonData.errorType).to.eql(\"Relie.ExistingRelieUser\");\r",
									"    pm.expect(jsonData.success).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"To Create Duplicate New Applicant - inner id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.id)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"To Create Duplicate New Applicant - even though errored, supplied names and email are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddress = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    pm.expect(jsonData.data.email).to.eql(expectedEmailAddress);\r",
									"    pm.expect(jsonData.data.firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.data.lastName).to.eql(\"Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create Duplicate New Applicant - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create Duplicate New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1246"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:22:18 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXlg4Gj8SwMFR7g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Applicant - Alphie Alphabet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "345a2589-1cc2-42dd-8956-b11fc68732a4",
								"exec": [
									"pm.test(\"Delete Applicant - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Applicant  - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Applicant - id is a GUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Applicant - id is GUID of applicant 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedguidforApplicant1 = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
									"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.id).to.eql(expectedguidforApplicant1);\r",
									"    \r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId1}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId} (Delete Applicant - Hayley Walsh)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId2}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:51 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "fzpNnxtjuUMIlz1pYCn8YKndkVUkdEgMMLrqg6DVwB0CSX3vEWcUEkSZkd5ibh22"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXngOGvNSwMF4Gg="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 0b26d7ef0f265884570bdb3e6c3750b0.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "df3a54cc-2631-4c6e-bb3a-8d6042498fbf"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb934-4f5063b038b0867c47f3a538"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "YAv2qSrmc8ZKWqR_1SCDy3TjI93mT86tPl9Kda8IV2DjVHjPP1g9Iw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"4c060125-8704-4639-9ef3-b07e1994e5e7\"\n}"
						}
					]
				},
				{
					"name": "Create Applicant - Alphie Alphabet - Create and Link new Relie User with link to Existing User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1dbc8f12-de30-4ac5-8149-91101b055ec3",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforAlphie = \"alphie.alphabet.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "826ec753-8984-4018-82fe-a388efc7e75c",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicantId);\r",
									"\r",
									"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
									"    var numberofRelieUserIds = relieUserIdsArray.length\r",
									"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
									"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
									"});\r",
									"\r",
									"/*\r",
									"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
									"});\r",
									"*/\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Smith (nee Qiao)\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1246"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:22:18 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXlg4Gj8SwMFR7g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Application Details Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8837f18c-0b72-4d1a-b85f-3b7b1e24bba8",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
									"\r",
									"pm.test(\"Get Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - domain ids are equal\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Exactly 1 applicant at this stage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants.length).to.eql(1);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Application - id is the same as the RA_ApplicationId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
									"    var expectedDomainId = postman.getEnvironmentVariable(\"RA_DomainId\");\r",
									"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
									"\r",
									"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_CREATED\");\r",
									"    pm.expect(jsonData.title).to.eql(expectedTitleValue);\r",
									"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.domain.id).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
									"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
									"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"/**\r",
									" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
									" *\r",
									" * @param {array} firstArray\r",
									" * @param {array} secondArray\r",
									" *\r",
									" * @returns {boolean}\r",
									" */\r",
									"function arraysSameElements(firstArray, secondArray) {\r",
									"  if (firstArray.length !== secondArray.length) {\r",
									"    return false;\r",
									"  }\r",
									"  return secondArray.every(function (value) {\r",
									"    return (firstArray.indexOf(value) >= 0);\r",
									"  });\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e894eee3-2435-49d8-9b11-fe2858ca5145",
								"exec": [
									"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{RA_ApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Send Applicant Invite - Alphie Alphabet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0c2ecd6-ba38-4bcd-9071-7688a60ceeb4",
								"exec": [
									"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - email recipients is correct and there is only 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
									"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
									"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId1}}",
								"invite"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				}
			],
			"description": "This is a set of test to show that we can have a user in the system withthe same email address only if we have the linktoexsinguser paramters set. Fruther to shw that an application cannot have two people with the same email address.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Two Applicant Names -  shared email address",
			"item": [
				{
					"name": "API Login Valid Creds Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0367a80-977b-4d41-89ea-d60a04d79bcc",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RI_AuthIDToken\", jsonData.access_token);\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - includes a 3600 expires token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - includes a token_type equal to Bearer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.eql('Bearer');\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - is at least 100 characters\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token.length).to.be.above(100);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=UTF-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{RI_IC_ClientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{RI_IC_ClientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "https://{{RI_Host}}/connect/token",
							"protocol": "https",
							"host": [
								"{{RI_Host}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "RI_IntegrationClient_ClientCredentials_QA_TFAL",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{RI_IC_ClientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{RI_IC_ClientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "https://{{RI_Host}}/connect/token",
									"protocol": "https",
									"host": [
										"{{RI_Host}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 00:35:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkQwMUYyNzU3QkU3MDI2QkRBNjM1MkQ5QTBBNDUwNDU4RDMyNjAyN0IiLCJ0eXAiOiJKV1QiLCJ4NXQiOiIwQjhuVjc1d0pyMm1OUzJhQ2tVRVdOTW1BbnMifQ.eyJuYmYiOjE1OTU4OTY1MDUsImV4cCI6MTU5NTkwMDEwNSwiaXNzIjoiaHR0cHM6Ly9pZC5yZWxpZWNoZWNrLmNvbS5hdSIsImF1ZCI6WyJodHRwczovL2lkLnJlbGllY2hlY2suY29tLmF1L3Jlc291cmNlcyIsInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdLCJjbGllbnRfaWQiOiJyYV9pbnRfcWFfdGZhbCIsInNjb3BlIjpbInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdfQ.dcFJP26noZa3BPafA17hK9O0_19ksKmw_lLxZa2kPoHvti4rltRKaDp7XnQvl4nhG3ulMd5a3yemaXxxq6RS5i5pOx6vc5_oJR8mukTox-5HCe1X8icRqMH6Jp8mToZpMkquQ2uxq9h5MV9w7gqZsEGJoQ3uW002GS94a7W9n7xzk88ZZLog2uuLfNRe31NoNjPnEr-4bx1URmPJvW7KlItbO3AdHiRiAlkKpX7ElOcGWlzebFrijMG3-X-5pGvTn3Scye1xZ0UKmmRdXFNfMxOnK-PmPPBdJfnvwrqJayZ2F5JmbhF-U7Qodu3QTYiLa4bsVT8EZVI-AfCWTKXqFABU7JMp6bMsLaQerBcDVxFEtDw9IFwYKr50ELJDNjR7_Cj4f_4clBYrsHpElVBsgSAvXkjhamED8e_N3HazhciIhLdPJvX7UNkrVLim0rN0OP3ZCUvIAi4QAQ8asTI5_gFJkBcyS1QVyw2pL-nkx5PrEmzoHglvgJ988yxMpLm4pvKVGgU9OY5uIzWvqjl0Sxnp8oP12R3sqF1jehsciMws-c-K4F9Pcme57iL2UoGZoLV61BAr9uS2ZZCX7E3-egYkzIsmVmVYczOGY9opzfT5oJniWntHA5iOiF-V7LtFrYtBNZQ3FW6jshtFTEm4UOGSTlSihOA6rBZZRBQLJV4\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\"\n}"
						}
					]
				},
				{
					"name": "Create New Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "059556eb-36ea-4a9a-83b9-70cea7e3c85a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicationId\", jsonData.data.applicationId);\r",
									"postman.setEnvironmentVariable(\"RA_AssessmentId\",jsonData.data.assessmentId);\r",
									"\r",
									"pm.test(\"Create New Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - inner application assessment ids are UUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.data.assessmentId)).to.eql(true);\r",
									"});\r",
									"\r",
									"//assuming we have passed in all the various different values.\r",
									"pm.test(\"Create New Application - for applicationAttributeIds length is 4\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
									"    pm.expect(sizeOfArrayOfApplicationAttributeIDs).to.eql(4);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - for applicationAttributeIds are all UUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
									"    var i =0;\r",
									"    for(i = 0;i < sizeOfArrayOfApplicationAttributeIDs;i++){\r",
									"        pm.expect(isGuid(jsonData.data.applicationAttributeIds[i])).to.eql(true);\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - id and applicationId are equal\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.data.applicationId);\r",
									"});\r",
									"\r",
									"\r",
									"let moment = require ('moment');\r",
									"\r",
									"/*\r",
									"pm.test(\"Create New Application - data application dates are all valid dates\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(moment(jsonData.data.application.dateRangeStart, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.dateRangeEnd, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - inner application assessment dates are all valid dates\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(moment(jsonData.data.application.assessments[0].startDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.assessments[0].endDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.assessments[0].createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.assessments[0].updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    \r",
									"    var date1 = new Date\r",
									"\r",
									"    let yesterday = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toISOString;\r",
									"    console.log(yesterday);\r",
									"    let yesterday1 = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toDateString;\r",
									"    console.log(yesterday1);\r",
									"    //console.log(\"Here is the date\" + getDate());\r",
									"});\r",
									"\r",
									"*/\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"Date.prototype.isValid = function () {               \r",
									"            // If the date object is invalid it \r",
									"            // will return 'NaN' on getTime()  \r",
									"            // and NaN is never equal to itself. \r",
									"            return this.getTime() === this.getTime(); \r",
									"};\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f9192b6d-4d73-484b-b9b3-1a48e282e185",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{titleValue}}\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}}\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4\",\n    \"QUANTUM-7ab1d8221db4abc\",\n    \"QUANTUM-7ab1d8221db4def\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}\",\n  \"externalReference2\": \"{{externalReference2Value}}\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"SoleNonApplicantSpouse\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":1,\n        \"homeUtilitiesWhiteGoodsRepairs\":2,\n         \"publicSchoolingHigherEducation\":3,\n         \"personalHealthcareAndPetcare\":4,\n         \"clothingFootwearDependents\":5,\n         \"childcare\":6,\n         \"communicationConnectivity\":7,\n         \"insuranceHouseContents\":8,\n         \"homewaresApplicancesFurnishing\":9,\n         \"clothingFootwearAdult\":10,\n         \"lifestyleRecreationAlcoholSport\":11,\n         \"subscriptionMembershipExpertFees\":12,\n         \"vehicles\":13,\n         \"transport\":14,\n         \"insuranceMotorVehicle\":15,\n         \"insuranceHealthPersonalOther\":16,\n         \"childSpousalMaintenance\":17,\n         \"privateSchoolingTuition\":18,\n         \"gamblingTobacco\":19,\n         \"primaryHomeLandTaxBodyCorp\":20,\n         \"investmentSecondPropertyExpenses\":21\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":101,\n        \"homeUtilitiesWhiteGoodsRepairs\":102,\n         \"publicSchoolingHigherEducation\":103,\n         \"personalHealthcareAndPetcare\":104,\n         \"clothingFootwearDependents\":105,\n         \"childcare\":106,\n         \"communicationConnectivity\":107,\n         \"insuranceHouseContents\":108,\n         \"homewaresApplicancesFurnishing\":109,\n         \"clothingFootwearAdult\":110,\n         \"lifestyleRecreationAlcoholSport\":111,\n         \"subscriptionMembershipExpertFees\":112,\n         \"vehicles\":113,\n         \"transport\":114,\n         \"insuranceMotorVehicle\":115,\n         \"insuranceHealthPersonalOther\":116,\n         \"childSpousalMaintenance\":117,\n         \"privateSchoolingTuition\":118,\n         \"gamblingTobacco\":119,\n         \"primaryHomeLandTaxBodyCorp\":120,\n         \"investmentSecondPropertyExpenses\":121\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Create Applicant - Alphie Alphabet - Create and Link new Relie User with link to Existing User Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ebd1d068-6459-4044-8daa-a3d8ec24789e",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforAlphie = \"alphie.alphabet.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "643b4d73-a0b4-420b-b5c6-f2d2b5e328da",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicantId);\r",
									"\r",
									"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
									"    var numberofRelieUserIds = relieUserIdsArray.length\r",
									"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
									"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
									"});\r",
									"\r",
									"/*\r",
									"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
									"});\r",
									"*/\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Alphabet\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"Alphie - My house number 1, 2111\"\n        },\n        {\n          \"address\": \"Alphie - My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Alphie - Bunnings\",\n          \"additionalEmployerNames\":[\"Alphie Bunnngs HQ\",\"Alphie Bunnings Central\"],\n          \"incomeAmount\": 1001.1,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"Alphie WeekendWorkerPlace\",\n          \"incomeAmount\": 2001.12,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":1\n        }\n    }\n  ]    \n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1246"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:22:18 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXlg4Gj8SwMFR7g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Create Applicant - Bertie Bassett - Same email address with link to Existing User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fd704d47-c040-4a77-a6d1-b72819c426e3",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforAlphie = \"alphie.alphabet.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "79b9a661-4861-4485-b51b-d6d54f0b268f",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicantId2\", jsonData.data.applicantId);\r",
									"\r",
									"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
									"    var numberofRelieUserIds = relieUserIdsArray.length\r",
									"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
									"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
									"});\r",
									"\r",
									"/*\r",
									"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
									"});\r",
									"*/\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alias\": \"Mrs Bertie Basset\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Bassett\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Bertie\",\n      \"lastName\": \"Bassett\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"Bertie My house number 1, 2111\"\n        },\n        {\n          \"address\": \"Bertie My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bertie Bunnings\",\n          \"additionalEmployerNames\":[\"Bertie Bunnngs HQ\",\"Bertie Bunnings Central\"],\n          \"incomeAmount\": 3002.123,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"Bertie WeekendWorkerPlace\",\n          \"incomeAmount\": 2002.1234,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":2.123\n        }\n    }\n  ]    \n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1246"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:22:18 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXlg4Gj8SwMFR7g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Application Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6177a19d-8522-4ba4-837e-1cdb0c14c232",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
									"\r",
									"pm.test(\"Get Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - domain ids are equal\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Application - id is the same as the RA_ApplicationId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
									"    var expectedDomainId = postman.getEnvironmentVariable(\"RA_DomainId\");\r",
									"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
									"\r",
									"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_CREATED\");\r",
									"    pm.expect(jsonData.title).to.eql(expectedTitleValue);\r",
									"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.domain.id).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
									"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"\r",
									"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
									"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"\r",
									"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
									"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
									"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
									"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
									"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
									"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"/**\r",
									" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
									" *\r",
									" * @param {array} firstArray\r",
									" * @param {array} secondArray\r",
									" *\r",
									" * @returns {boolean}\r",
									" */\r",
									"function arraysSameElements(firstArray, secondArray) {\r",
									"  if (firstArray.length !== secondArray.length) {\r",
									"    return false;\r",
									"  }\r",
									"  return secondArray.every(function (value) {\r",
									"    return (firstArray.indexOf(value) >= 0);\r",
									"  });\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6a03a60b-c008-4c22-8215-4ea44db17c7c",
								"exec": [
									"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{RA_ApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Send Applicant Invite - Alphie Alphabet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df924ad6-8a09-4e19-9c7a-cf95c850ae9b",
								"exec": [
									"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - email recipients is correct and there is only 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
									"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
									"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId1}}",
								"invite"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Send Applicant Invite - Bertie Bassett",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a93e77a6-3118-4d38-8d85-0d9b7e088dc5",
								"exec": [
									"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - email recipients is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforBertie = postman.getEnvironmentVariable(\"emailAddressforBertie\");\r",
									"    console.log(\"addressfor bertie +++ \" + expectedEmailAddressforBertie);\r",
									"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforBertie);\r",
									"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
									"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
									"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}/invite",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId2}}",
								"invite"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				}
			],
			"description": "This is a set of test to show that we can have a user in the system withthe same email address only if we have the linktoexsinguser paramters set. Fruther to shw that an application cannot have two people with the same email address.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Access Permissions Tests",
			"item": [
				{
					"name": "App in QA:D4",
					"item": [
						{
							"name": "Create New Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c8fc3c7-b2f6-4439-9506-297e437c249b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicationId\", jsonData.data.applicationId);\r",
											"postman.setEnvironmentVariable(\"RA_AssessmentId\",jsonData.data.assessmentId);\r",
											"\r",
											"pm.test(\"Create New Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - inner application assessment ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.assessmentId)).to.eql(true);\r",
											"});\r",
											"\r",
											"//assuming we have passed in all the various different values.\r",
											"pm.test(\"Create New Application - for applicationAttributeIds length is 4\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
											"    pm.expect(sizeOfArrayOfApplicationAttributeIDs).to.eql(4);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - for applicationAttributeIds are all UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
											"    var i =0;\r",
											"    for(i = 0;i < sizeOfArrayOfApplicationAttributeIDs;i++){\r",
											"        pm.expect(isGuid(jsonData.data.applicationAttributeIds[i])).to.eql(true);\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - id and applicationId are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.data.applicationId);\r",
											"});\r",
											"\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"/*\r",
											"pm.test(\"Create New Application - data application dates are all valid dates\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(moment(jsonData.data.application.dateRangeStart, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.dateRangeEnd, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - inner application assessment dates are all valid dates\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].startDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].endDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    \r",
											"    var date1 = new Date\r",
											"\r",
											"    let yesterday = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toISOString;\r",
											"    console.log(yesterday);\r",
											"    let yesterday1 = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toDateString;\r",
											"    console.log(yesterday1);\r",
											"    //console.log(\"Here is the date\" + getDate());\r",
											"});\r",
											"\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "47d512ad-b27b-4647-ac07-a83237f28881",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Sample App Domain Q4\",\n  \"domainId\": \"{{domainidQA4}}\",\n  \"description\": \"{{descriptionValue}}\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4\",\n    \"QUANTUM-7ab1d8221db4abc\",\n    \"QUANTUM-7ab1d8221db4def\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}\",\n  \"externalReference2\": \"{{externalReference2Value}}\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"SoleNonApplicantSpouse\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":1,\n        \"homeUtilitiesWhiteGoodsRepairs\":2,\n         \"publicSchoolingHigherEducation\":3,\n         \"personalHealthcareAndPetcare\":4,\n         \"clothingFootwearDependents\":5,\n         \"childcare\":6,\n         \"communicationConnectivity\":7,\n         \"insuranceHouseContents\":8,\n         \"homewaresApplicancesFurnishing\":9,\n         \"clothingFootwearAdult\":10,\n         \"lifestyleRecreationAlcoholSport\":11,\n         \"subscriptionMembershipExpertFees\":12,\n         \"vehicles\":13,\n         \"transport\":14,\n         \"insuranceMotorVehicle\":15,\n         \"insuranceHealthPersonalOther\":16,\n         \"childSpousalMaintenance\":17,\n         \"privateSchoolingTuition\":18,\n         \"gamblingTobacco\":19,\n         \"primaryHomeLandTaxBodyCorp\":20,\n         \"investmentSecondPropertyExpenses\":21\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":101,\n        \"homeUtilitiesWhiteGoodsRepairs\":102,\n         \"publicSchoolingHigherEducation\":103,\n         \"personalHealthcareAndPetcare\":104,\n         \"clothingFootwearDependents\":105,\n         \"childcare\":106,\n         \"communicationConnectivity\":107,\n         \"insuranceHouseContents\":108,\n         \"homewaresApplicancesFurnishing\":109,\n         \"clothingFootwearAdult\":110,\n         \"lifestyleRecreationAlcoholSport\":111,\n         \"subscriptionMembershipExpertFees\":112,\n         \"vehicles\":113,\n         \"transport\":114,\n         \"insuranceMotorVehicle\":115,\n         \"insuranceHealthPersonalOther\":116,\n         \"childSpousalMaintenance\":117,\n         \"privateSchoolingTuition\":118,\n         \"gamblingTobacco\":119,\n         \"primaryHomeLandTaxBodyCorp\":120,\n         \"investmentSecondPropertyExpenses\":121\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Applicant - Alphie Alphabet - Create and Link new Relie User with link to Existing User Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c4768e8f-3f89-4ad9-8a31-0530efec4874",
										"exec": [
											"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
											"var emailAddressforAlphie = \"alphie.alphabetq4.33\" + currentID + \"@mailinator.com\";\r",
											"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"\r",
											"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "02ed67b9-0956-4fa8-8ebd-bb0c3cf351f7",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicantId);\r",
											"\r",
											"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
											"    var numberofRelieUserIds = relieUserIdsArray.length\r",
											"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
											"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
											"});\r",
											"\r",
											"/*\r",
											"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
											"});\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Alphabet\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1246"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:22:18 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXlg4Gj8SwMFR7g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Applicant - Bertie Bassett - Same email address with link to Existing User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6b2e19c7-9193-4212-80e8-c40904d011b7",
										"exec": [
											"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
											"var emailAddressforAlphie = \"alphie.alphabetq4.33\" + currentID + \"@mailinator.com\";\r",
											"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"\r",
											"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "24c5d20b-02de-416e-b6eb-bcf23ce8bd20",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicantId2\", jsonData.data.applicantId);\r",
											"\r",
											"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
											"    var numberofRelieUserIds = relieUserIdsArray.length\r",
											"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
											"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
											"});\r",
											"\r",
											"/*\r",
											"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
											"});\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Mrs Bertie Basset\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Bassett\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Bertie\",\n      \"lastName\": \"Bassett\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1246"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:22:18 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXlg4Gj8SwMFR7g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Send Applicant Invite - Alphie Alphabet",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b0fc9011-058f-412c-b147-c664dd58e0a5",
										"exec": [
											"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - email recipients is correct and there is only 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
											"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforAlphie);\r",
											"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
											"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
											"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants",
												"{{RA_ApplicantId1}}",
												"invite"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "218"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:35:04 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXnYTHioywMFWPQ="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Send Applicant Invite - Bertie Bassett",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "746a41b3-f925-49e4-a778-e3c262fd75ee",
										"exec": [
											"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - email recipients is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedEmailAddressforBertie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"    console.log(\"addressfor bertie +++ \" + expectedEmailAddressforBertie);\r",
											"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforBertie);\r",
											"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
											"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
											"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite  - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId2}}",
										"invite"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants",
												"{{RA_ApplicantId1}}",
												"invite"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "218"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:35:04 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXnYTHioywMFWPQ="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user1 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b35f619a-d0de-4fe6-8f87-486c33f5b05b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA4\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"ample App Domain\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
											"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5f8d8d6f-9451-485b-9430-13a0a26e0b0d",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser1idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 1 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4839bca7-d3e8-4427-be41-09cf8db8b1fc",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "96d82dc0-d20d-4f63-86eb-6f1c995815e9",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser1idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 1\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user2 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b85bfe94-d9c8-4ec5-8506-47f856ff5edb",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA4\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "77eb5328-598a-4712-96e4-6e973f03f44a",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser2idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 2 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e60fbe21-4f5a-49fd-b82c-951046348ea4",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.be.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.be.eql(\"\");\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f88d61cd-9887-4512-9a89-a16ca7570a34",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser2idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 2\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user3 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "528ca71b-2026-4c38-8cf0-3c99fde22d38",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA4\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5da105c6-0803-4dc2-8cdd-3c8fd3a9ab37",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser3idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 3 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e198e770-9a7e-4943-9d84-c701d8dac327",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ab993028-fd54-4cbc-8481-90883522480c",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser3idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 3\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user4 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d4fe76c-6ffd-44be-ad30-b190ba8b2e02",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA4\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6e58aa9c-7fc0-4db8-8785-bed80fdb997d",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser4idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 4 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ed7741c5-e911-4740-88b5-e70faff4cb5b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ec9b14fe-d84a-4e18-aeb3-7d58aac78537",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser4idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user5 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a77c005e-4a07-4ac8-ba54-0c2bbdb084eb",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA4\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c50945a1-bf36-4f1f-af09-3b2087dca695",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser5idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 5 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1d34412-6861-4dab-9212-018b5ea39f2d",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1b41f00c-2ad1-4764-8111-7b53a920a702",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser5idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user6 -  not should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "771fce08-a4d6-46b5-b3fe-03f384b9d688",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.eql(\"You cannot get this application\");\r",
											"    pm.expect(jsonData.errorType).to.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.eql(\"\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "210bf769-a6f6-43e1-94bc-7452a820cb5f",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser6idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 6 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31e17481-e62e-4da3-a2fc-e83dd1922d84",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in error are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorized\");\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8db1d701-5089-4497-b6d6-b46d490cd005",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser6idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 6\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user7 -  not should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf9ca9de-223d-4dc6-bb9b-6215fcfecb94",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.eql(\"You cannot get this application\");\r",
											"    pm.expect(jsonData.errorType).to.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.eql(\"\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7c5f58c5-3c3f-4ad3-90b1-a254ae306c9f",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser7idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 7 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a8c097e-b5e6-4495-870b-fcddc43ebce3",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in error are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorized\");\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a9b5478c-fa63-4ea0-8240-970fa58c0e44",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser7idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "App in QA:D5",
					"item": [
						{
							"name": "Create New Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "69c90a8c-f43a-44ed-8a79-55a579c35f12",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicationId\", jsonData.data.applicationId);\r",
											"postman.setEnvironmentVariable(\"RA_AssessmentId\",jsonData.data.assessmentId);\r",
											"\r",
											"pm.test(\"Create New Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - inner application assessment ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.assessmentId)).to.eql(true);\r",
											"});\r",
											"\r",
											"//assuming we have passed in all the various different values.\r",
											"pm.test(\"Create New Application - for applicationAttributeIds length is 4\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
											"    pm.expect(sizeOfArrayOfApplicationAttributeIDs).to.eql(4);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - for applicationAttributeIds are all UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
											"    var i =0;\r",
											"    for(i = 0;i < sizeOfArrayOfApplicationAttributeIDs;i++){\r",
											"        pm.expect(isGuid(jsonData.data.applicationAttributeIds[i])).to.eql(true);\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - id and applicationId are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.data.applicationId);\r",
											"});\r",
											"\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"/*\r",
											"pm.test(\"Create New Application - data application dates are all valid dates\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(moment(jsonData.data.application.dateRangeStart, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.dateRangeEnd, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - inner application assessment dates are all valid dates\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].startDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].endDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    \r",
											"    var date1 = new Date\r",
											"\r",
											"    let yesterday = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toISOString;\r",
											"    console.log(yesterday);\r",
											"    let yesterday1 = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toDateString;\r",
											"    console.log(yesterday1);\r",
											"    //console.log(\"Here is the date\" + getDate());\r",
											"});\r",
											"\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e15cccf9-3bc2-4f12-b000-cd836eeb2ec2",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"title\": \"Sample App Domain Q5\",\n  \"domainId\": \"{{domainidQA5}}\",\n  \"description\": \"{{descriptionValue}}\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4\",\n    \"QUANTUM-7ab1d8221db4abc\",\n    \"QUANTUM-7ab1d8221db4def\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}\",\n  \"externalReference2\": \"{{externalReference2Value}}\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"SoleNonApplicantSpouse\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":1,\n        \"homeUtilitiesWhiteGoodsRepairs\":2,\n         \"publicSchoolingHigherEducation\":3,\n         \"personalHealthcareAndPetcare\":4,\n         \"clothingFootwearDependents\":5,\n         \"childcare\":6,\n         \"communicationConnectivity\":7,\n         \"insuranceHouseContents\":8,\n         \"homewaresApplicancesFurnishing\":9,\n         \"clothingFootwearAdult\":10,\n         \"lifestyleRecreationAlcoholSport\":11,\n         \"subscriptionMembershipExpertFees\":12,\n         \"vehicles\":13,\n         \"transport\":14,\n         \"insuranceMotorVehicle\":15,\n         \"insuranceHealthPersonalOther\":16,\n         \"childSpousalMaintenance\":17,\n         \"privateSchoolingTuition\":18,\n         \"gamblingTobacco\":19,\n         \"primaryHomeLandTaxBodyCorp\":20,\n         \"investmentSecondPropertyExpenses\":21\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":101,\n        \"homeUtilitiesWhiteGoodsRepairs\":102,\n         \"publicSchoolingHigherEducation\":103,\n         \"personalHealthcareAndPetcare\":104,\n         \"clothingFootwearDependents\":105,\n         \"childcare\":106,\n         \"communicationConnectivity\":107,\n         \"insuranceHouseContents\":108,\n         \"homewaresApplicancesFurnishing\":109,\n         \"clothingFootwearAdult\":110,\n         \"lifestyleRecreationAlcoholSport\":111,\n         \"subscriptionMembershipExpertFees\":112,\n         \"vehicles\":113,\n         \"transport\":114,\n         \"insuranceMotorVehicle\":115,\n         \"insuranceHealthPersonalOther\":116,\n         \"childSpousalMaintenance\":117,\n         \"privateSchoolingTuition\":118,\n         \"gamblingTobacco\":119,\n         \"primaryHomeLandTaxBodyCorp\":120,\n         \"investmentSecondPropertyExpenses\":121\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Applicant - Alphie Alphabet - Create and Link new Relie User with link to Existing User Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ba44855f-2ed3-4e9e-955a-2a7a6f8d8fa0",
										"exec": [
											"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
											"var emailAddressforAlphie = \"alphie.alphabetq5.33\" + currentID + \"@mailinator.com\";\r",
											"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"\r",
											"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "00c897f7-46d9-4ca2-a5c3-9f9a212d3d1c",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicantId);\r",
											"\r",
											"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
											"    var numberofRelieUserIds = relieUserIdsArray.length\r",
											"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
											"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
											"});\r",
											"\r",
											"/*\r",
											"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
											"});\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Alphabet\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1246"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:22:18 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXlg4Gj8SwMFR7g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Applicant - Bertie Bassett - Same email address with link to Existing User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5e780c7a-2c6c-4132-8e53-d82319fc808b",
										"exec": [
											"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
											"var emailAddressforAlphie = \"alphie.alphabetq5.33\" + currentID + \"@mailinator.com\";\r",
											"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"\r",
											"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1baa51d8-67da-45b3-a917-19aa1aed464c",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicantId2\", jsonData.data.applicantId);\r",
											"\r",
											"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
											"    var numberofRelieUserIds = relieUserIdsArray.length\r",
											"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
											"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
											"});\r",
											"\r",
											"/*\r",
											"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
											"});\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Mrs Bertie Basset\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Bassett\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Bertie\",\n      \"lastName\": \"Bassett\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1246"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:22:18 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXlg4Gj8SwMFR7g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Send Applicant Invite - Alphie Alphabet",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5b072f00-64c9-4cf7-b49a-d34554739c82",
										"exec": [
											"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - email recipients is correct and there is only 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
											"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforAlphie);\r",
											"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
											"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
											"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants",
												"{{RA_ApplicantId1}}",
												"invite"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "218"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:35:04 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXnYTHioywMFWPQ="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Send Applicant Invite - Bertie Bassett",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4930d657-154e-4539-a08d-4905082681c7",
										"exec": [
											"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - email recipients is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedEmailAddressforBertie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"    console.log(\"addressfor bertie +++ \" + expectedEmailAddressforBertie);\r",
											"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforBertie);\r",
											"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
											"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
											"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite  - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId2}}",
										"invite"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants",
												"{{RA_ApplicantId1}}",
												"invite"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "218"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:35:04 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXnYTHioywMFWPQ="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user1 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f97c7589-4578-4d0b-97bc-2ac63c15a8f3",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA5\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"ample App Domain\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
											"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "43b270d4-afa0-4848-8fd2-844027385f57",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser1idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 1 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ec5dfa2-f2ff-48ff-a0bb-6324bc0ff9ba",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c9e636ea-1948-47b3-8386-ce6941cf9c93",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser1idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 1\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user2 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c06024c3-31e8-436b-92d7-79556021ac64",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA5\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8782ac6e-7a5a-4744-8cf6-e2b56d7eaa5e",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser2idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 2 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d52a3970-fce1-46cc-b34b-ef101f43f0ec",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.be.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.be.eql(\"\");\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e4119feb-d967-447d-8ba0-ee92fbc427ec",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser2idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 2\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user3 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "561b839c-bbf0-4597-be71-493a05e01a39",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA5\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "08be4dc0-de1d-4eaf-96c9-61b87ba4651c",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser3idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 3 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "953af053-9ec2-4efd-bffd-dacd5cc986f3",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "802b4813-2067-4529-929e-7804f288d137",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser3idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 3\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user4 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b87d7b6-9cd0-40c1-aa24-4f687f6c61d2",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.eql(\"You cannot get this application\");\r",
											"    pm.expect(jsonData.errorType).to.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.eql(\"\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d95cda5f-d86b-493b-b4bb-5deb660443d8",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser4idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 4 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02dac57d-fcf1-4bbc-9749-89cef61c0672",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in error are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorized\");\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0dc3edab-4d89-4ab3-a2cb-749be1fb97f7",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser4idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user5 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9beaca95-7440-40b5-9384-41bb3027bef7",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA5\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bbcd692b-d202-433b-bd83-5e2c32d623d9",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser5idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 5 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be3551ed-be74-40b5-890a-7d680cf0a6bc",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "64aff02b-b0cc-40e0-8983-94acc60c0ea8",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser5idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user6 - should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5eaff8c7-edde-4e30-8be9-05ec6c3562bd",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.eql(\"You cannot get this application\");\r",
											"    pm.expect(jsonData.errorType).to.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.eql(\"\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0da00c15-4511-4cd2-85bd-bcbe49ab4a95",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser6idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 6 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05cbd3b2-8481-412e-801e-f97c6fc37b20",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in error are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorized\");\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d0b928a7-4335-4a4e-ba4d-16edb5e68655",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser6idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 6\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user7 - should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fe74e31-a168-4ac7-8e07-5b77668093c1",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.eql(\"You cannot get this application\");\r",
											"    pm.expect(jsonData.errorType).to.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.eql(\"\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "24d3cb0e-44e9-43f1-b876-db7f5b8c38c0",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser7idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 7 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "72b2a106-7adb-48a3-9d29-8a4bef914f5b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in error are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorized\");\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bbba71a3-5246-4075-b042-d6b9bb385b90",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser7idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "App in QA:D6",
					"item": [
						{
							"name": "Create New Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e6977f62-dd08-409e-9563-1ae14aab288e",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicationId\", jsonData.data.applicationId);\r",
											"postman.setEnvironmentVariable(\"RA_AssessmentId\",jsonData.data.assessmentId);\r",
											"\r",
											"pm.test(\"Create New Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - inner application assessment ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.assessmentId)).to.eql(true);\r",
											"});\r",
											"\r",
											"//assuming we have passed in all the various different values.\r",
											"pm.test(\"Create New Application - for applicationAttributeIds length is 4\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
											"    pm.expect(sizeOfArrayOfApplicationAttributeIDs).to.eql(4);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - for applicationAttributeIds are all UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
											"    var i =0;\r",
											"    for(i = 0;i < sizeOfArrayOfApplicationAttributeIDs;i++){\r",
											"        pm.expect(isGuid(jsonData.data.applicationAttributeIds[i])).to.eql(true);\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - id and applicationId are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.data.applicationId);\r",
											"});\r",
											"\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"/*\r",
											"pm.test(\"Create New Application - data application dates are all valid dates\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(moment(jsonData.data.application.dateRangeStart, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.dateRangeEnd, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - inner application assessment dates are all valid dates\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].startDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].endDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    \r",
											"    var date1 = new Date\r",
											"\r",
											"    let yesterday = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toISOString;\r",
											"    console.log(yesterday);\r",
											"    let yesterday1 = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toDateString;\r",
											"    console.log(yesterday1);\r",
											"    //console.log(\"Here is the date\" + getDate());\r",
											"});\r",
											"\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e47252bd-2452-41e0-8355-956aa29afcb0",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Sample App Domain Q6\",\n  \"domainId\": \"{{domainidQA6}}\",\n  \"description\": \"{{descriptionValue}}\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4\",\n    \"QUANTUM-7ab1d8221db4abc\",\n    \"QUANTUM-7ab1d8221db4def\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}\",\n  \"externalReference2\": \"{{externalReference2Value}}\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"SoleNonApplicantSpouse\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":1,\n        \"homeUtilitiesWhiteGoodsRepairs\":2,\n         \"publicSchoolingHigherEducation\":3,\n         \"personalHealthcareAndPetcare\":4,\n         \"clothingFootwearDependents\":5,\n         \"childcare\":6,\n         \"communicationConnectivity\":7,\n         \"insuranceHouseContents\":8,\n         \"homewaresApplicancesFurnishing\":9,\n         \"clothingFootwearAdult\":10,\n         \"lifestyleRecreationAlcoholSport\":11,\n         \"subscriptionMembershipExpertFees\":12,\n         \"vehicles\":13,\n         \"transport\":14,\n         \"insuranceMotorVehicle\":15,\n         \"insuranceHealthPersonalOther\":16,\n         \"childSpousalMaintenance\":17,\n         \"privateSchoolingTuition\":18,\n         \"gamblingTobacco\":19,\n         \"primaryHomeLandTaxBodyCorp\":20,\n         \"investmentSecondPropertyExpenses\":21\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":101,\n        \"homeUtilitiesWhiteGoodsRepairs\":102,\n         \"publicSchoolingHigherEducation\":103,\n         \"personalHealthcareAndPetcare\":104,\n         \"clothingFootwearDependents\":105,\n         \"childcare\":106,\n         \"communicationConnectivity\":107,\n         \"insuranceHouseContents\":108,\n         \"homewaresApplicancesFurnishing\":109,\n         \"clothingFootwearAdult\":110,\n         \"lifestyleRecreationAlcoholSport\":111,\n         \"subscriptionMembershipExpertFees\":112,\n         \"vehicles\":113,\n         \"transport\":114,\n         \"insuranceMotorVehicle\":115,\n         \"insuranceHealthPersonalOther\":116,\n         \"childSpousalMaintenance\":117,\n         \"privateSchoolingTuition\":118,\n         \"gamblingTobacco\":119,\n         \"primaryHomeLandTaxBodyCorp\":120,\n         \"investmentSecondPropertyExpenses\":121\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Applicant - Alphie Alphabet - Create and Link new Relie User with link to Existing User Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f9c6f9b0-c9af-44e1-a96b-e079390a5de3",
										"exec": [
											"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
											"var emailAddressforAlphie = \"alphie.alphabetq6.33\" + currentID + \"@mailinator.com\";\r",
											"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"\r",
											"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "99f03d7e-cc71-4829-8217-6c9e6cc92a07",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicantId);\r",
											"\r",
											"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
											"    var numberofRelieUserIds = relieUserIdsArray.length\r",
											"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
											"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
											"});\r",
											"\r",
											"/*\r",
											"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
											"});\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Alphabet\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1246"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:22:18 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXlg4Gj8SwMFR7g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Applicant - Bertie Bassett - Same email address with link to Existing User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "55a57079-4042-4acb-82ec-b3f73270abed",
										"exec": [
											"/*\r",
											"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
											"var emailAddressforAlphie = \"alphie.alphabetq6.33\" + currentID + \"@mailinator.com\";\r",
											"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"\r",
											"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);\r",
											"*/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1c07353f-9152-423c-8aea-d96231c74964",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicantId2\", jsonData.data.applicantId);\r",
											"\r",
											"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
											"    var numberofRelieUserIds = relieUserIdsArray.length\r",
											"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
											"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
											"});\r",
											"\r",
											"/*\r",
											"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
											"});\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Mrs Bertie Basset\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Bassett\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Bertie\",\n      \"lastName\": \"Bassett\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1246"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:22:18 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXlg4Gj8SwMFR7g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Send Applicant Invite - Alphie Alphabet",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ea4755a-d505-448a-b870-79562fcd2572",
										"exec": [
											"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - email recipients is correct and there is only 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
											"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforAlphie);\r",
											"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
											"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
											"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants",
												"{{RA_ApplicantId1}}",
												"invite"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "218"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:35:04 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXnYTHioywMFWPQ="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Send Applicant Invite - Bertie Bassett",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7cc8d0d-5d36-488b-8e08-e1d5fcd5bceb",
										"exec": [
											"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - email recipients is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedEmailAddressforBertie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"    console.log(\"addressfor bertie +++ \" + expectedEmailAddressforBertie);\r",
											"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforBertie);\r",
											"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
											"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
											"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite  - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId2}}",
										"invite"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants",
												"{{RA_ApplicantId1}}",
												"invite"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "218"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:35:04 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXnYTHioywMFWPQ="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user1 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0154d5de-1ddc-478b-92c1-ee8285fd791d",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA6\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"ample App Domain\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
											"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7393becb-7e13-45a0-bdfa-7813273fd102",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser1idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 1 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af72a2c9-d762-4845-865e-5452225b59fc",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "79ce0bfe-bef7-450a-9256-78a6a382df66",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser1idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user2 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0fd02c00-6cff-4fea-b27e-d280528aa89f",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA6\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5a8e62f3-51a1-44c1-824e-d724a6f31e94",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser2idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 2 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c6bb1367-d489-41da-aa06-886beea70f56",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.be.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.be.eql(\"\");\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "90ae4a7b-1b66-4592-81a0-c9bf82f5f5e4",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser2idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user3 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "72e2eabc-064f-4f1f-8dd7-f2517af10e30",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA6\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "83045f8b-89b7-4a10-b1f5-ae0df66bb023",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser3idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 3 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb3967b4-82b9-4a2b-be9b-eab6794ed0eb",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6ebfbafe-4298-4652-a7a3-43c0e8a23b6b",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser3idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user4 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e6be3895-0dd4-4bce-acd1-c394ea6fbb37",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA6\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2d9c1ef9-dad2-49e1-9317-040b5fac2d42",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser4idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 4 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e9aaeb3a-bff8-4c98-a92c-13fa6d9b458c",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "485039d5-b45b-4019-848f-b6c2650ff886",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser4idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user5 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1954f0e9-5dac-4a21-a456-833e3aa5ab61",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA6\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8e752344-36bd-4dab-b9f7-549ea96b1707",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser5idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 5 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54929b31-b9e2-4f9c-b2d1-483ca334cdbf",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2b5c2009-12b5-4222-bd68-75ef0d911ce1",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser5idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user6 - should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c6d6d19-022f-4ccc-b85c-5e4806582be4",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA6\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "00da47d4-4d84-41f2-84f1-7ea7998480f9",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser6idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 6 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d0c2413-57c7-48ec-9507-c7da145879d1",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3d9dff33-ec3a-47a1-bc69-8a1fed1bca04",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser6idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user7 - should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a9443c8-1717-4111-9c8a-cc2850dce8f4",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA6\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "03f098e0-d2e3-4693-854e-8f6110522a48",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser7idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 7 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "75fe6da8-7f1c-474c-b0ac-7bcf48a85cbc",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e72fada1-e141-4386-9aab-859ac37ed009",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser7idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "App in QA:D7",
					"item": [
						{
							"name": "Create New Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "66563156-1390-4779-a9fb-bec19fd5f98b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicationId\", jsonData.data.applicationId);\r",
											"postman.setEnvironmentVariable(\"RA_AssessmentId\",jsonData.data.assessmentId);\r",
											"\r",
											"pm.test(\"Create New Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - inner application assessment ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.assessmentId)).to.eql(true);\r",
											"});\r",
											"\r",
											"//assuming we have passed in all the various different values.\r",
											"pm.test(\"Create New Application - for applicationAttributeIds length is 4\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
											"    pm.expect(sizeOfArrayOfApplicationAttributeIDs).to.eql(4);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - for applicationAttributeIds are all UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
											"    var i =0;\r",
											"    for(i = 0;i < sizeOfArrayOfApplicationAttributeIDs;i++){\r",
											"        pm.expect(isGuid(jsonData.data.applicationAttributeIds[i])).to.eql(true);\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - id and applicationId are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.data.applicationId);\r",
											"});\r",
											"\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"/*\r",
											"pm.test(\"Create New Application - data application dates are all valid dates\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(moment(jsonData.data.application.dateRangeStart, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.dateRangeEnd, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - inner application assessment dates are all valid dates\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].startDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].endDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    \r",
											"    var date1 = new Date\r",
											"\r",
											"    let yesterday = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toISOString;\r",
											"    console.log(yesterday);\r",
											"    let yesterday1 = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toDateString;\r",
											"    console.log(yesterday1);\r",
											"    //console.log(\"Here is the date\" + getDate());\r",
											"});\r",
											"\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6640b50c-9d10-42c9-bf48-8c6b9fc235f7",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Sample App Domain Q7\",\n  \"domainId\": \"{{domainidQA7}}\",\n  \"description\": \"{{descriptionValue}}\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4\",\n    \"QUANTUM-7ab1d8221db4abc\",\n    \"QUANTUM-7ab1d8221db4def\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}\",\n  \"externalReference2\": \"{{externalReference2Value}}\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"SoleNonApplicantSpouse\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":1,\n        \"homeUtilitiesWhiteGoodsRepairs\":2,\n         \"publicSchoolingHigherEducation\":3,\n         \"personalHealthcareAndPetcare\":4,\n         \"clothingFootwearDependents\":5,\n         \"childcare\":6,\n         \"communicationConnectivity\":7,\n         \"insuranceHouseContents\":8,\n         \"homewaresApplicancesFurnishing\":9,\n         \"clothingFootwearAdult\":10,\n         \"lifestyleRecreationAlcoholSport\":11,\n         \"subscriptionMembershipExpertFees\":12,\n         \"vehicles\":13,\n         \"transport\":14,\n         \"insuranceMotorVehicle\":15,\n         \"insuranceHealthPersonalOther\":16,\n         \"childSpousalMaintenance\":17,\n         \"privateSchoolingTuition\":18,\n         \"gamblingTobacco\":19,\n         \"primaryHomeLandTaxBodyCorp\":20,\n         \"investmentSecondPropertyExpenses\":21\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":101,\n        \"homeUtilitiesWhiteGoodsRepairs\":102,\n         \"publicSchoolingHigherEducation\":103,\n         \"personalHealthcareAndPetcare\":104,\n         \"clothingFootwearDependents\":105,\n         \"childcare\":106,\n         \"communicationConnectivity\":107,\n         \"insuranceHouseContents\":108,\n         \"homewaresApplicancesFurnishing\":109,\n         \"clothingFootwearAdult\":110,\n         \"lifestyleRecreationAlcoholSport\":111,\n         \"subscriptionMembershipExpertFees\":112,\n         \"vehicles\":113,\n         \"transport\":114,\n         \"insuranceMotorVehicle\":115,\n         \"insuranceHealthPersonalOther\":116,\n         \"childSpousalMaintenance\":117,\n         \"privateSchoolingTuition\":118,\n         \"gamblingTobacco\":119,\n         \"primaryHomeLandTaxBodyCorp\":120,\n         \"investmentSecondPropertyExpenses\":121\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Applicant - Alphie Alphabet - Create and Link new Relie User with link to Existing User Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "fd0de2f2-2655-4edc-b20c-7fdf38cd200a",
										"exec": [
											"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
											"var emailAddressforAlphie = \"alphie.alphabetq7.33\" + currentID + \"@mailinator.com\";\r",
											"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"\r",
											"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "96af753b-088b-437c-a50c-12934729be9f",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicantId);\r",
											"\r",
											"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
											"    var numberofRelieUserIds = relieUserIdsArray.length\r",
											"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
											"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
											"});\r",
											"\r",
											"/*\r",
											"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
											"});\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Alphabet\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1246"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:22:18 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXlg4Gj8SwMFR7g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Applicant - Bertie Bassett - Same email address with link to Existing User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "271495fa-1a38-470f-b7f9-7448cff3f76c",
										"exec": [
											"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
											"var emailAddressforAlphie = \"alphie.alphabetq7.33\" + currentID + \"@mailinator.com\";\r",
											"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"\r",
											"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e218523d-81ee-44f5-a1f1-4d946177cf76",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicantId2\", jsonData.data.applicantId);\r",
											"\r",
											"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
											"    var numberofRelieUserIds = relieUserIdsArray.length\r",
											"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
											"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
											"});\r",
											"\r",
											"/*\r",
											"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
											"});\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Mrs Bertie Basset\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Bassett\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Bertie\",\n      \"lastName\": \"Bassett\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1246"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:22:18 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXlg4Gj8SwMFR7g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Send Applicant Invite - Alphie Alphabet",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f77abcd4-0bdc-4c4d-b910-d56f69b6e3aa",
										"exec": [
											"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - email recipients is correct and there is only 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
											"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforAlphie);\r",
											"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
											"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
											"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants",
												"{{RA_ApplicantId1}}",
												"invite"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "218"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:35:04 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXnYTHioywMFWPQ="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Send Applicant Invite - Bertie Bassett",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19965d71-0195-4926-bc48-8cafebf3816e",
										"exec": [
											"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - email recipients is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedEmailAddressforBertie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"    console.log(\"addressfor bertie +++ \" + expectedEmailAddressforBertie);\r",
											"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforBertie);\r",
											"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
											"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
											"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite  - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId2}}",
										"invite"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants",
												"{{RA_ApplicantId1}}",
												"invite"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "218"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:35:04 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXnYTHioywMFWPQ="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user1 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa3cbb68-4412-4065-9db2-3122b971137b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA7\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"ample App Domain\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
											"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "674b759d-30eb-435c-afe1-d9e08c115b6b",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser1idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 1 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ec4e46f2-2b8b-4129-9cad-4753748a0907",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "89e423be-ab3c-4469-9426-ccc4c318de15",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser1idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user2 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b77a5828-b268-4586-aa46-159d1a4dcc3c",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA7\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b69a004b-fd88-42e5-8fc5-e8c5830db8c3",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 2 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d0a4f82-031f-40e4-afb6-5b796a123416",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.be.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.be.eql(\"\");\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "546dae01-34e0-4303-ace6-52d597880404",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser2idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user3 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccb57dbf-b8cf-4e45-9169-e31ae1814af9",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA7\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6be79351-3cbc-4021-9c4f-9d689c27e4d0",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser3idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 3 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b136a07f-0c0c-4d23-ba82-074e5f419a72",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8be56414-1789-41d1-a542-345b30835ad9",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser3idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user4 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "314ad9a0-d815-4d72-ba1b-8db9794d0649",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA7\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b13a2442-f579-4019-80e7-f760f14d14c5",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser4idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 4 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a6ec5864-58ac-4963-ad9a-a1722c4832ac",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0ef516a3-75aa-4bb4-a96f-e351b1563352",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser4idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user5 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09a8b077-3d47-4016-aac1-9556458da7f5",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA7\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ade11add-9813-41d5-beb1-24e447e89c3b",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser5idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 5 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3fd5dce-ff7b-43da-be74-a0d521b22d1f",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9963e9e0-6a9f-4089-8714-3686fec45796",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser5idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user6 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a2f13b7-00ce-41e3-be51-e0e7067aed34",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA7\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4ccfabd3-0f4a-4ede-a650-755283e7acfb",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser6idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 6 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5a0436b-74a9-4787-8ed0-aa6252a4c349",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "715dba0e-a81d-4000-9c0c-22a37c2a8488",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser6idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user7 - should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fc9ab5f8-7224-47c8-9adc-c4e71253cda8",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.eql(\"You cannot get this application\");\r",
											"    pm.expect(jsonData.errorType).to.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.eql(\"\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a2ad6b58-5aae-4593-b811-9867ff74c3c7",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser7idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 7 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5c0b1ec6-a32a-40bd-8c72-d9533faa6949",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in error are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorized\");\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5facc9d2-09c4-4708-8507-b693b87b8489",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser7idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "App in QA:D8",
					"item": [
						{
							"name": "Create New Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3fc27e16-1528-46ad-8295-d9510de26f65",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicationId\", jsonData.data.applicationId);\r",
											"postman.setEnvironmentVariable(\"RA_AssessmentId\",jsonData.data.assessmentId);\r",
											"\r",
											"pm.test(\"Create New Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - inner application assessment ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.assessmentId)).to.eql(true);\r",
											"});\r",
											"\r",
											"//assuming we have passed in all the various different values.\r",
											"pm.test(\"Create New Application - for applicationAttributeIds length is 4\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
											"    pm.expect(sizeOfArrayOfApplicationAttributeIDs).to.eql(4);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - for applicationAttributeIds are all UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
											"    var i =0;\r",
											"    for(i = 0;i < sizeOfArrayOfApplicationAttributeIDs;i++){\r",
											"        pm.expect(isGuid(jsonData.data.applicationAttributeIds[i])).to.eql(true);\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - id and applicationId are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.data.applicationId);\r",
											"});\r",
											"\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"/*\r",
											"pm.test(\"Create New Application - data application dates are all valid dates\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(moment(jsonData.data.application.dateRangeStart, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.dateRangeEnd, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - inner application assessment dates are all valid dates\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].startDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].endDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    \r",
											"    var date1 = new Date\r",
											"\r",
											"    let yesterday = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toISOString;\r",
											"    console.log(yesterday);\r",
											"    let yesterday1 = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toDateString;\r",
											"    console.log(yesterday1);\r",
											"    //console.log(\"Here is the date\" + getDate());\r",
											"});\r",
											"\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4f8b900b-34f8-4478-92c0-bcffd0635778",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Sample App Domain Q8\",\n  \"domainId\": \"{{domainidQA8}}\",\n  \"description\": \"{{descriptionValue}}\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4\",\n    \"QUANTUM-7ab1d8221db4abc\",\n    \"QUANTUM-7ab1d8221db4def\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}\",\n  \"externalReference2\": \"{{externalReference2Value}}\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"SoleNonApplicantSpouse\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":1,\n        \"homeUtilitiesWhiteGoodsRepairs\":2,\n         \"publicSchoolingHigherEducation\":3,\n         \"personalHealthcareAndPetcare\":4,\n         \"clothingFootwearDependents\":5,\n         \"childcare\":6,\n         \"communicationConnectivity\":7,\n         \"insuranceHouseContents\":8,\n         \"homewaresApplicancesFurnishing\":9,\n         \"clothingFootwearAdult\":10,\n         \"lifestyleRecreationAlcoholSport\":11,\n         \"subscriptionMembershipExpertFees\":12,\n         \"vehicles\":13,\n         \"transport\":14,\n         \"insuranceMotorVehicle\":15,\n         \"insuranceHealthPersonalOther\":16,\n         \"childSpousalMaintenance\":17,\n         \"privateSchoolingTuition\":18,\n         \"gamblingTobacco\":19,\n         \"primaryHomeLandTaxBodyCorp\":20,\n         \"investmentSecondPropertyExpenses\":21\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":101,\n        \"homeUtilitiesWhiteGoodsRepairs\":102,\n         \"publicSchoolingHigherEducation\":103,\n         \"personalHealthcareAndPetcare\":104,\n         \"clothingFootwearDependents\":105,\n         \"childcare\":106,\n         \"communicationConnectivity\":107,\n         \"insuranceHouseContents\":108,\n         \"homewaresApplicancesFurnishing\":109,\n         \"clothingFootwearAdult\":110,\n         \"lifestyleRecreationAlcoholSport\":111,\n         \"subscriptionMembershipExpertFees\":112,\n         \"vehicles\":113,\n         \"transport\":114,\n         \"insuranceMotorVehicle\":115,\n         \"insuranceHealthPersonalOther\":116,\n         \"childSpousalMaintenance\":117,\n         \"privateSchoolingTuition\":118,\n         \"gamblingTobacco\":119,\n         \"primaryHomeLandTaxBodyCorp\":120,\n         \"investmentSecondPropertyExpenses\":121\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Applicant - Alphie Alphabet - Create and Link new Relie User with link to Existing User Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6f17f989-a7a5-4759-8f2a-96ed39b752fd",
										"exec": [
											"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
											"var emailAddressforAlphie = \"alphie.alphabetq8.33\" + currentID + \"@mailinator.com\";\r",
											"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"\r",
											"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "55a94b03-c417-4317-9216-8a10dbb03336",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicantId);\r",
											"\r",
											"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
											"    var numberofRelieUserIds = relieUserIdsArray.length\r",
											"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
											"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
											"});\r",
											"\r",
											"/*\r",
											"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
											"});\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Alphabet\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1246"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:22:18 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXlg4Gj8SwMFR7g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Applicant - Bertie Bassett - Same email address with link to Existing User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a360439a-3f69-4239-a62d-b575b2b6e451",
										"exec": [
											"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
											"var emailAddressforAlphie = \"alphie.alphabetq8.33\" + currentID + \"@mailinator.com\";\r",
											"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"\r",
											"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "82381b15-4af3-40f0-880c-cd73e82539f5",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicantId2\", jsonData.data.applicantId);\r",
											"\r",
											"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
											"    var numberofRelieUserIds = relieUserIdsArray.length\r",
											"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
											"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
											"});\r",
											"\r",
											"/*\r",
											"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
											"});\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Mrs Bertie Basset\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Bassett\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Bertie\",\n      \"lastName\": \"Bassett\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1246"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:22:18 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXlg4Gj8SwMFR7g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Send Applicant Invite - Alphie Alphabet",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80bde758-4024-4e8e-ae47-ceabd8f12d70",
										"exec": [
											"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - email recipients is correct and there is only 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
											"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforAlphie);\r",
											"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
											"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
											"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants",
												"{{RA_ApplicantId1}}",
												"invite"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "218"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:35:04 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXnYTHioywMFWPQ="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Send Applicant Invite - Bertie Bassett",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "068294c9-158a-4c7c-8a07-ac91857083af",
										"exec": [
											"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - email recipients is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedEmailAddressforBertie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"    console.log(\"addressfor bertie +++ \" + expectedEmailAddressforBertie);\r",
											"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforBertie);\r",
											"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
											"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
											"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite  - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId2}}",
										"invite"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants",
												"{{RA_ApplicantId1}}",
												"invite"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "218"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:35:04 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXnYTHioywMFWPQ="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user1 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "66cde891-c72d-4c28-8956-33872fedfc2f",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA8\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"ample App Domain\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
											"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f5b925af-5d1e-41a3-80a7-4e45df928836",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser1idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 1 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "df716113-4886-4631-b275-f3b05ecd51ec",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "eb88af1a-f949-468c-a7f5-95f414058911",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser1idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user2 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d767ae88-70b0-413f-9b0f-523d610e8ad7",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA8\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5548e5c7-f05f-43b9-b3db-dc8bacf55519",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser2idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 2 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a92f237-d227-496f-a7cc-137d94f3dfd7",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.be.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.be.eql(\"\");\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "be13b176-eddc-4746-a321-e26d9b0e5a91",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser2idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user3 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a701458-4773-478e-bed5-e9da6a053e31",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA8\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "eb820f52-3ab1-4cd4-8f2e-66d9e80f8901",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser3idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 3 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "df3056e8-8b3c-4256-8331-b22ae13c4555",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b75ed82f-6b3c-4aca-8396-cb64c95c4606",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser3idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user4 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3c2bf67-7a5d-4eff-bd24-075da0e2f57e",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA8\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "940aa38a-0cee-44c5-b35c-ba3362b74408",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser4idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 4 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5bab0df-3246-4697-9f7b-7bd17ca46fee",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "094e3ba4-263d-4ae2-bad1-ff304dddd225",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser4idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user5 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f314113-6949-41db-9918-555a46b1f1a1",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA8\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1ebb7ed1-0f9a-4dda-8f8e-e1831c1865ac",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser5idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 5 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5066730-24f1-46ee-b9c6-c54435e3c2bb",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a52dc6d0-4b60-4248-add2-79d906e22fd0",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser5idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user6 - should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47719a24-7a73-4c7a-99dc-785c0a37b5c8",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.eql(\"You cannot get this application\");\r",
											"    pm.expect(jsonData.errorType).to.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.eql(\"\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e4a0e4db-0df5-4124-a289-4e66a0e05785",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser6idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 6 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "22d975e0-780d-45a0-961a-9fa046d3cfd5",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in error are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorized\");\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f9cafc07-8bde-4f1f-8d42-2e0b9553d0bc",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser6idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user7 - should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d2985fba-b2c9-4629-8d10-587b8571812f",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.eql(\"You cannot get this application\");\r",
											"    pm.expect(jsonData.errorType).to.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.eql(\"\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bcff34f2-1a53-4abf-b638-02d2e5123b3f",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser7idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 7 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "22642998-7717-4f08-a372-29fc5f7ea58d",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in error are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorized\");\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "295cdc93-69ff-411b-b50a-561df32e0da3",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser7idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "App in QA:D9",
					"item": [
						{
							"name": "Create New Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1c5d5d1e-3a52-4165-81c0-3d2d8e5c8a25",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicationId\", jsonData.data.applicationId);\r",
											"postman.setEnvironmentVariable(\"RA_AssessmentId\",jsonData.data.assessmentId);\r",
											"\r",
											"pm.test(\"Create New Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - inner application assessment ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.assessmentId)).to.eql(true);\r",
											"});\r",
											"\r",
											"//assuming we have passed in all the various different values.\r",
											"pm.test(\"Create New Application - for applicationAttributeIds length is 4\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
											"    pm.expect(sizeOfArrayOfApplicationAttributeIDs).to.eql(4);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - for applicationAttributeIds are all UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
											"    var i =0;\r",
											"    for(i = 0;i < sizeOfArrayOfApplicationAttributeIDs;i++){\r",
											"        pm.expect(isGuid(jsonData.data.applicationAttributeIds[i])).to.eql(true);\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - id and applicationId are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.data.applicationId);\r",
											"});\r",
											"\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"/*\r",
											"pm.test(\"Create New Application - data application dates are all valid dates\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(moment(jsonData.data.application.dateRangeStart, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.dateRangeEnd, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - inner application assessment dates are all valid dates\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].startDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].endDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    pm.expect(moment(jsonData.data.application.assessments[0].updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
											"    \r",
											"    var date1 = new Date\r",
											"\r",
											"    let yesterday = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toISOString;\r",
											"    console.log(yesterday);\r",
											"    let yesterday1 = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toDateString;\r",
											"    console.log(yesterday1);\r",
											"    //console.log(\"Here is the date\" + getDate());\r",
											"});\r",
											"\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ebe045f4-bcd2-47fd-96fa-a0b620716888",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Sample App Domain Q9\",\n  \"domainId\": \"{{domainidQA9}}\",\n  \"description\": \"{{descriptionValue}}\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4\",\n    \"QUANTUM-7ab1d8221db4abc\",\n    \"QUANTUM-7ab1d8221db4def\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}\",\n  \"externalReference2\": \"{{externalReference2Value}}\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"SoleNonApplicantSpouse\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":1,\n        \"homeUtilitiesWhiteGoodsRepairs\":2,\n         \"publicSchoolingHigherEducation\":3,\n         \"personalHealthcareAndPetcare\":4,\n         \"clothingFootwearDependents\":5,\n         \"childcare\":6,\n         \"communicationConnectivity\":7,\n         \"insuranceHouseContents\":8,\n         \"homewaresApplicancesFurnishing\":9,\n         \"clothingFootwearAdult\":10,\n         \"lifestyleRecreationAlcoholSport\":11,\n         \"subscriptionMembershipExpertFees\":12,\n         \"vehicles\":13,\n         \"transport\":14,\n         \"insuranceMotorVehicle\":15,\n         \"insuranceHealthPersonalOther\":16,\n         \"childSpousalMaintenance\":17,\n         \"privateSchoolingTuition\":18,\n         \"gamblingTobacco\":19,\n         \"primaryHomeLandTaxBodyCorp\":20,\n         \"investmentSecondPropertyExpenses\":21\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":101,\n        \"homeUtilitiesWhiteGoodsRepairs\":102,\n         \"publicSchoolingHigherEducation\":103,\n         \"personalHealthcareAndPetcare\":104,\n         \"clothingFootwearDependents\":105,\n         \"childcare\":106,\n         \"communicationConnectivity\":107,\n         \"insuranceHouseContents\":108,\n         \"homewaresApplicancesFurnishing\":109,\n         \"clothingFootwearAdult\":110,\n         \"lifestyleRecreationAlcoholSport\":111,\n         \"subscriptionMembershipExpertFees\":112,\n         \"vehicles\":113,\n         \"transport\":114,\n         \"insuranceMotorVehicle\":115,\n         \"insuranceHealthPersonalOther\":116,\n         \"childSpousalMaintenance\":117,\n         \"privateSchoolingTuition\":118,\n         \"gamblingTobacco\":119,\n         \"primaryHomeLandTaxBodyCorp\":120,\n         \"investmentSecondPropertyExpenses\":121\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Applicant - Alphie Alphabet - Create and Link new Relie User with link to Existing User Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "61bd9e34-6dfb-4077-84fa-035f28cb02e2",
										"exec": [
											"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
											"var emailAddressforAlphie = \"alphie.alphabetq9.33\" + currentID + \"@mailinator.com\";\r",
											"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"\r",
											"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c7445f47-0ff0-4123-8d0c-cb3fb2042068",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicantId);\r",
											"\r",
											"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
											"    var numberofRelieUserIds = relieUserIdsArray.length\r",
											"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
											"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
											"});\r",
											"\r",
											"/*\r",
											"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
											"});\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Alphabet\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1246"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:22:18 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXlg4Gj8SwMFR7g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Create Applicant - Bertie Bassett - Same email address with link to Existing User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9e22d640-3092-4313-a995-4a6a2bf764fe",
										"exec": [
											"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
											"var emailAddressforAlphie = \"alphie.alphabetq9.33\" + currentID + \"@mailinator.com\";\r",
											"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
											"\r",
											"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7e953361-7149-4615-b95d-ab85bfc61863",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"RA_ApplicantId2\", jsonData.data.applicantId);\r",
											"\r",
											"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
											"    var numberofRelieUserIds = relieUserIdsArray.length\r",
											"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
											"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
											"});\r",
											"\r",
											"/*\r",
											"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
											"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
											"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
											"});\r",
											"*/\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Mrs Bertie Basset\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Bassett\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Bertie\",\n      \"lastName\": \"Bassett\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\",\n      \"linkToExistingRelieUserByEmail\": true\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1246"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:22:18 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXlg4Gj8SwMFR7g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Send Applicant Invite - Alphie Alphabet",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "68ac5cb0-34c4-4ec1-b52b-5b8f0d095660",
										"exec": [
											"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - email recipients is correct and there is only 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
											"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforAlphie);\r",
											"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
											"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
											"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants",
												"{{RA_ApplicantId1}}",
												"invite"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "218"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:35:04 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXnYTHioywMFWPQ="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Send Applicant Invite - Bertie Bassett",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a19f9d16-d1c2-46c1-bbfb-fce8413aa396",
										"exec": [
											"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - email recipients is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedEmailAddressforBertie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"    console.log(\"addressfor bertie +++ \" + expectedEmailAddressforBertie);\r",
											"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforBertie);\r",
											"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
											"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
											"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
											"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite  - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId2}}",
										"invite"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applicants",
												"{{RA_ApplicantId1}}",
												"invite"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "218"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 05:35:04 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXnYTHioywMFWPQ="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C2"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user1 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aafb946c-bdcd-4a89-9f2c-5d47e3b6e8af",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA9\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"ample App Domain\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
											"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "654bd398-5fee-4189-9f80-73cafd53dd65",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser1idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 1 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1237adb5-a5b9-4ee3-9219-9d474a525dd1",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0bbb37f1-4c71-4ab4-b3af-8ce1479cd4b4",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser1idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{domainidQA9}}\",\n  \"description\": \"{{descriptionValue}}\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user2 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3fac42e1-569c-40b0-b551-637e62b6508f",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA9\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "021918b1-2f20-412b-b028-03962a25b400",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser2idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 2 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d59a63f8-a744-485a-a481-4017c20484a9",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.be.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.be.eql(\"\");\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "69ff67f9-0ba1-4970-89ac-b1500c2d1fb0",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser2idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated 2\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user3 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eff2027f-452f-4626-a465-4a8432deed9a",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA9\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
											"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fc90d6ed-f9a5-4f4f-b37e-d72f6f3f1305",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser3idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 3 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "375d266e-8a0c-4c2d-866a-15f2a3f54f11",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ce833a72-6808-4f3a-a109-859d81c4aca9",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser3idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated 3\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user4 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ad8abba1-baba-42cc-9e89-bd07649ac814",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.eql(\"You cannot get this application\");\r",
											"    pm.expect(jsonData.errorType).to.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.eql(\"\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7f83bd3f-df64-4d38-9a90-d46a07450415",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser4idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 4 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a0c78808-d32c-429e-b3d7-faa8f84e1016",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorized\");\r",
											"    pm.expect(jsonData.errorDetail).to.be.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.be.eql(\"\");\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6183883a-2ebf-49b6-8301-bc3ce70c6f46",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser4idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated 4\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user5 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f24b20b0-0882-4fea-94ce-0a7abdde9959",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
											"\r",
											"pm.test(\"Get Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - domain ids are equal\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Two applicants at this stage\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - contents are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
											"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
											"    var expectedDomainId = postman.getEnvironmentVariable(\"domainidQA9\");\r",
											"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\")+  \" + updated\";\r",
											"\r",
											"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
											"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
											"    \r",
											"    pm.expect(jsonData.title.indexOf(\"FAL Test - BS and HW Investment Property\")).to.be.above(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[0].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
											"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - relieUser data has the correct data for applicant2\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedRAApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
											"    var expectedEmailAddressForBoth = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
											"\r",
											"    pm.expect(jsonData.applicants[1].id).to.eql(expectedRAApplicantId);\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(expectedEmailAddressForBoth);\r",
											"    /*\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
											"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bassett\");\r",
											"    */\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
											"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
											"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
											"});\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"/**\r",
											" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
											" *\r",
											" * @param {array} firstArray\r",
											" * @param {array} secondArray\r",
											" *\r",
											" * @returns {boolean}\r",
											" */\r",
											"function arraysSameElements(firstArray, secondArray) {\r",
											"  if (firstArray.length !== secondArray.length) {\r",
											"    return false;\r",
											"  }\r",
											"  return secondArray.every(function (value) {\r",
											"    return (firstArray.indexOf(value) >= 0);\r",
											"  });\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1546c8b3-a76b-45a3-8d1f-94ea855f0908",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser5idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 5 -  should work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0efa4f0-0dfe-4bab-9d4a-21631fef5515",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Update Application - Status code is 200\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - number of applicationAttributeIds is > 7 and all are GUIDs, and the number is diviisble by 4 (i.e. blocks of updates have worked)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
											"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
											"    var i =0;\r",
											"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
											"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
											"    }\r",
											"    var remainderofdivby4 = numberofapplicationAttributeIds%4;\r",
											"    pm.expect(remainderofdivby4).to.be.eql(0);\r",
											"});\r",
											"\r",
											"let moment = require ('moment');\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
											"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"function isGuid(stringToTest) {\r",
											"    if (stringToTest[0] === \"{\") {\r",
											"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
											"    }\r",
											"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
											"    return regexGuid.test(stringToTest);\r",
											"}\r",
											"\r",
											"Date.prototype.isValid = function () {               \r",
											"            // If the date object is invalid it \r",
											"            // will return 'NaN' on getTime()  \r",
											"            // and NaN is never equal to itself. \r",
											"            return this.getTime() === this.getTime(); \r",
											"};\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e20f2bbc-1a56-4a4a-856e-39d4490907b7",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser5idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 5\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user6 - should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a4c8318-d393-431d-8e8e-6c08cc309b27",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.eql(\"You cannot get this application\");\r",
											"    pm.expect(jsonData.errorType).to.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.eql(\"\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3f8d6fab-08d4-4b22-aa02-35ee3c43d6e7",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser6idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 6 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1230814-9a3b-4b4b-92e3-9c5cf782d7fe",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in error are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorized\");\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b2e14a7a-79a9-4646-91e4-3b47bf1f7690",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser6idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 6\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Application Details as user7 - should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17d211e6-0b96-449a-92e3-5b5b85d9295d",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Get Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Get Application - values in eror are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.eql(\"You cannot get this application\");\r",
											"    pm.expect(jsonData.errorType).to.eql(\"Relie.NotAuthorised\");\r",
											"    pm.expect(jsonData.errorDetail).to.eql(\"Denied because the requesters role does not have sufficient permissions\");\r",
											"    pm.expect(jsonData.errorExtendedInfo).to.eql(\"\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "016e48a6-b303-414e-924f-e29f35a82a55",
										"exec": [
											"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser7idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Update New Application as user 7 -  should not work",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d2682cd-70ee-46b1-a9c8-b53a0cb39e86",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code is 403\", function () {\r",
											"    //var foundjsonData = pm.response.json();\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Status code name has string set to Forbidden\", function () {\r",
											"    pm.response.to.have.status(\"Forbidden\");\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - Response time is less than 10000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
											"});\r",
											"\r",
											"pm.test(\"Blocked Update Application - values in error are correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errorMessage).to.be.eql(\"You cannot create or update this application\");\r",
											"    pm.expect(jsonData.errorType).to.be.eql(\"Relie.NotAuthorized\");\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "656fb462-670d-4f08-ab4c-a81378783246",
										"exec": [
											"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
											"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
											"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
											"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
											"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{jwtrobertallanuser7idtoken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"{{titleValue}} + updated + 7\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"response": [
								{
									"name": "https://{{Host}}/api/applications (Create New)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{RI_AuthIDToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
										},
										"url": {
											"raw": "https://{{RA_Host}}/api/applications",
											"protocol": "https",
											"host": [
												"{{RA_Host}}"
											],
											"path": [
												"api",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "1410"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "CloudFront"
										},
										{
											"key": "Date",
											"value": "Tue, 28 Jul 2020 04:01:58 GMT"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
										},
										{
											"key": "X-Relie-Session",
											"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
										},
										{
											"key": "x-amz-apigw-id",
											"value": "QXZwaHyPywMFv3g="
										},
										{
											"key": "X-Relie-Access-Control-Allow-Origin",
											"value": "https://reliecheck.qa.opica.cloud"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Via",
											"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "origin"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubdomains; preload"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Security-Policy",
											"value": "frame-ancestors 'none'"
										},
										{
											"key": "x-amzn-RequestId",
											"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
										},
										{
											"key": "X-Amzn-Trace-Id",
											"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "SYD1-C1"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MEL50"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "API Login Valid Creds Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6aec931-4bd9-427e-91b5-6986ddbebbc5",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RI_AuthIDToken\", jsonData.access_token);\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - includes a 3600 expires token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - includes a token_type equal to Bearer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.eql('Bearer');\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - is at least 100 characters\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token.length).to.be.above(100);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=UTF-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{RI_IC_ClientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{RI_IC_ClientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "https://{{RI_Host}}/connect/token",
							"protocol": "https",
							"host": [
								"{{RI_Host}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "RI_IntegrationClient_ClientCredentials_QA_TFAL",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{RI_IC_ClientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{RI_IC_ClientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "https://{{RI_Host}}/connect/token",
									"protocol": "https",
									"host": [
										"{{RI_Host}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 00:35:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkQwMUYyNzU3QkU3MDI2QkRBNjM1MkQ5QTBBNDUwNDU4RDMyNjAyN0IiLCJ0eXAiOiJKV1QiLCJ4NXQiOiIwQjhuVjc1d0pyMm1OUzJhQ2tVRVdOTW1BbnMifQ.eyJuYmYiOjE1OTU4OTY1MDUsImV4cCI6MTU5NTkwMDEwNSwiaXNzIjoiaHR0cHM6Ly9pZC5yZWxpZWNoZWNrLmNvbS5hdSIsImF1ZCI6WyJodHRwczovL2lkLnJlbGllY2hlY2suY29tLmF1L3Jlc291cmNlcyIsInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdLCJjbGllbnRfaWQiOiJyYV9pbnRfcWFfdGZhbCIsInNjb3BlIjpbInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdfQ.dcFJP26noZa3BPafA17hK9O0_19ksKmw_lLxZa2kPoHvti4rltRKaDp7XnQvl4nhG3ulMd5a3yemaXxxq6RS5i5pOx6vc5_oJR8mukTox-5HCe1X8icRqMH6Jp8mToZpMkquQ2uxq9h5MV9w7gqZsEGJoQ3uW002GS94a7W9n7xzk88ZZLog2uuLfNRe31NoNjPnEr-4bx1URmPJvW7KlItbO3AdHiRiAlkKpX7ElOcGWlzebFrijMG3-X-5pGvTn3Scye1xZ0UKmmRdXFNfMxOnK-PmPPBdJfnvwrqJayZ2F5JmbhF-U7Qodu3QTYiLa4bsVT8EZVI-AfCWTKXqFABU7JMp6bMsLaQerBcDVxFEtDw9IFwYKr50ELJDNjR7_Cj4f_4clBYrsHpElVBsgSAvXkjhamED8e_N3HazhciIhLdPJvX7UNkrVLim0rN0OP3ZCUvIAi4QAQ8asTI5_gFJkBcyS1QVyw2pL-nkx5PrEmzoHglvgJ988yxMpLm4pvKVGgU9OY5uIzWvqjl0Sxnp8oP12R3sqF1jehsciMws-c-K4F9Pcme57iL2UoGZoLV61BAr9uS2ZZCX7E3-egYkzIsmVmVYczOGY9opzfT5oJniWntHA5iOiF-V7LtFrYtBNZQ3FW6jshtFTEm4UOGSTlSihOA6rBZZRBQLJV4\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\"\n}"
						}
					]
				}
			],
			"description": "This is a set of test to show that we can have a user in the system withthe same email address only if we have the linktoexsinguser paramters set. Fruther to shw that an application cannot have two people with the same email address.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Relie Interfaces",
			"item": [
				{
					"name": "API Login Valid Creds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "212d5f28-94f1-4183-95aa-851bad877474",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RI_AuthIDToken\", jsonData.access_token);\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - includes a 3600 expires token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - includes a token_type equal to Bearer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.eql('Bearer');\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - is at least 100 characters\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token.length).to.be.above(100);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=UTF-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{RI_IC_ClientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{RI_IC_ClientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "https://{{RI_Host}}/connect/token",
							"protocol": "https",
							"host": [
								"{{RI_Host}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "RI_IntegrationClient_ClientCredentials_QA_TFAL",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{RI_IC_ClientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{RI_IC_ClientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "https://{{RI_Host}}/connect/token",
									"protocol": "https",
									"host": [
										"{{RI_Host}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 00:35:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkQwMUYyNzU3QkU3MDI2QkRBNjM1MkQ5QTBBNDUwNDU4RDMyNjAyN0IiLCJ0eXAiOiJKV1QiLCJ4NXQiOiIwQjhuVjc1d0pyMm1OUzJhQ2tVRVdOTW1BbnMifQ.eyJuYmYiOjE1OTU4OTY1MDUsImV4cCI6MTU5NTkwMDEwNSwiaXNzIjoiaHR0cHM6Ly9pZC5yZWxpZWNoZWNrLmNvbS5hdSIsImF1ZCI6WyJodHRwczovL2lkLnJlbGllY2hlY2suY29tLmF1L3Jlc291cmNlcyIsInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdLCJjbGllbnRfaWQiOiJyYV9pbnRfcWFfdGZhbCIsInNjb3BlIjpbInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdfQ.dcFJP26noZa3BPafA17hK9O0_19ksKmw_lLxZa2kPoHvti4rltRKaDp7XnQvl4nhG3ulMd5a3yemaXxxq6RS5i5pOx6vc5_oJR8mukTox-5HCe1X8icRqMH6Jp8mToZpMkquQ2uxq9h5MV9w7gqZsEGJoQ3uW002GS94a7W9n7xzk88ZZLog2uuLfNRe31NoNjPnEr-4bx1URmPJvW7KlItbO3AdHiRiAlkKpX7ElOcGWlzebFrijMG3-X-5pGvTn3Scye1xZ0UKmmRdXFNfMxOnK-PmPPBdJfnvwrqJayZ2F5JmbhF-U7Qodu3QTYiLa4bsVT8EZVI-AfCWTKXqFABU7JMp6bMsLaQerBcDVxFEtDw9IFwYKr50ELJDNjR7_Cj4f_4clBYrsHpElVBsgSAvXkjhamED8e_N3HazhciIhLdPJvX7UNkrVLim0rN0OP3ZCUvIAi4QAQ8asTI5_gFJkBcyS1QVyw2pL-nkx5PrEmzoHglvgJ988yxMpLm4pvKVGgU9OY5uIzWvqjl0Sxnp8oP12R3sqF1jehsciMws-c-K4F9Pcme57iL2UoGZoLV61BAr9uS2ZZCX7E3-egYkzIsmVmVYczOGY9opzfT5oJniWntHA5iOiF-V7LtFrYtBNZQ3FW6jshtFTEm4UOGSTlSihOA6rBZZRBQLJV4\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\"\n}"
						}
					]
				},
				{
					"name": "API Login Invalid ClientId Creds",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e361ca43-e34c-420b-b15d-220ac9e54b5f",
								"exec": [
									"var validClientId = postman.getEnvironmentVariable(\"RI_IC_ClientId\");\r",
									"var inValidClientId = validClientId + \"-\";"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c5ccdb17-3959-4fc6-8b28-a308a565c578",
								"exec": [
									"pm.test(\"Get Authentication Token - Invalid ClientId - Status code is 400\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Invalid ClientId - Status code name has string set to Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Authentication Token - Invalid ClientId - Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Invalid ClientId - expect error with invalid_client\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.be.eql(\"invalid_client\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Invalid ClientId - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Invalid ClientId - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=UTF-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token  - Invalid ClientId - Status code name has string set to Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "inValidClientId",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{RI_IC_ClientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "https://{{RI_Host}}/connect/token",
							"protocol": "https",
							"host": [
								"{{RI_Host}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "RI_IntegrationClient_ClientCredentials_QA_TFAL",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{RI_IC_ClientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{RI_IC_ClientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "https://{{RI_Host}}/connect/token",
									"protocol": "https",
									"host": [
										"{{RI_Host}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 00:35:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkQwMUYyNzU3QkU3MDI2QkRBNjM1MkQ5QTBBNDUwNDU4RDMyNjAyN0IiLCJ0eXAiOiJKV1QiLCJ4NXQiOiIwQjhuVjc1d0pyMm1OUzJhQ2tVRVdOTW1BbnMifQ.eyJuYmYiOjE1OTU4OTY1MDUsImV4cCI6MTU5NTkwMDEwNSwiaXNzIjoiaHR0cHM6Ly9pZC5yZWxpZWNoZWNrLmNvbS5hdSIsImF1ZCI6WyJodHRwczovL2lkLnJlbGllY2hlY2suY29tLmF1L3Jlc291cmNlcyIsInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdLCJjbGllbnRfaWQiOiJyYV9pbnRfcWFfdGZhbCIsInNjb3BlIjpbInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdfQ.dcFJP26noZa3BPafA17hK9O0_19ksKmw_lLxZa2kPoHvti4rltRKaDp7XnQvl4nhG3ulMd5a3yemaXxxq6RS5i5pOx6vc5_oJR8mukTox-5HCe1X8icRqMH6Jp8mToZpMkquQ2uxq9h5MV9w7gqZsEGJoQ3uW002GS94a7W9n7xzk88ZZLog2uuLfNRe31NoNjPnEr-4bx1URmPJvW7KlItbO3AdHiRiAlkKpX7ElOcGWlzebFrijMG3-X-5pGvTn3Scye1xZ0UKmmRdXFNfMxOnK-PmPPBdJfnvwrqJayZ2F5JmbhF-U7Qodu3QTYiLa4bsVT8EZVI-AfCWTKXqFABU7JMp6bMsLaQerBcDVxFEtDw9IFwYKr50ELJDNjR7_Cj4f_4clBYrsHpElVBsgSAvXkjhamED8e_N3HazhciIhLdPJvX7UNkrVLim0rN0OP3ZCUvIAi4QAQ8asTI5_gFJkBcyS1QVyw2pL-nkx5PrEmzoHglvgJ988yxMpLm4pvKVGgU9OY5uIzWvqjl0Sxnp8oP12R3sqF1jehsciMws-c-K4F9Pcme57iL2UoGZoLV61BAr9uS2ZZCX7E3-egYkzIsmVmVYczOGY9opzfT5oJniWntHA5iOiF-V7LtFrYtBNZQ3FW6jshtFTEm4UOGSTlSihOA6rBZZRBQLJV4\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\"\n}"
						}
					]
				},
				{
					"name": "API Login Invalid ClientSecret Creds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0151b77a-20db-4cf2-944e-e5d1ba9eea65",
								"exec": [
									"pm.test(\"Get Authentication Token - Invalid ClientSecret - Status code is 400\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - - Invalid ClientSecret - Status code name has string set to Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Invalid ClientSecret - Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Invalid ClientSecret - expect error with invalid_client\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.be.eql(\"invalid_client\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Invalid ClientSecret - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Invalid ClientSecret - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=UTF-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Authentication Token - Invalid ClientSecret - Status code name has string set to Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5a67b69f-bb9f-48ed-9bfc-6bf6c43e8599",
								"exec": [
									"var validClientSecret = postman.getEnvironmentVariable(\"RI_IC_ClientSecret\");\r",
									"var inValidClientSecret = validClientSecret + \"-\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{RI_IC_ClientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "inValidClientSecret",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "https://{{RI_Host}}/connect/token",
							"protocol": "https",
							"host": [
								"{{RI_Host}}"
							],
							"path": [
								"connect",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "RI_IntegrationClient_ClientCredentials_QA_TFAL",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{RI_IC_ClientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{RI_IC_ClientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "https://{{RI_Host}}/connect/token",
									"protocol": "https",
									"host": [
										"{{RI_Host}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 00:35:05 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkQwMUYyNzU3QkU3MDI2QkRBNjM1MkQ5QTBBNDUwNDU4RDMyNjAyN0IiLCJ0eXAiOiJKV1QiLCJ4NXQiOiIwQjhuVjc1d0pyMm1OUzJhQ2tVRVdOTW1BbnMifQ.eyJuYmYiOjE1OTU4OTY1MDUsImV4cCI6MTU5NTkwMDEwNSwiaXNzIjoiaHR0cHM6Ly9pZC5yZWxpZWNoZWNrLmNvbS5hdSIsImF1ZCI6WyJodHRwczovL2lkLnJlbGllY2hlY2suY29tLmF1L3Jlc291cmNlcyIsInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdLCJjbGllbnRfaWQiOiJyYV9pbnRfcWFfdGZhbCIsInNjb3BlIjpbInJhX2FwaV9pbnRlZ3JhdGlvbl9xYSJdfQ.dcFJP26noZa3BPafA17hK9O0_19ksKmw_lLxZa2kPoHvti4rltRKaDp7XnQvl4nhG3ulMd5a3yemaXxxq6RS5i5pOx6vc5_oJR8mukTox-5HCe1X8icRqMH6Jp8mToZpMkquQ2uxq9h5MV9w7gqZsEGJoQ3uW002GS94a7W9n7xzk88ZZLog2uuLfNRe31NoNjPnEr-4bx1URmPJvW7KlItbO3AdHiRiAlkKpX7ElOcGWlzebFrijMG3-X-5pGvTn3Scye1xZ0UKmmRdXFNfMxOnK-PmPPBdJfnvwrqJayZ2F5JmbhF-U7Qodu3QTYiLa4bsVT8EZVI-AfCWTKXqFABU7JMp6bMsLaQerBcDVxFEtDw9IFwYKr50ELJDNjR7_Cj4f_4clBYrsHpElVBsgSAvXkjhamED8e_N3HazhciIhLdPJvX7UNkrVLim0rN0OP3ZCUvIAi4QAQ8asTI5_gFJkBcyS1QVyw2pL-nkx5PrEmzoHglvgJ988yxMpLm4pvKVGgU9OY5uIzWvqjl0Sxnp8oP12R3sqF1jehsciMws-c-K4F9Pcme57iL2UoGZoLV61BAr9uS2ZZCX7E3-egYkzIsmVmVYczOGY9opzfT5oJniWntHA5iOiF-V7LtFrYtBNZQ3FW6jshtFTEm4UOGSTlSihOA6rBZZRBQLJV4\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\"\n}"
						}
					]
				},
				{
					"name": "Create New Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "80aed17a-3d00-4e17-bbef-62ccb70e42ce",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicationId\", jsonData.data.applicationId);\r",
									"postman.setEnvironmentVariable(\"RA_AssessmentId\",jsonData.data.assessmentId);\r",
									"\r",
									"pm.test(\"Create New Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - inner application assessment ids are UUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.data.assessmentId)).to.eql(true);\r",
									"});\r",
									"\r",
									"//assuming we have passed in all the various different values.\r",
									"pm.test(\"Create New Application - for applicationAttributeIds length is 4\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
									"    pm.expect(sizeOfArrayOfApplicationAttributeIDs).to.eql(4);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - for applicationAttributeIds are all UUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var sizeOfArrayOfApplicationAttributeIDs = jsonData.data.applicationAttributeIds.length;\r",
									"    var i =0;\r",
									"    for(i = 0;i < sizeOfArrayOfApplicationAttributeIDs;i++){\r",
									"        pm.expect(isGuid(jsonData.data.applicationAttributeIds[i])).to.eql(true);\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - id and applicationId are equal\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.data.applicationId);\r",
									"});\r",
									"\r",
									"\r",
									"let moment = require ('moment');\r",
									"\r",
									"/*\r",
									"pm.test(\"Create New Application - data application dates are all valid dates\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(moment(jsonData.data.application.dateRangeStart, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.dateRangeEnd, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - inner application assessment dates are all valid dates\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(moment(jsonData.data.application.assessments[0].startDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.assessments[0].endDate, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.assessments[0].createdAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    pm.expect(moment(jsonData.data.application.assessments[0].updatedAt, 'YYYY-MM-DDTHH:mm:ss.sssZ', true).isValid()).is.true;\r",
									"    \r",
									"    var date1 = new Date\r",
									"\r",
									"    let yesterday = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toISOString;\r",
									"    console.log(yesterday);\r",
									"    let yesterday1 = ( d => new Date(d.setDate(d.getDate()-1)) )(new Date).toDateString;\r",
									"    console.log(yesterday1);\r",
									"    //console.log(\"Here is the date\" + getDate());\r",
									"});\r",
									"\r",
									"*/\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"Date.prototype.isValid = function () {               \r",
									"            // If the date object is invalid it \r",
									"            // will return 'NaN' on getTime()  \r",
									"            // and NaN is never equal to itself. \r",
									"            return this.getTime() === this.getTime(); \r",
									"};\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5402cab9-036f-4b0a-b8cc-f66380fa83d3",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\" + postman.getEnvironmentVariable(\"sequenceIdentifier\"));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{titleValue}}\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}}\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4\",\n    \"QUANTUM-7ab1d8221db4abc\",\n    \"QUANTUM-7ab1d8221db4def\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}\",\n  \"externalReference2\": \"{{externalReference2Value}}\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"SoleNonApplicantSpouse\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":1,\n        \"homeUtilitiesWhiteGoodsRepairs\":2,\n         \"publicSchoolingHigherEducation\":3,\n         \"personalHealthcareAndPetcare\":4,\n         \"clothingFootwearDependents\":5,\n         \"childcare\":6,\n         \"communicationConnectivity\":7,\n         \"insuranceHouseContents\":8,\n         \"homewaresApplicancesFurnishing\":9,\n         \"clothingFootwearAdult\":10,\n         \"lifestyleRecreationAlcoholSport\":11,\n         \"subscriptionMembershipExpertFees\":12,\n         \"vehicles\":13,\n         \"transport\":14,\n         \"insuranceMotorVehicle\":15,\n         \"insuranceHealthPersonalOther\":16,\n         \"childSpousalMaintenance\":17,\n         \"privateSchoolingTuition\":18,\n         \"gamblingTobacco\":19,\n         \"primaryHomeLandTaxBodyCorp\":20,\n         \"investmentSecondPropertyExpenses\":21\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":101,\n        \"homeUtilitiesWhiteGoodsRepairs\":102,\n         \"publicSchoolingHigherEducation\":103,\n         \"personalHealthcareAndPetcare\":104,\n         \"clothingFootwearDependents\":105,\n         \"childcare\":106,\n         \"communicationConnectivity\":107,\n         \"insuranceHouseContents\":108,\n         \"homewaresApplicancesFurnishing\":109,\n         \"clothingFootwearAdult\":110,\n         \"lifestyleRecreationAlcoholSport\":111,\n         \"subscriptionMembershipExpertFees\":112,\n         \"vehicles\":113,\n         \"transport\":114,\n         \"insuranceMotorVehicle\":115,\n         \"insuranceHealthPersonalOther\":116,\n         \"childSpousalMaintenance\":117,\n         \"privateSchoolingTuition\":118,\n         \"gamblingTobacco\":119,\n         \"primaryHomeLandTaxBodyCorp\":120,\n         \"investmentSecondPropertyExpenses\":121\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Application Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5147a74-4f9b-47f7-a092-288fb647d7e9",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
									"\r",
									"pm.test(\"Get Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - domain ids are equal\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - No applicants at this stage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants.length).to.eql(0);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Application - id is the same as the RA_ApplicationId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
									"    var expectedDomainId = postman.getEnvironmentVariable(\"RA_DomainId\");\r",
									"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
									"\r",
									"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_CREATED\");\r",
									"    pm.expect(jsonData.title).to.eql(expectedTitleValue);\r",
									"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.domain.id).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue);\r",
									"    pm.expect(jsonData.applicants.length).to.eql(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4\",\r",
									"        \"QUANTUM-7ab1d8221db4abc\",\"QUANTUM-7ab1d8221db4def\",\"Example systems reference 1\",\"Example systems reference 2\"];\r",
									"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"/**\r",
									" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
									" *\r",
									" * @param {array} firstArray\r",
									" * @param {array} secondArray\r",
									" *\r",
									" * @returns {boolean}\r",
									" */\r",
									"function arraysSameElements(firstArray, secondArray) {\r",
									"  if (firstArray.length !== secondArray.length) {\r",
									"    return false;\r",
									"  }\r",
									"  return secondArray.every(function (value) {\r",
									"    return (firstArray.indexOf(value) >= 0);\r",
									"  });\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "282695b1-0121-4780-9b12-2a409f8d9327",
								"exec": [
									"//postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"//postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{RA_ApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update New Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f29dede-e41a-4d29-b60d-b3d923d71ff8",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Update Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - inner application ids are UUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicationId)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - number of applicationAttributeIds is 8 and all are GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
									"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
									"    pm.expect(numberofapplicationAttributeIds).to.eql(8);\r",
									"    var i =0;\r",
									"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
									"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
									"    }\r",
									"});\r",
									"\r",
									"let moment = require ('moment');\r",
									"\r",
									"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"Date.prototype.isValid = function () {               \r",
									"            // If the date object is invalid it \r",
									"            // will return 'NaN' on getTime()  \r",
									"            // and NaN is never equal to itself. \r",
									"            return this.getTime() === this.getTime(); \r",
									"};\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "acbf72d6-be17-4dec-997a-08b27d969444",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{titleValue}} + updated\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upd\",\n    \"QUANTUM-7ab1d8221db4abc-upd\",\n    \"QUANTUM-7ab1d8221db4def-upd\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"particulars\",\n      \"value\": {\n        \"purpose\": \"New loan for X\",\n        \"financeType\": \"Vehicle finance\",\n        \"financeAmount\": 20000\n      }\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n        \"applicationType\": \"JointApplicants\",\n        \"loanRepaymentAmount\": 20000,\n        \"brand\": \"Toyota\",\n        \"bmName\": \"FirstnameBM LastnameBM\",\n        \"bmEmailAddress\": \"email@example.com\",\n        \"bmContact\": \"bmContactNameisHisMum\",\n        \"additionalEmailAddresses\": [\n          \"additional1updated@example.com\",\n          \"additional2updated@example.com\",\n          \"additional3updated@example.com\"\n        ],        \n        \"additionalContacts\": [\n          \"additionalContact1updated@example.com\",\n          \"additionalContact2updated@example.com\",\n          \"additionalContact3updated@example.com\"\n        ]\n      }\n    },\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{RA_ApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Application Details After Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f762c04-f774-413e-9bd4-3a6c852a25c0",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
									"\r",
									"pm.test(\"Get Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.assessments[0].applicationId);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - domain ids are equal\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.domainId).to.eql(jsonData.domain.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - No applicants at this stage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants.length).to.eql(0);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get New Application - first assessment id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - id is the same as the RA_ApplicationId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\");\r",
									"    var expectedDomainId = postman.getEnvironmentVariable(\"RA_DomainId\");\r",
									"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
									"\r",
									"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_CREATED\");\r",
									"    pm.expect(jsonData.title).to.eql(expectedTitleValue + \" + updated\");\r",
									"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.domain.id).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue + \" + updated\");\r",
									"    pm.expect(jsonData.applicants.length).to.eql(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Application - Right Custom References Found\", function () {\r",
									"        var jsonData = pm.response.json();\r",
									"        var expectedCustomReferences=[\"QUANTUM-7ab1d8221db4-upd\",\r",
									"        \"QUANTUM-7ab1d8221db4abc-upd\",\"QUANTUM-7ab1d8221db4def-upd\",\"Example systems reference 1+updated\",\"Example systems reference 2+updated\"];\r",
									"        pm.expect(arraysSameElements(expectedCustomReferences,jsonData.customReference)).to.eql(true);\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"/**\r",
									" * Returns TRUE if the first specified array has the same elements as the 2nd array -  different order will return true\r",
									" *\r",
									" * @param {array} firstArray\r",
									" * @param {array} secondArray\r",
									" *\r",
									" * @returns {boolean}\r",
									" */\r",
									"function arraysSameElements(firstArray, secondArray) {\r",
									"  if (firstArray.length !== secondArray.length) {\r",
									"    return false;\r",
									"  }\r",
									"  return secondArray.every(function (value) {\r",
									"    return (firstArray.indexOf(value) >= 0);\r",
									"  });\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ad07dc3d-d03f-41c2-95be-32176b5f0baa",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{RA_ApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update New Application benchmarks and thresholds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45ae9d88-2624-4070-a6ca-8f979461829e",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Update Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - id and applicationId are equal\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.data.applicationId);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - number of applicationAttributeIds is 8 and all are GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var applicationAttributeIdsArray = jsonData.data.applicationAttributeIds\r",
									"    var numberofapplicationAttributeIds = applicationAttributeIdsArray.length\r",
									"    pm.expect(numberofapplicationAttributeIds).to.eql(10);\r",
									"    var i =0;\r",
									"    for (i = 0; i< numberofapplicationAttributeIds;i++){\r",
									"        pm.expect(isGuid(applicationAttributeIdsArray[i])).to.eql(true);\r",
									"    }\r",
									"});\r",
									"\r",
									"let moment = require ('moment');\r",
									"\r",
									"pm.test(\"Update Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"Date.prototype.isValid = function () {               \r",
									"            // If the date object is invalid it \r",
									"            // will return 'NaN' on getTime()  \r",
									"            // and NaN is never equal to itself. \r",
									"            return this.getTime() === this.getTime(); \r",
									"};\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d99ef628-70fa-47d7-b61e-d73c1c2d5e66",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"//postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"//postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"//postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{titleValue}} + updated\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}} + updated\",\n  \"customReference\": [\n    \"QUANTUM-7ab1d8221db4-upda\",\n    \"QUANTUM-7ab1d8221db4abc-updb\",\n    \"QUANTUM-7ab1d8221db4def-updc\"\n  ],\n  \"externalReference1\": \"{{externalReference1Value}}+updated\",\n  \"externalReference2\": \"{{externalReference2Value}}+updated\",\n  \"attributes\": [\n    {\n      \"name\": \"tfalDynamicBenchmarks\",\n      \"value\": {\n        \"foodGroceries\":51,\n        \"homeUtilitiesWhiteGoodsRepairs\":52,\n         \"publicSchoolingHigherEducation\":53,\n         \"personalHealthcareAndPetcare\":54,\n         \"clothingFootwearDependents\":55,\n         \"childcare\":56,\n         \"communicationConnectivity\":57,\n         \"insuranceHouseContents\":58,\n         \"homewaresApplicancesFurnishing\":59,\n         \"clothingFootwearAdult\":60,\n         \"lifestyleRecreationAlcoholSport\":61,\n         \"subscriptionMembershipExpertFees\":62,\n         \"vehicles\":63,\n         \"transport\":64,\n         \"insuranceMotorVehicle\":65,\n         \"insuranceHealthPersonalOther\":66,\n         \"childSpousalMaintenance\":67,\n         \"privateSchoolingTuition\":68,\n         \"gamblingTobacco\":69,\n         \"primaryHomeLandTaxBodyCorp\":70,\n         \"investmentSecondPropertyExpenses\":71\n      }\n    },\n    {\n      \"name\": \"tfalDynamicThresholds\",\n      \"value\": {\n        \"foodGroceries\":201,\n        \"homeUtilitiesWhiteGoodsRepairs\":202,\n         \"publicSchoolingHigherEducation\":203,\n         \"personalHealthcareAndPetcare\":204,\n         \"clothingFootwearDependents\":205,\n         \"childcare\":206,\n         \"communicationConnectivity\":207,\n         \"insuranceHouseContents\":208,\n         \"homewaresApplicancesFurnishing\":209,\n         \"clothingFootwearAdult\":210,\n         \"lifestyleRecreationAlcoholSport\":211,\n         \"subscriptionMembershipExpertFees\":212,\n         \"vehicles\":213,\n         \"transport\":214,\n         \"insuranceMotorVehicle\":215,\n         \"insuranceHealthPersonalOther\":216,\n         \"childSpousalMaintenance\":217,\n         \"privateSchoolingTuition\":218,\n         \"gamblingTobacco\":219,\n         \"primaryHomeLandTaxBodyCorp\":220,\n         \"investmentSecondPropertyExpenses\":221\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{RA_ApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Create New Application Invalid Auth Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5a078e2-444a-4a31-ba8a-4caa2cc9abd5",
								"exec": [
									"pm.test(\"Create New Application - Invalid Auth Key - Status code is 401\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Invalid Auth Key  - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Invalid Auth Key - Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Invalid Auth Key - expect error with invalid_client\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.be.eql(\"Unauthorized\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Invalid Auth Key - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Invalid Auth Key - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - Invalid Auth Key - Status code name has string set to Unauthorised\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "269ce06c-c885-4e62-b6fc-ab59f6d037f2",
								"exec": [
									"var validAuthKey = postman.getEnvironmentVariable(\"RI_AuthIDToken\");\r",
									"var invalidAuthKey = validAuthKey + \"-\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "invalidAuthKey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{titleValue}}\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"{{descriptionValue}}\",\n  \"purpose\": \"{{purposeValue}}\",\n  \"externalReference1\": \"{{externalReference1Value}}\",\n  \"externalReference2\": \"{{externalReference2Value}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Create Applicant - Alphie Alphabet - Create and Link new Relie User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3b9dbc3b-741f-4708-9258-02d0f88df44c",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforAlphie = \"alphie.alphabet.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f8b07b0f-9b2d-4371-897e-7df6381edeb7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicantId);\r",
									"\r",
									"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
									"    var numberofRelieUserIds = relieUserIdsArray.length\r",
									"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
									"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
									"});\r",
									"\r",
									"/*\r",
									"pm.test(\"To update Create New Applicant - application id is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    pm.expect(jsonData.data.applicant.applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner applicant ids are UUIDs and right alias\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicant.id)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(jsonData.data.applicant.id);\r",
									"    pm.expect(jsonData.data.applicant.alias).to.eql(\"Alphie Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
									"});\r",
									"*/\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n   \"aliasFirstName\":\"firstNameAlias\",\n   \"aliasPreferredName\":\"Jack\",\n   \"aliasLastName\":\"Smith (nee Qiao)\",\n   \"postcode\": \"2000\",\n   \"ageBracket\": \"18-25\",\n   \"otherPhoneNumber\":\"0412345678\",\n   \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"mobile\":\"0487900123\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26, The Fantastic Gables\",\n      \"address2\": \"Parkside Ave\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"Bunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"WeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"abcde41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ]    \n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1246"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:22:18 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXlg4Gj8SwMFR7g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Create Applicant - Alphie Alphabet - Same email address fails without linkto existing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1762458f-d8d9-40cc-98fc-bde2e9a50f38",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforAlphie = \"alphie.alphabet.33\" + currentID + \"@mailinator.com\";\r",
									"postman.setEnvironmentVariable(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"//pm.environment.set(\"emailAddressforAlphie\",emailAddressforAlphie);\r",
									"\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforAlphie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ecc8f291-4572-484f-9e87-3c8030ad0159",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"//postman.setEnvironmentVariable(\"RA_ApplicantId1\", jsonData.data.applicant.id);\r",
									"\r",
									"pm.test(\"Create Duplicate New Applicant - Status code is 400\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Create Duplicate New Applicant - Status code name has string set to Bad Request\", function () {\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create Duplicate New Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"To Create Duplicate New Applicant - error details provided\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.errorMessage).to.eql(\"The provided email address was invalid (duplicate)\");\r",
									"    pm.expect(jsonData.errorType).to.eql(\"Relie.ExistingRelieUser\");\r",
									"    pm.expect(jsonData.success).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"To Create Duplicate New Applicant - inner id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.id)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"To Create Duplicate New Applicant - even though errored, supplied names and email are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddress = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    pm.expect(jsonData.data.email).to.eql(expectedEmailAddress);\r",
									"    pm.expect(jsonData.data.firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.data.lastName).to.eql(\"Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create Duplicate New Applicant - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create Duplicate New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alias\": \"Alphie Alphabet\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforAlphie}}\",\n      \"firstName\": \"Alphie\",\n      \"lastName\": \"Alphabet\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1246"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:22:18 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXlg4Gj8SwMFR7g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Applicant Details Alphie Alphabet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce37ec95-7549-46e7-b5c8-9865eb6fa486",
								"exec": [
									"pm.test(\"Get Applicant Details Alphie Alphabet - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Alphie Alphabet - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Alphie Alphabet - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Applicant Details Alphie Alphabet - basic contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedApplicationId = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    pm.expect(jsonData.applicationId).to.eql(expectedApplicationId);\r",
									"    pm.expect(jsonData.alias).to.eql(\"Alphie Alphabet\");\r",
									"    pm.expect(jsonData.aliasFirstName).to.eql(\"firstNameAlias\");\r",
									"    pm.expect(jsonData.aliasPreferredName).to.eql(\"Jack\");\r",
									"    pm.expect(jsonData.otherPhoneNumber).to.eql(\"0412345678\");\r",
									"    pm.expect(jsonData.postcode).to.eql(\"2000\");\r",
									"    pm.expect(jsonData.ageBracket).to.eql(\"18-25\");\r",
									"    pm.expect(jsonData.statusCode).to.eql(\"APL_ADDED\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Alphie Alphabet - inner details are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    pm.expect(isGuid(jsonData.relieUsers[0].id)).to.eql(true);\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
									"    \r",
									"    pm.expect(jsonData.relieUsers[0].email).to.eql(expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
									"    pm.expect(jsonData.relieUsers[0].mobile).to.eql(\"0487900123\");\r",
									"    pm.expect(jsonData.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
									"    pm.expect(jsonData.relieUsers[0].address1).to.eql(\"26, The Fantastic Gables\");\r",
									"    pm.expect(jsonData.relieUsers[0].address2).to.eql(\"Parkside Ave\");\r",
									"    pm.expect(jsonData.relieUsers[0].suburbTown).to.eql(null);\r",
									"    pm.expect(jsonData.relieUsers[0].state).to.eql(\"NSW\");\r",
									"    pm.expect(jsonData.relieUsers[0].postcode).to.eql(\"2517\");\r",
									"\r",
									"    pm.expect(jsonData.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(expectedApplicantId);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Alphie Alphabet - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Alphie Alphabet - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId1}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Create Applicant - Bertie Bassett - Create and Link new Relie User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "38ca7a92-7a07-4a0e-9329-e0e1f9311ce1",
								"exec": [
									"var currentID = postman.getEnvironmentVariable(\"sequenceIdentifier\");\r",
									"var emailAddressforBertie = \"bertie.bassett.33\" + currentID + \"@mailinator.com\";\r",
									"pm.environment.set(\"emailAddressforBertie\",emailAddressforBertie);\r",
									"console.log(\"Here is the email address that I created +++ \" + emailAddressforBertie);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "51a205e6-8a85-4278-9480-e747a6aa3132",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"RA_ApplicantId2\", jsonData.id);\r",
									"\r",
									"pm.test(\"Create New Applicat - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - outer id is a UUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"To update Create New Applicant - inner id is a UUID and equals outer id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.data.applicantId)).to.eql(true);\r",
									"    pm.expect(jsonData.data.applicantId).to.eql(jsonData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Applicant - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									"\r",
									"pm.test(\"Update Application - number of relieUserIds is 1 and is a GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var relieUserIdsArray = jsonData.data.relieUserIds;\r",
									"    var numberofRelieUserIds = relieUserIdsArray.length\r",
									"    pm.expect(numberofRelieUserIds).to.eql(1);\r",
									"    pm.expect(isGuid(relieUserIdsArray[0])).to.eql(true);  \r",
									"});\r",
									"\r",
									"/*\r",
									"pm.test(\"To update Create New Applicant - validate it has stored the right values in data.applicant\", function () {    \r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].firstName).to.eql(\"Bertie\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].lastName).to.eql(\"Bassett\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].birthDate).to.eql(\"1980-02-27T13:00:00.000Z\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].address2).to.eql(\"\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].suburb).to.eql(\"Woonona\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].state).to.eql(\"NSW\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].postcode).to.eql(\"2517\");\r",
									"    pm.expect(jsonData.data.applicant.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(\"2517\");\r",
									"});\r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alias\": \"Bertie Bassett\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"{{emailAddressforBertie}}\",\n      \"firstName\": \"Bertie\",\n      \"lastName\": \"Bassett\",\n      \"birthDate\": \"1981-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"some place\",\n      \"suburbTown\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ],\"attributes\": [\n    {\n      \"name\": \"tfalAddressHint\",\n      \"value\": [\n        {\n          \"address\": \"My house number 1, 2111\"\n        },\n        {\n          \"address\": \" My house number 2, 2222\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalEmployerHint\",\n      \"value\": [\n                {\n          \"employerName\": \"BertieBunnings\",\n          \"additionalEmployerNames\":[\"Bunnngs HQ\",\"Bunnings Central\"],\n          \"incomeAmount\": 3000,\n          \"incomeFrequency\": \"Weekly\"\n        },\n        {\n          \"employerName\": \"BertieWeekendWorkerPlace\",\n          \"incomeAmount\": 2000,\n          \"incomeFrequency\": \"Monthly\"\n        }\n      ]\n    },\n    {\n      \"name\": \"tfalParticulars\",\n      \"value\": {\n          \"cifNumber\": \"41645\",\n          \"residentialStatus\":\"Owned\",\n          \"maritalStatus\": \"Married\",\n          \"numberOfDependents\":0\n        }\n    }\n  ] \n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants (Create Applicant - Brett Strong - Create and Link new Relie User)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"Brett Strong\",\n  \"applicationId\": \"{{RA_ApplicationId}}\",\n  \"relieUsers\": [\n    {\n      \"email\": \"bre.strong@test.com\",\n      \"firstName\": \"Brett\",\n      \"lastName\": \"Strong\",\n      \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n      \"address1\": \"26 Mountain Ave\",\n      \"address2\": \"\",\n      \"suburb\": \"Woonona\",\n      \"state\": \"NSW\",\n      \"postcode\": \"2517\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1246"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:22:18 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "SM3QA26DjhwtjOWWCLk5EBnzyjjHDRGyhmRbmezB2YWui72OQSQVWB0Zkd5hu1nn"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXlg4Gj8SwMFR7g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 e8e5556eec12cd8fd3590100b82fb80b.cloudfront.net (CloudFront), 1.1 5ebaca8d6e5215e8aae2e8c7eead166f.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "e68d2c1e-183c-47b9-b2b6-fdfe23af3c30"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb605-0d41a6d280e8cacd3960fe47"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "i_5jvfjzC6i32jVv2THsFAyrT6YLfnG3Sz8lGixUkPD5KkN6YAJtMQ=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n    \"data\": {\n        \"applicant\": {\n            \"id\": \"5db7346a-9124-409d-91af-bc6776718459\",\n            \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"dataSourceAccountId\": null,\n            \"alias\": \"Brett Strong\",\n            \"aliasFirstName\": null,\n            \"aliasLastName\": null,\n            \"aliasPreferredName\": null,\n            \"otherPhoneNumber\": null,\n            \"postcode\": null,\n            \"ageBracket\": null,\n            \"applicantStatus\": null,\n            \"externalRefId\": \"e1aece5e-f686-428a-a71c-a1870e2bae22\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"deletedAt\": null,\n            \"createdAt\": \"2020-07-28T05:22:18.514Z\",\n            \"updatedAt\": \"2020-07-28T05:22:18.517Z\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"relieUsers\": [\n                {\n                    \"id\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\",\n                    \"email\": \"bre.strong@test.com\",\n                    \"isRelieAdmin\": false,\n                    \"firstName\": \"Brett\",\n                    \"lastName\": \"Strong\",\n                    \"mobile\": null,\n                    \"birthDate\": \"1980-02-27T13:00:00.000Z\",\n                    \"address1\": \"26 Mountain Ave\",\n                    \"address2\": \"\",\n                    \"suburbTown\": null,\n                    \"state\": \"NSW\",\n                    \"postcode\": \"2517\",\n                    \"createdAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"updatedAt\": \"2020-07-28T05:22:18.505Z\",\n                    \"ApplicantToRelieUserMappings\": {\n                        \"createdAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"updatedAt\": \"2020-07-28T05:22:18.554Z\",\n                        \"applicantId\": \"5db7346a-9124-409d-91af-bc6776718459\",\n                        \"relieUserId\": \"32c8582d-08dc-470e-afe1-0cb6c90c32de\"\n                    },\n                    \"domainMemberships\": []\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Applicant Details Bertie Bassett",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "927e8c8f-9843-460d-83bb-9849fc226524",
								"exec": [
									"pm.test(\"Get Applicant Details Bertie Bassett - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Bertie Bassett - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Bertie Bassett - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Applicant Details Bertie Bassett - basic contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedApplicationId = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    pm.expect(jsonData.applicationId).to.eql(expectedApplicationId);\r",
									"    pm.expect(jsonData.alias).to.eql(\"Bertie Bassett\");\r",
									"    pm.expect(jsonData.aliasFirstName).to.eql(null);\r",
									"    pm.expect(jsonData.aliasPreferredName).to.eql(null);\r",
									"    pm.expect(jsonData.otherPhoneNumber).to.eql(null);\r",
									"    pm.expect(jsonData.postcode).to.eql(null);\r",
									"    pm.expect(jsonData.ageBracket).to.eql(null);\r",
									"    pm.expect(jsonData.statusCode).to.eql(\"APL_ADDED\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Bertie Bassett - inner details are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforBertie\");\r",
									"    pm.expect(isGuid(jsonData.relieUsers[0].id)).to.eql(true);\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
									"    \r",
									"    pm.expect(jsonData.relieUsers[0].email).to.eql(expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.relieUsers[0].firstName).to.eql(\"Bertie\");\r",
									"    pm.expect(jsonData.relieUsers[0].lastName).to.eql(\"Bassett\");\r",
									"    pm.expect(jsonData.relieUsers[0].mobile).to.eql(null);\r",
									"    pm.expect(jsonData.relieUsers[0].birthDate).to.eql(\"1981-02-27T13:00:00.000Z\");\r",
									"    pm.expect(jsonData.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
									"    pm.expect(jsonData.relieUsers[0].address2).to.eql(\"some place\");\r",
									"    pm.expect(jsonData.relieUsers[0].suburbTown).to.eql(\"Woonona\");\r",
									"    pm.expect(jsonData.relieUsers[0].state).to.eql(\"NSW\");\r",
									"    pm.expect(jsonData.relieUsers[0].postcode).to.eql(\"2517\");\r",
									"\r",
									"    pm.expect(jsonData.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(expectedApplicantId);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Bertie Bassett - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Bertie Bassett - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							},
							{
								"key": "X-Relie-Session",
								"value": "NvCsttHVKsKMIgWYUPTtTS5XAmgsOk87m7MTEFvkonXlR98CLujbxEaZkf3adsve",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId2}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Send Applicant Invite - Alphie Alphabet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "091f4b48-33a1-4981-98a0-32e5503cd06e",
								"exec": [
									"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - email recipients is correct and there is only 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
									"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
									"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId1}}",
								"invite"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Invite Details Alphie Alphabet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0676171-8a1b-4d04-8b74-0ac171333b27",
								"exec": [
									"pm.test(\"Get Assessment Feed for applicant 1 - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invite for applicant 1 - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invite - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invite for applicant 1 - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invite for applicant 1 - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invite for applicant 1 - applicant id is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var applicantId = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
									"    pm.expect(jsonData.applicantId).to.eql(applicantId);\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invite for applicant 1 - invitationSendEvents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.invitationSendEvents[0].invitationId);\r",
									"    pm.expect(jsonData.invitationSendEvents[0].emailedTo).to.eql(expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.invitationSendEvents[0].emailTemplateRef).to.eql(\"applicantInviteInitial\");\r",
									"    pm.expect(jsonData.invitationSendEvents[0].emailErrorMessage).to.eql(null);\r",
									"    pm.expect(isGuid(jsonData.invitationSendEvents[0].id)).to.be.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId1}}",
								"invite"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Send Applicant Invite - Bertie Bassett",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb408140-8f58-4dd1-9d97-3a6c7c10b1ec",
								"exec": [
									"pm.test(\"Send Applicant Invite - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - email recipients is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforBertie = postman.getEnvironmentVariable(\"emailAddressforBertie\");\r",
									"    console.log(\"addressfor bertie +++ \" + expectedEmailAddressforBertie);\r",
									"    pm.expect(jsonData.data.emailRecipients[0]).to.eql(expectedEmailAddressforBertie);\r",
									"    pm.expect(jsonData.data.emailRecipients.length).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - number of applicationAttributeIds is 1 and it is a  GUIDs\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var invitationSendEventIdsArray = jsonData.data.invitationSendEventIds\r",
									"    pm.expect(invitationSendEventIdsArray.length).to.eql(1);\r",
									"    pm.expect(isGuid(invitationSendEventIdsArray[0])).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - response is successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSent).to.eql(true);\r",
									"    pm.expect(jsonData.data.emailSuppressed).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - inner id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(isGuid(jsonData.data.invitationSendEventIds)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Send Applicant Invite - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}/invite",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId2}}",
								"invite"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Invite Details Bertie Bassett",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1da4dc98-77b0-4d23-a358-98fa456d8d22",
								"exec": [
									"pm.test(\"Get Assessment Feed for applicant 2 - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invite for applicant 2 - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invite for applicant 2 - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invite for applicant 2 - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invite for applicant 2 - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invite for applicant 2 - applicant id is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var applicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
									"    pm.expect(jsonData.applicantId).to.eql(applicantId);\r",
									"});\r",
									"\r",
									"pm.test(\"Check Invite for applicant 2 - invitationSendEvents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforBertie\");\r",
									"    pm.expect(jsonData.id).to.eql(jsonData.invitationSendEvents[0].invitationId);\r",
									"    pm.expect(jsonData.invitationSendEvents[0].emailedTo).to.eql(expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.invitationSendEvents[0].emailTemplateRef).to.eql(\"applicantInviteInitial\");\r",
									"    pm.expect(jsonData.invitationSendEvents[0].emailErrorMessage).to.eql(null);\r",
									"    pm.expect(isGuid(jsonData.invitationSendEvents[0].id)).to.be.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}/invite",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId2}}",
								"invite"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Application Details After Inviting 2 users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1af4783-d1f2-4e37-ad0a-0eb356321220",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
									"\r",
									"pm.test(\"Get Application after 2 invites - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application after 2 invites - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application after 2 invites - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application after 2 invites - status code is pending\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application after 2 invites - Total of exactly 2 applicant\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants.length).to.eql(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application after 2 invites - 1st applicant has good data\", function () {\r",
									"    var emailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforAlphie\");\r",
									"   \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants[0].alias).to.eql(\"Alphie Alphabet\");\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].email).to.eql(emailAddressforAlphie);\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].firstName).to.eql(\"Alphie\");\r",
									"    pm.expect(jsonData.applicants[0].relieUsers[0].lastName).to.eql(\"Alphabet\");\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application after 2 invites - 2nd applicant has good data\", function () {\r",
									"    var emailAddressforBertie = postman.getEnvironmentVariable(\"emailAddressforBertie\");\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.applicants[1].alias).to.eql(\"Bertie Bassett\");\r",
									"    pm.expect(jsonData.applicants[1].relieUsers[0].email).to.eql(emailAddressforBertie);\r",
									"    pm.expect(jsonData.applicants[1].relieUsers[0].firstName).to.eql(\"Bertie\");\r",
									"    pm.expect(jsonData.applicants[1].relieUsers[0].lastName).to.eql(\"Bassett\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "23a667b5-7fb3-4eb6-b44c-1e9f2eada6ef",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{RA_ApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Feed with no feed elements",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe4a2d53-3b85-4cad-abbf-0e17fe3f5580",
								"exec": [
									"pm.test(\"Get Assessment Feed - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Feed - basic contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedassessmentId = postman.getEnvironmentVariable(\"RA_AssessmentId\");\r",
									"    pm.expect(jsonData.assessmentId).to.eql(expectedassessmentId);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/{{RA_AssessmentId}}/feed?includeComponents=asssessment, snapshot, insightSummaries, flag",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"{{RA_AssessmentId}}",
								"feed"
							],
							"query": [
								{
									"key": "includeComponents",
									"value": "asssessment, snapshot, insightSummaries, flag"
								}
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Feed Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b538068-4d22-4a72-b6d0-4273471098f4",
								"exec": [
									"pm.test(\"Get Assessment Feed - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/feed",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"feed"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Feed Copy with attributes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b6f1cab-7a4c-4000-aab1-b11952248e62",
								"exec": [
									"pm.test(\"Get Assessment Feed - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/f349d7cf-2bb5-40bf-a209-1529e298978c?includeComponents=snapshotInsights, insightSummaries",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"f349d7cf-2bb5-40bf-a209-1529e298978c"
							],
							"query": [
								{
									"key": "includeComponents",
									"value": "snapshotInsights, insightSummaries"
								}
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Feed Copy with attributes Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba8adf37-11c7-4399-89b1-4a37ebf016b9",
								"exec": [
									"pm.test(\"Get Assessment Feed - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Feed - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/904bd996/feed",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"904bd996",
								"feed"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "POST Assessment Report Excel - Specific Assesssment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7d6cfd8-940a-4b80-9df7-b77641276eb8",
								"exec": [
									"pm.test(\"Get Assessment Report Excel - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - key, expiringURL, expiresAt, md5FileHash are present \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('key','expiringUrl','expiresAt','fileHashMd5');\r",
									"    pm.expect(jsonData.key.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiringUrl.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiresAt.length).to.be.above(10);\r",
									"    pm.expect(jsonData.fileHashMd5.length).to.be.above(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"reportType\": \"excel\",\r\n    \"reportRenderOpts\": {\r\n      \"collapsibleGroups\": false,\r\n      \"customReportTitle\":null,\r\n      \"sheetTransactions\":false,\r\n      \"showConnectionSummary\": false,\r\n      \"transactionOrderingDir\": \"desc\",\r\n      \"transactionOrderingKey\": \"date\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "POST Assessment Report PDF  - Specific Assesssment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bdc27a75-ccf4-4a45-b854-0bdd9f7f2c47",
								"exec": [
									"pm.test(\"Get Assessment Report PDF - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - key, expiringURL, expiresAt, md5FileHash are present \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('key','expiringUrl','expiresAt','fileHashMd5');\r",
									"    pm.expect(jsonData.key.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiringUrl.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiresAt.length).to.be.above(10);\r",
									"    pm.expect(jsonData.fileHashMd5.length).to.be.above(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF  - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reportType\": \"pdfsum\",\r\n    \"reportRenderOpts\": {\r\n      \"graphics\": \"standard\",\r\n      \"hideApplicants\": false,\r\n      \"hideAssessmentNotes\": false,\r\n      \"hideTransactionRowCategory\": false,\r\n      \"hideTransactionRowClassifications\": false,\r\n      \"hideTransactionRowEditMarks\": false,\r\n      \"includeCategoryExpensesBreakdownSignatureArea\": true,\r\n      \"includeInsightNoteSignatureArea\": true,\r\n      \"includeTransactionNoteSignatureArea\": true,\r\n      \"pageColorScheme\": \"default\",\r\n      \"showApplicantAddress\": false,\r\n      \"showApplicantEmailAddress\": true,\r\n      \"showAuthorEmailAddress\": false,\r\n      \"showConnectionSummary\": true,\r\n      \"showSummaryReportFinancial\": true,\r\n      \"showSummaryReportFinancialPercentage\": false,\r\n      \"showSummaryReportFinancialSubcategories\": false,\r\n      \"showSummaryReportInsights\": true,\r\n      \"showSummaryReportOverridesHistory\": false,\r\n      \"showSummaryReportTransactionNotes\": true,\r\n      \"transactionGroupingDisplay\": \"category\",\r\n      \"transactionOrderingDir\": \"desc\",\r\n      \"transactionOrderingKey\": \"date\",\r\n      \"transactionRowSpacing\": \"normal\",\r\n      \"useApplicantAliasName\": false\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "POST Assessment Report PDF TXN - Specific Assesssment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "42eafbd1-7317-459e-8d51-cebd11d19142",
								"exec": [
									"pm.test(\"Get Assessment Report PDF TXN - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - key, expiringURL, expiresAt, md5FileHash are present \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('key','expiringUrl','expiresAt','fileHashMd5');\r",
									"    pm.expect(jsonData.key.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiringUrl.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiresAt.length).to.be.above(10);\r",
									"    pm.expect(jsonData.fileHashMd5.length).to.be.above(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"reportType\": \"pdftxn\",\r\n    \"reportRenderOpts\": {\r\n      \"graphics\": \"standard\",\r\n      \"hideApplicants\": false,\r\n      \"hideAssessmentNotes\": false,\r\n      \"hideTransactionRowCategory\": false,\r\n      \"hideTransactionRowClassifications\": false,\r\n      \"hideTransactionRowEditMarks\": false,\r\n      \"pageColorScheme\": \"default\",\r\n      \"showApplicantAddress\": false,\r\n      \"showApplicantEmailAddress\": true,\r\n      \"showAuthorEmailAddress\": false,\r\n      \"showConnectionSummary\": true,\r\n      \"transactionGroupingDisplay\": \"category\",\r\n      \"transactionOrderingDir\": \"desc\",\r\n      \"transactionOrderingKey\": \"date\",\r\n      \"transactionRowSpacing\": \"normal\",\r\n      \"useApplicantAliasName\": false\r\n    }\r\n  }",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Applicant - Alphie Alphabet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de4f0967-44b2-408c-b5c6-3482c9503566",
								"exec": [
									"pm.test(\"Delete Applicant - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Applicant  - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Applicant - id is a GUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Applicant - id is GUID of applicant 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedguidforApplicant1 = postman.getEnvironmentVariable(\"RA_ApplicantId1\");\r",
									"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.id).to.eql(expectedguidforApplicant1);\r",
									"    \r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId1}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId} (Delete Applicant - Hayley Walsh)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId2}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:51 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "fzpNnxtjuUMIlz1pYCn8YKndkVUkdEgMMLrqg6DVwB0CSX3vEWcUEkSZkd5ibh22"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXngOGvNSwMF4Gg="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 0b26d7ef0f265884570bdb3e6c3750b0.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "df3a54cc-2631-4c6e-bb3a-8d6042498fbf"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb934-4f5063b038b0867c47f3a538"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "YAv2qSrmc8ZKWqR_1SCDy3TjI93mT86tPl9Kda8IV2DjVHjPP1g9Iw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"4c060125-8704-4639-9ef3-b07e1994e5e7\"\n}"
						}
					]
				},
				{
					"name": "Delete Applicant - Bertie Basset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "921a08a7-72f1-47d6-8d28-094945326b5c",
								"exec": [
									"pm.test(\"Delete Applicant - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Applicant - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Applicant  - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Applicant - id is a GUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Delete Applicant - id is GUID of applicant 2\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedguidforApplicant1 = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
									"    //console.log(\"addressfor alphie +++ \" + expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.id).to.eql(expectedguidforApplicant1);\r",
									"    \r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId2}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId} (Delete Applicant - Hayley Walsh)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId2}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:51 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "fzpNnxtjuUMIlz1pYCn8YKndkVUkdEgMMLrqg6DVwB0CSX3vEWcUEkSZkd5ibh22"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXngOGvNSwMF4Gg="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 0b26d7ef0f265884570bdb3e6c3750b0.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "df3a54cc-2631-4c6e-bb3a-8d6042498fbf"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb934-4f5063b038b0867c47f3a538"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "YAv2qSrmc8ZKWqR_1SCDy3TjI93mT86tPl9Kda8IV2DjVHjPP1g9Iw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"4c060125-8704-4639-9ef3-b07e1994e5e7\"\n}"
						}
					]
				},
				{
					"name": "Get Applicant Details Bertie Bassett After Deletion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd2ad8ae-918a-4b7c-8652-6d6d10e19c53",
								"exec": [
									"pm.test(\"Get Applicant Details Bertie Bassett - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Bertie Bassett - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Bertie Bassett - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(15000);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Applicant Details Bertie Bassett - basic contents are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedApplicationId = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    pm.expect(jsonData.applicationId).to.eql(expectedApplicationId);\r",
									"    pm.expect(jsonData.alias).to.eql(\"Bertie Bassett\");\r",
									"    pm.expect(jsonData.aliasFirstName).to.eql(null);\r",
									"    pm.expect(jsonData.aliasPreferredName).to.eql(null);\r",
									"    pm.expect(jsonData.otherPhoneNumber).to.eql(null);\r",
									"    pm.expect(jsonData.postcode).to.eql(null);\r",
									"    pm.expect(jsonData.ageBracket).to.eql(null);\r",
									"    pm.expect(jsonData.statusCode).to.eql(\"APL_ADDED\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Bertie Bassett - inner details are correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedEmailAddressforAlphie = postman.getEnvironmentVariable(\"emailAddressforBertie\");\r",
									"    pm.expect(isGuid(jsonData.relieUsers[0].id)).to.eql(true);\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedApplicantId = postman.getEnvironmentVariable(\"RA_ApplicantId2\");\r",
									"    \r",
									"    pm.expect(jsonData.relieUsers[0].email).to.eql(expectedEmailAddressforAlphie);\r",
									"    pm.expect(jsonData.relieUsers[0].firstName).to.eql(\"Bertie\");\r",
									"    pm.expect(jsonData.relieUsers[0].lastName).to.eql(\"Bassett\");\r",
									"    pm.expect(jsonData.relieUsers[0].mobile).to.eql(null);\r",
									"    pm.expect(jsonData.relieUsers[0].birthDate).to.eql(\"1981-02-27T13:00:00.000Z\");\r",
									"    pm.expect(jsonData.relieUsers[0].address1).to.eql(\"26 Mountain Ave\");\r",
									"    pm.expect(jsonData.relieUsers[0].address2).to.eql(\"some place\");\r",
									"    pm.expect(jsonData.relieUsers[0].suburbTown).to.eql(\"Woonona\");\r",
									"    pm.expect(jsonData.relieUsers[0].state).to.eql(\"NSW\");\r",
									"    pm.expect(jsonData.relieUsers[0].postcode).to.eql(\"2517\");\r",
									"\r",
									"    pm.expect(jsonData.relieUsers[0].ApplicantToRelieUserMappings.applicantId).to.eql(expectedApplicantId);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Bertie Bassett - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Applicant Details Bertie Bassett - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							},
							{
								"key": "X-Relie-Session",
								"value": "NvCsttHVKsKMIgWYUPTtTS5XAmgsOk87m7MTEFvkonXlR98CLujbxEaZkf3adsve",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId2}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applicants",
								"{{RA_ApplicantId2}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Application Details -  should be empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0697d02-cee3-4fad-b234-9fe359eb9d61",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"//postman.setEnvironmentVariable(\"RA_AssessmentId\", jsonData.assessments[0].id);\r",
									"\r",
									"pm.test(\"Get Application - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - outer id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Create New Application - first assessment id is a UUID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.assessments[0].id)).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Application - checking contents of the first assessment id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedRAApplicationIdValue = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    var expectedTitleValue = postman.getEnvironmentVariable(\"titleValue\") + \" + updated\";\r",
									"    var expectedDomainId = postman.getEnvironmentVariable(\"RA_DomainId\");\r",
									"    var expectedDescriptionValue = postman.getEnvironmentVariable(\"descriptionValue\");\r",
									"\r",
									"    pm.expect(jsonData.id).to.eql(expectedRAApplicationIdValue);\r",
									"    pm.expect(jsonData.assessments[0].applicationId).to.eql(expectedRAApplicationIdValue);\r",
									"    \r",
									"    pm.expect(jsonData.assessments[0].statusCode).to.eql(\"ASS_PENDING\");\r",
									"    console.log(expectedTitleValue);\r",
									"    pm.expect(jsonData.title).to.eql(expectedTitleValue);\r",
									"    \r",
									"    pm.expect(jsonData.domainId).to.eql(expectedDomainId);\r",
									"    \r",
									"    pm.expect(jsonData.domain.id).to.eql(expectedDomainId);\r",
									"    pm.expect(jsonData.description).to.eql(expectedDescriptionValue + \" + updated\");\r",
									"    pm.expect(jsonData.applicants.length).to.eql(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Content-Type header has a specific value - \\\"application/json; charset=UTF-8\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Application - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fb80480a-ba5a-4a15-9fbf-2683781d2b12",
								"exec": [
									"postman.setEnvironmentVariable(\"titleValue\",\"TFAL Test - BS and HW Investment Property\");\r",
									"postman.setEnvironmentVariable(\"descriptionValue\",\"BS and HW Walsh joint loan\");\r",
									"postman.setEnvironmentVariable(\"purposeValue\",\"Fund investment property procurement.\");\r",
									"postman.setEnvironmentVariable(\"externalReference1Value\",\"Example systems reference 1\");\r",
									"postman.setEnvironmentVariable(\"externalReference2Value\",\"Example systems reference 2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{RA_ApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications (Create New)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\":\"TFAL Test - BS and HW Investment Property\",\n  \"domainId\": \"{{RA_DomainId}}\",\n  \"description\": \"BS and HW Walsh joint loan\",\n  \"purpose\": \"Fund investment property procurement.\",\n  \"externalReference1\": \"Example systems reference 1\",\n  \"externalReference2\": \"Example systems reference 1\"\n}"
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "1410"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 04:01:58 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "Q3S6hkdAgdw0R8Ru4tfAj3GbpVAMW0Al81t2C5PIiJ0A5HSsI52pY5AZkd5eyq15"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXZwaHyPywMFv3g="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 7c4c2286abc7fc5145c880b21a28bb47.cloudfront.net (CloudFront), 1.1 2d7b0cb3d88a38e28197d652a1c17a32.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "2ae22044-c7ca-43d6-938c-f5577d058b87"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fa335-87abe079843897a32f8d55de"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "MEL50"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "vHY6ed4NfK42mz6Q8s6mRo4rjjwtHviuM5GHwx0VkwMgEhzftAcODg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"application\": {\n            \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n            \"title\": \"TFAL Test - BS and HW Investment Property\",\n            \"domainId\": \"2fe48fb4-9c98-434d-974f-e870473f7019\",\n            \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n            \"externalReference1\": \"Example systems reference 1\",\n            \"externalReference2\": \"Example systems reference 1\",\n            \"purpose\": \"Fund investment property procurement.\",\n            \"financeType\": null,\n            \"description\": \"BS and HW Walsh joint loan\",\n            \"financeAmount\": null,\n            \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n            \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n            \"createdAt\": \"2020-07-28T04:01:58.109Z\",\n            \"updatedAt\": \"2020-07-28T04:01:58.389Z\",\n            \"deletedAt\": null,\n            \"latestStatusShortcode\": null,\n            \"latestStatusId\": null,\n            \"externalRefId\": \"07c3964f-b5ff-4883-b584-ccac465b8502\",\n            \"externalRefDesc\": \"RD\",\n            \"deletedById\": null,\n            \"xmax\": false,\n            \"assessments\": [\n                {\n                    \"id\": \"50371aef-49ca-48e1-bcdd-898d6a584f87\",\n                    \"title\": \"Initial\",\n                    \"tranHistoryStartDate\": \"2019-07-28T00:00:00.000Z\",\n                    \"tranHistoryEndDate\": \"2020-07-27T23:59:59.000Z\",\n                    \"status\": \"Created\",\n                    \"applicationId\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n                    \"createdById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"updatedById\": \"fca31cce-6b4c-4de6-ba71-94ced30e0863\",\n                    \"createdAt\": \"2020-07-28T04:01:58.394Z\",\n                    \"updatedAt\": \"2020-07-28T04:01:58.396Z\",\n                    \"deletedAt\": null,\n                    \"deletedById\": null,\n                    \"xmax\": true\n                }\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d4cb5b4-c414-47c6-b9ba-21fd5fbd7402",
								"exec": [
									"pm.test(\"Delete Application  - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Application - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
									"});\r",
									"\r",
									"pm.test(\"Delete Application - id is a GUID and success is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(isGuid(jsonData.id)).to.eql(true);\r",
									"    pm.expect(jsonData.success).to.eql(true);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Delete Application - id is GUID of application\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedguidforApplication = postman.getEnvironmentVariable(\"RA_ApplicationId\");\r",
									"    pm.expect(jsonData.id).to.eql(expectedguidforApplication);\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"applications",
								"{{RA_ApplicationId}}"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applications/{applicationId} (Delete Application)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applications/{{RA_ApplicationId}}",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applications",
										"{{RA_ApplicationId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "630"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:36:51 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "72k52GCOLKXT0dmzCiSyFPhUJKVB2y3GxL8EpDKwYeLBvlETjpzMwsJZkd5icrc4"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnpnFF2SwMF0RA="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 eda9fe2763cea4a982a09ceb352512a6.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "4cda3174-8e48-402d-b3f0-79575943d1e8"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb970-e191a70812700b81e9c326a1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "o-gnkAHtCs9niIE5Qq8p79MgYn4P3NRqFG5q9-QifRSiqM1VInsEqg=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"1610cf49-63c2-4d59-9f28-9b1b62beae0c\",\n    \"data\": {\n        \"affectedRecordsCount\": {\n            \"connActionEvents\": 0,\n            \"connRequests\": 0,\n            \"noteThreads\": 0,\n            \"invitationSendEvents\": 0,\n            \"conns\": 0,\n            \"relieUserAssociations\": 0,\n            \"invitations\": 0,\n            \"notes\": 0,\n            \"applDocumentStorageMappings\": 0,\n            \"applicants\": \"001\",\n            \"classNessOverrides\": 0,\n            \"classFreqOverrides\": 0,\n            \"categoryOverrides\": 0,\n            \"bankAccountBlacklists\": 0,\n            \"txnNAFlags\": 0,\n            \"txnAllocations\": 0,\n            \"txnMarkups\": 0,\n            \"assessmentEditingSessions\": 0,\n            \"assessmentChangeLogs\": 0,\n            \"wizardStepTrackings\": 0,\n            \"assessments\": \"001\",\n            \"assDocumentStorageMappings\": 0,\n            \"assessmentSettings\": 0,\n            \"assessmentSnapshots\": 0,\n            \"assessmentEstimates\": 0\n        }\n    }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Report Test API calls",
			"item": [
				{
					"name": "Get Assessment Report Excel -  Basic Rep TC1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4a5c1ad-5ebb-47a2-aa92-3d77fb2c37f5",
								"exec": [
									"pm.test(\"Get Assessment Report Excel - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - key, expiringURL, expiresAt, md5FileHash are present \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('key','expiringUrl','expiresAt','fileHashMd5');\r",
									"    pm.expect(jsonData.key.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiringUrl.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiresAt.length).to.be.above(10);\r",
									"    pm.expect(jsonData.fileHashMd5.length).to.be.above(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"reportType\": \"excel\",\r\n    \"reportRenderOpts\": {\r\n      \"collapsibleGroups\": false,\r\n      \"sheetTransactions\": false,\r\n      \"showConnectionSummary\": false,\r\n      \"transactionOrderingDir\": \"desc\",\r\n      \"transactionOrderingKey\": \"date\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Report Excel -  Basic Rep TC2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d334050-f845-4e13-8e03-ff1c6945fbff",
								"exec": [
									"pm.test(\"Get Assessment Report Excel - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - key, expiringURL, expiresAt, md5FileHash are present \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('key','expiringUrl','expiresAt','fileHashMd5');\r",
									"    pm.expect(jsonData.key.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiringUrl.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiresAt.length).to.be.above(10);\r",
									"    pm.expect(jsonData.fileHashMd5.length).to.be.above(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"reportType\": \"excel\",\r\n    \"reportRenderOpts\": {\r\n      \"collapsibleGroups\": true,\r\n      \"customReportTitle\" : \"My report value\",\r\n      \"sheetTransactions\": \"true\",\r\n      \"showConnectionSummary\": true,\r\n      \"transactionOrderingDir\": \"asc\",\r\n      \"transactionOrderingKey\": \"alphabetical\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Report Excel -  Basic Rep TC3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d332a44-15ce-4f1b-90c1-dd5466da588b",
								"exec": [
									"pm.test(\"Get Assessment Report Excel - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - key, expiringURL, expiresAt, md5FileHash are present \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('key','expiringUrl','expiresAt','fileHashMd5');\r",
									"    pm.expect(jsonData.key.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiringUrl.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiresAt.length).to.be.above(10);\r",
									"    pm.expect(jsonData.fileHashMd5.length).to.be.above(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report Excel - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"reportType\": \"excel\",\r\n    \"reportRenderOpts\": {\r\n      \"collapsibleGroups\": true,\r\n      \"customReportTitle\" : \"My report value\",\r\n      \"sheetTransactions\": \"true\",\r\n      \"showConnectionSummary\": true,\r\n      \"transactionOrderingDir\": \"asc\",\r\n      \"transactionOrderingKey\": \"amount\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Report PDF  - Basic Rep TC4",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1df30eaa-47fc-45b4-88da-0464cce357d3",
								"exec": [
									"pm.test(\"Get Assessment Report PDF - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - key, expiringURL, expiresAt, md5FileHash are present \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('key','expiringUrl','expiresAt','fileHashMd5');\r",
									"    pm.expect(jsonData.key.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiringUrl.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiresAt.length).to.be.above(10);\r",
									"    pm.expect(jsonData.fileHashMd5.length).to.be.above(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF  - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reportType\": \"pdfsum\",\r\n    \"reportRenderOpts\": {\r\n      \"customReportTitle\":null,\r\n      \"graphics\": \"reduced\",\r\n      \"hideApplicants\": false,\r\n      \"hideAssessmentNotes\": false,\r\n      \"hideTransactionRowCategory\": false,\r\n      \"hideTransactionRowClassifications\": false,\r\n      \"hideTransactionRowEditMarks\": false,\r\n      \"includeCategoryExpensesBreakdownSignatureArea\": false,\r\n      \"includeInsightNoteSignatureArea\": true,\r\n      \"includeTransactionNoteSignatureArea\": true,\r\n      \"pageColorScheme\": \"default\",\r\n      \"showApplicantAddress\": false,\r\n      \"showApplicantEmailAddress\": false,\r\n      \"showAuthorEmailAddress\": false,\r\n      \"showConnectionSummary\": false,\r\n      \"showSummaryReportFinancial\": false,\r\n      \"showSummaryReportFinancialPercentage\": false,\r\n      \"showSummaryReportFinancialSubcategories\": false,\r\n      \"showSummaryReportInsights\": false,\r\n      \"showSummaryReportOverridesHistory\": false,\r\n      \"showSummaryReportTransactionNotes\": false,\r\n      \"transactionGroupingDisplay\": \"category\",\r\n      \"transactionOrderingDir\": \"asc\",\r\n      \"transactionOrderingKey\": \"date\",\r\n      \"transactionRowSpacing\": \"normal\",\r\n      \"useApplicantAliasName\": false\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Report PDF  - Basic Rep TC5",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e263dde-8337-4f85-b9d4-496312570c8a",
								"exec": [
									"pm.test(\"Get Assessment Report PDF - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - key, expiringURL, expiresAt, md5FileHash are present \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('key','expiringUrl','expiresAt','fileHashMd5');\r",
									"    pm.expect(jsonData.key.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiringUrl.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiresAt.length).to.be.above(10);\r",
									"    pm.expect(jsonData.fileHashMd5.length).to.be.above(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF  - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reportType\": \"pdfsum\",\r\n    \"reportRenderOpts\": {\r\n      \"customReportTitle\":\"My Report title\",\r\n      \"graphics\": \"standard\",\r\n      \"hideApplicants\": true,\r\n      \"hideAssessmentNotes\": true,\r\n      \"hideTransactionRowCategory\": true,\r\n      \"hideTransactionRowClassifications\": true,\r\n      \"hideTransactionRowEditMarks\": true,\r\n      \"includeCategoryExpensesBreakdownSignatureArea\": true,\r\n      \"includeInsightNoteSignatureArea\": true,\r\n      \"includeTransactionNoteSignatureArea\": true,\r\n      \"pageColorScheme\": \"colour\",\r\n      \"showApplicantAddress\": true,\r\n      \"showApplicantEmailAddress\": true,\r\n      \"showAuthorEmailAddress\": true,\r\n      \"showConnectionSummary\": true,\r\n      \"showSummaryReportFinancial\": true,\r\n      \"showSummaryReportFinancialPercentage\": true,\r\n      \"showSummaryReportFinancialSubcategories\": true,\r\n      \"showSummaryReportInsights\": true,\r\n      \"showSummaryReportOverridesHistory\": true,\r\n      \"showSummaryReportTransactionNotes\": true,\r\n      \"transactionGroupingDisplay\": \"ungrouped\",\r\n      \"transactionOrderingDir\": \"desc\",\r\n      \"transactionOrderingKey\": \"alphabetical\",\r\n      \"transactionRowSpacing\": \"tight\",\r\n      \"useApplicantAliasName\": true\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Report PDF  - Basic Rep TC6",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be9bd8d2-de5b-4677-a7f1-d6fd4067523f",
								"exec": [
									"pm.test(\"Get Assessment Report PDF - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF - key, expiringURL, expiresAt, md5FileHash are present \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('key','expiringUrl','expiresAt','fileHashMd5');\r",
									"    pm.expect(jsonData.key.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiringUrl.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiresAt.length).to.be.above(10);\r",
									"    pm.expect(jsonData.fileHashMd5.length).to.be.above(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF  - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reportType\": \"pdfsum\",\r\n    \"reportRenderOpts\": {\r\n       \"customReportTitle\":\"My PDF sum report 1\",\r\n      \"graphics\": \"high\",\r\n      \"hideApplicants\": true,\r\n      \"hideAssessmentNotes\": true,\r\n      \"hideTransactionRowCategory\": true,\r\n      \"hideTransactionRowClassifications\": true,\r\n      \"hideTransactionRowEditMarks\": true,\r\n      \"includeCategoryExpensesBreakdownSignatureArea\": true,\r\n      \"includeInsightNoteSignatureArea\": true,\r\n      \"includeTransactionNoteSignatureArea\": true,\r\n      \"pageColorScheme\": \"bw\",\r\n      \"showApplicantAddress\": true,\r\n      \"showApplicantEmailAddress\": true,\r\n      \"showAuthorEmailAddress\": true,\r\n      \"showConnectionSummary\": true,\r\n      \"showSummaryReportFinancial\": true,\r\n      \"showSummaryReportFinancialPercentage\": true,\r\n      \"showSummaryReportFinancialSubcategories\": true,\r\n      \"showSummaryReportInsights\": true,\r\n      \"showSummaryReportOverridesHistory\": true,\r\n      \"showSummaryReportTransactionNotes\": true,\r\n      \"transactionGroupingDisplay\": \"ungrouped\",\r\n      \"transactionOrderingDir\": \"desc\",\r\n      \"transactionOrderingKey\": \"amount\",\r\n      \"transactionRowSpacing\": \"loose\",\r\n      \"useApplicantAliasName\": true\r\n    }\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Report PDF TXN - Basic Rep TC7",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3d554a5-6a48-48ac-82de-b2acccad03c7",
								"exec": [
									"pm.test(\"Get Assessment Report PDF TXN - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - key, expiringURL, expiresAt, md5FileHash are present \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('key','expiringUrl','expiresAt','fileHashMd5');\r",
									"    pm.expect(jsonData.key.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiringUrl.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiresAt.length).to.be.above(10);\r",
									"    pm.expect(jsonData.fileHashMd5.length).to.be.above(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"reportType\": \"pdftxn\",\r\n    \"reportRenderOpts\": {\r\n      \"customReportTitle\":null,\r\n      \"graphics\": \"standard\",\r\n      \"hideApplicants\": false,\r\n      \"hideAssessmentNotes\": false,\r\n      \"hideTransactionRowCategory\": false,\r\n      \"hideTransactionRowClassifications\": false,\r\n      \"hideTransactionRowEditMarks\": false,\r\n      \"pageColorScheme\": \"default\",\r\n      \"showApplicantAddress\": false,\r\n      \"showApplicantEmailAddress\": false,\r\n      \"showAuthorEmailAddress\": false,\r\n      \"transactionGroupingDisplay\": \"category\",\r\n      \"transactionOrderingDir\": \"desc\",\r\n      \"transactionOrderingKey\": \"date\",\r\n      \"transactionRowSpacing\": \"normal\",\r\n      \"useApplicantAliasName\": false\r\n    }\r\n  }",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Report PDF TXN - Basic Rep TC8",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29eddadc-32af-4611-ae91-5c769edbe0bd",
								"exec": [
									"pm.test(\"Get Assessment Report PDF TXN - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - key, expiringURL, expiresAt, md5FileHash are present \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('key','expiringUrl','expiresAt','fileHashMd5');\r",
									"    pm.expect(jsonData.key.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiringUrl.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiresAt.length).to.be.above(10);\r",
									"    pm.expect(jsonData.fileHashMd5.length).to.be.above(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"reportType\": \"pdftxn\",\r\n    \"reportRenderOpts\": {\r\n      \"customReportTitle\":\"Report TC 8\",\r\n      \"graphics\": \"reduced\",\r\n      \"hideApplicants\": true,\r\n      \"hideAssessmentNotes\": true,\r\n      \"hideTransactionRowCategory\": true,\r\n      \"hideTransactionRowClassifications\": true,\r\n      \"hideTransactionRowEditMarks\": true,\r\n      \"pageColorScheme\": \"colour\",\r\n      \"showApplicantAddress\": true,\r\n      \"showApplicantEmailAddress\": true,\r\n      \"showAuthorEmailAddress\": true,\r\n      \"showConnectionSummary\": true,\r\n      \"transactionGroupingDisplay\": \"ungrouped\",\r\n      \"transactionOrderingDir\": \"asc\",\r\n      \"transactionOrderingKey\": \"alphabetical\",\r\n      \"transactionRowSpacing\": \"tight\",\r\n      \"useApplicantAliasName\": true\r\n    }\r\n  }",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get Assessment Report PDF TXN - Basic Rep TC9",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48f89efb-7e9f-4455-8d64-2a40a8743406",
								"exec": [
									"pm.test(\"Get Assessment Report PDF TXN - Status code is 200\", function () {\r",
									"    //var foundjsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Status code name has string set to OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Response time is less than 10000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - key, expiringURL, expiresAt, md5FileHash are present \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys('key','expiringUrl','expiresAt','fileHashMd5');\r",
									"    pm.expect(jsonData.key.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiringUrl.length).to.be.above(10);\r",
									"    pm.expect(jsonData.expiresAt.length).to.be.above(10);\r",
									"    pm.expect(jsonData.fileHashMd5.length).to.be.above(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Content-Type header is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Get Assessment Report PDF TXN  - Content-Type header has a specific value - \\\"application/json\\\"\", function () {\r",
									"    pm.response.to.be.header(\"Content-Type\",\"application/json\");\r",
									"});\r",
									"\r",
									"function isGuid(stringToTest) {\r",
									"    if (stringToTest[0] === \"{\") {\r",
									"        stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r",
									"    }\r",
									"    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r",
									"    return regexGuid.test(stringToTest);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{RI_AuthIDToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"reportType\": \"pdftxn\",\r\n    \"reportRenderOpts\": {\r\n      \"customReportTitle\":\"Report TC 9\",\r\n      \"graphics\": \"high\",\r\n      \"hideApplicants\": true,\r\n      \"hideAssessmentNotes\": true,\r\n      \"hideTransactionRowCategory\": true,\r\n      \"hideTransactionRowClassifications\": true,\r\n      \"hideTransactionRowEditMarks\": true,\r\n      \"pageColorScheme\": \"bw\",\r\n      \"showApplicantAddress\": true,\r\n      \"showApplicantEmailAddress\": true,\r\n      \"showAuthorEmailAddress\": true,\r\n      \"showConnectionSummary\": true,\r\n      \"transactionGroupingDisplay\": \"ungrouped\",\r\n      \"transactionOrderingDir\": \"asc\",\r\n      \"transactionOrderingKey\": \"amount\",\r\n      \"transactionRowSpacing\": \"normal\",\r\n      \"useApplicantAliasName\": true\r\n    }\r\n  }",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://{{RA_Host}}/api/assessments/cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90/report",
							"protocol": "https",
							"host": [
								"{{RA_Host}}"
							],
							"path": [
								"api",
								"assessments",
								"cd8457ee-ae9c-4e0b-9290-b83f1c7e9e90",
								"report"
							]
						}
					},
					"response": [
						{
							"name": "https://{{Host}}/api/applicants/{applicantId}/invite (Send Applicant Invite - Brett Strong)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{RI_AuthIDToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{RA_Host}}/api/applicants/{{RA_ApplicantId1}}/invite",
									"protocol": "https",
									"host": [
										"{{RA_Host}}"
									],
									"path": [
										"api",
										"applicants",
										"{{RA_ApplicantId1}}",
										"invite"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "218"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "CloudFront"
								},
								{
									"key": "Date",
									"value": "Tue, 28 Jul 2020 05:35:04 GMT"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For,X-Relie-Session,X-Relie-Intercept-Source"
								},
								{
									"key": "X-Relie-Session",
									"value": "bsasQULwHNEb9ilwNFODCbsIo0PYBzsayble20aNmi6zNh0A01F9JW0Zkd5iafro"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "QXnYTHioywMFWPQ="
								},
								{
									"key": "X-Relie-Access-Control-Allow-Origin",
									"value": "https://reliecheck.qa.opica.cloud"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Relie-Session,X-Relie-Intercept-Source,Cookie,Set-Cookie,Content-Type"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Via",
									"value": "1.1 bc447bebac6752b9d1351a9e5ee7d13b.cloudfront.net (CloudFront), 1.1 f1d7bef7d2e148025cea4670117d1f4a.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "origin"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubdomains; preload"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Security-Policy",
									"value": "frame-ancestors 'none'"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "a01ec5a7-dbd1-49e1-bfdd-be10cb7f8943"
								},
								{
									"key": "X-Amzn-Trace-Id",
									"value": "Root=1-5f1fb901-3a5a562c55cc452aac56a79c"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C1"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "SYD1-C2"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "nh9uP3uryrocKBCAmH_w3YfkNHxV4NqfzpEExovEjhQ8NdxlUChspw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"22f5b40e-9a6e-41be-8273-ad1df487d1bb\",\n    \"data\": {\n        \"emailRecipients\": [\n            \"bre.strong@test.com\"\n        ],\n        \"emailSent\": true,\n        \"emailSuppressed\": false,\n        \"invitationSendEventIds\": [\n            \"c338367f-398e-4099-97c7-453463fbc1fb\"\n        ]\n    }\n}"
						}
					]
				}
			],
			"description": "A folder to hold the report test API calls",
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}